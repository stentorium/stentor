version: 2
defaults: &defaults
  working_directory: ~/repo
  docker:
    - image: cimg/node:18.20.3

jobs:
  checkout:
    <<: *defaults
    steps:
      - checkout
      # Download and cache dependencies
      # https://circleci.com/docs/2.0/caching/#yarn-node
      - restore_cache:
          keys:
            # when lock file changes, use increasingly general patterns to restore cache
            - yarn-packages-v2-{{ .Branch }}-{{ checksum "yarn.lock" }}
            - yarn-packages-v2-{{ .Branch }}-
            - yarn-packages-v2-
      - run:
          name: Install Dependencies
          command: yarn --frozen-lockfile --cache-folder ~/.cache/yarn
      - save_cache:
          paths:
            - ~/.cache/yarn
          key: yarn-packages-v2-{{ .Branch }}-{{ checksum "yarn.lock" }}
      - persist_to_workspace:
          root: ~/repo
          paths:
            - .git/*
            - .npmrc
            - .nycrc
            - .nyc_output/*
            - test/mocha.opts
            - scripts/*
            - node_modules/*
            - packages/*
            - package.json
            - README.md
            - tsconfig.json
            - lerna.json
            - .eslintignore
            - .eslintrc.js
            - .yarnrc
  build:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: Build
          command: yarn build
      # Need to persist the generated .js and d.ts files
      - persist_to_workspace:
          root: ~/repo
          paths:
            - packages/*/lib/*
  lint:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: Lint
          command: yarn lint
  version_check:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: Version Check
          command: yarn version-check
      - run:
          name: Version Check - All
          command: yarn version-check:all
  test:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: Unit Tests
          command: yarn test
          no_output_timeout: 15m
          environment:
            MOCHA_FILE: ./junit/test-results.xml
      - store_test_results:
          path: ./junit
      - store_artifacts:
          path: ./junit
      - store_artifacts:
          path: ./coverage
      # persist the coverage output
      # - persist_to_workspace:
      #    root: ~/repo
      #    paths:
      #      - coverage/
      #      - .nyc_output/*
  license_check:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: License Check
          command: yarn license-check
  release:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/repo
      - add_ssh_keys:
          fingerprints:
            - "e1:fd:2f:8a:09:90:77:61:e3:7a:e7:36:be:c4:61:68"
      - run:
          name: Setting Up Git Email
          command: git config user.email "robot@xappmedia.com"
      - run:
          name: Setting Up Git Username
          command: git config user.name "xappbot"
      - run:
          name: NPM Token Setup
          command: 'echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc'
      - run:
          name: Clean git
          command: git add . && git diff --quiet && git diff --staged --quiet || git commit -am 'cleaning status [skip ci]'
      - run:
          name: Release
          command: yarn run release
      - run:
          name: Push
          command: git push

workflows:
  version: 2
  lint_build_test:
    jobs:
      - checkout:
          filters:
            branches:
              ignore: master
      - lint:
          requires:
            - checkout
      - version_check:
          requires:
            - checkout
      - build:
          requires:
            - checkout
      - test:
          requires:
            - checkout
            - build
      - license_check:
          requires:
            - checkout

  lint_build_test_release:
    jobs:
      - checkout:
          filters:
            branches:
              only: master
      - build:
          requires:
            - checkout
      - lint:
          requires:
            - checkout
      - test:
          requires:
            - checkout
            - build
      - release:
          requires:
            - build
            - lint
            - test
          context: publish-packages
