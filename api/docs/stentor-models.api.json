{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.7.0",
    "schemaVersion": 1003,
    "oldestForwardsCompatibleVersion": 1001
  },
  "kind": "Package",
  "canonicalReference": "stentor-models!",
  "docComment": "",
  "name": "stentor-models",
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "stentor-models!",
      "name": "",
      "members": [
        {
          "kind": "Class",
          "canonicalReference": "stentor-models!AbstractResponseBuilder:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare abstract class AbstractResponseBuilder<R = "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "R",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "AbstractResponseBuilder",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "stentor-models!AbstractResponseBuilder:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `AbstractResponseBuilder` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(props: "
                },
                {
                  "kind": "Reference",
                  "text": "ResponseBuilderProps",
                  "canonicalReference": "stentor-models!ResponseBuilderProps:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "props",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "stentor-models!AbstractResponseBuilder#askForAccountLinking:member(1)",
              "docComment": "/**\n * Request account linking\n *\n * @returns The builder instance\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abstract askForAccountLinking(response?: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "SimpleResponse",
                  "canonicalReference": "stentor-models!SimpleResponse:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "AbstractResponseBuilder",
                  "canonicalReference": "stentor-models!AbstractResponseBuilder:class"
                },
                {
                  "kind": "Content",
                  "text": "<R>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "response",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                }
              ],
              "name": "askForAccountLinking"
            },
            {
              "kind": "Method",
              "canonicalReference": "stentor-models!AbstractResponseBuilder#askForCallTransfer:member(1)",
              "docComment": "/**\n * Ask for call transfer (on telephony capable channels)\n *\n * @param phoneNumber - The phone number to transfer the call to\n *\n * @returns The builder instance\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abstract askForCallTransfer(phoneNumber: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "AbstractResponseBuilder",
                  "canonicalReference": "stentor-models!AbstractResponseBuilder:class"
                },
                {
                  "kind": "Content",
                  "text": "<R>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "phoneNumber",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "askForCallTransfer"
            },
            {
              "kind": "Method",
              "canonicalReference": "stentor-models!AbstractResponseBuilder#askForListAccess:member(1)",
              "docComment": "/**\n * Request access to shopping lists\n *\n * @returns The builder instance\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abstract askForListAccess(response?: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "SimpleResponse",
                  "canonicalReference": "stentor-models!SimpleResponse:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "AbstractResponseBuilder",
                  "canonicalReference": "stentor-models!AbstractResponseBuilder:class"
                },
                {
                  "kind": "Content",
                  "text": "<R>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "response",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                }
              ],
              "name": "askForListAccess"
            },
            {
              "kind": "Method",
              "canonicalReference": "stentor-models!AbstractResponseBuilder#askForNotification:member(1)",
              "docComment": "/**\n * Request notification to intent\n *\n * This is a beta feature.\n *\n * @param intentId - \n *\n * @returns The builder instance\n *\n * @beta\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abstract askForNotification(intentId?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "AbstractResponseBuilder",
                  "canonicalReference": "stentor-models!AbstractResponseBuilder:class"
                },
                {
                  "kind": "Content",
                  "text": "<R>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Beta",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "intentId",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "askForNotification"
            },
            {
              "kind": "Method",
              "canonicalReference": "stentor-models!AbstractResponseBuilder#askForSurfaceChange:member(1)",
              "docComment": "/**\n * Ask the user to change surfaces, for example from a smart speaker to a mobile phone.\n *\n * @param response - Response to give as context to the user for the surface change\n *\n * @param notificationLabel - The label for the notification on the new surface\n *\n * @returns The builder instance\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abstract askForSurfaceChange(response?: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "SimpleResponse",
                  "canonicalReference": "stentor-models!SimpleResponse:interface"
                },
                {
                  "kind": "Content",
                  "text": ", notificationLabel?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "AbstractResponseBuilder",
                  "canonicalReference": "stentor-models!AbstractResponseBuilder:class"
                },
                {
                  "kind": "Content",
                  "text": "<R>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "response",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                },
                {
                  "parameterName": "notificationLabel",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  }
                }
              ],
              "name": "askForSurfaceChange"
            },
            {
              "kind": "Method",
              "canonicalReference": "stentor-models!AbstractResponseBuilder#askForUserData:member(1)",
              "docComment": "/**\n * Chase down the user profile data\n *\n * @returns The builder instance\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abstract askForUserData(userDataType: "
                },
                {
                  "kind": "Reference",
                  "text": "UserDataType",
                  "canonicalReference": "stentor-models!UserDataType:type"
                },
                {
                  "kind": "Content",
                  "text": ", accessData?: "
                },
                {
                  "kind": "Reference",
                  "text": "ApiAccessData",
                  "canonicalReference": "stentor-models!ApiAccessData:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "UserDataValue",
                  "canonicalReference": "stentor-models!UserDataValue:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "userDataType",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "accessData",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "askForUserData"
            },
            {
              "kind": "Property",
              "canonicalReference": "stentor-models!AbstractResponseBuilder#assistantTitle:member",
              "docComment": "/**\n * Do not use.\n *\n * @deprecated\n *\n * Use metadata from the App model\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected readonly assistantTitle?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "assistantTitle",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "stentor-models!AbstractResponseBuilder#backgroundImage:member",
              "docComment": "/**\n * Do not use.\n *\n * @deprecated\n *\n * Use metadata from the App model\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected readonly backgroundImage?: "
                },
                {
                  "kind": "Reference",
                  "text": "ImageSpecification",
                  "canonicalReference": "stentor-models!ImageSpecification:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "backgroundImage",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "stentor-models!AbstractResponseBuilder#build:member(1)",
              "docComment": "/**\n * Build the response\n *\n * @returns The built response\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abstract build(): "
                },
                {
                  "kind": "Content",
                  "text": "R"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "build"
            },
            {
              "kind": "Property",
              "canonicalReference": "stentor-models!AbstractResponseBuilder#device:member",
              "docComment": "/**\n * Information about the device capabilities. Use to determine if you can present display information or play media.\n *\n * @readonly\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected readonly device: "
                },
                {
                  "kind": "Reference",
                  "text": "Readonly",
                  "canonicalReference": "!Readonly:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Device",
                  "canonicalReference": "stentor-models!Device:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "device",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "stentor-models!AbstractResponseBuilder#enqueue:member(1)",
              "docComment": "/**\n * Enqueue the next audio\n *\n * @param next - Track to be queued\n *\n * @param current - The current track playing\n *\n * @returns The builder instance\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abstract enqueue(next: "
                },
                {
                  "kind": "Reference",
                  "text": "PlayableMedia",
                  "canonicalReference": "stentor-models!PlayableMedia:type"
                },
                {
                  "kind": "Content",
                  "text": ", current: "
                },
                {
                  "kind": "Reference",
                  "text": "PlayableMedia",
                  "canonicalReference": "stentor-models!PlayableMedia:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "AbstractResponseBuilder",
                  "canonicalReference": "stentor-models!AbstractResponseBuilder:class"
                },
                {
                  "kind": "Content",
                  "text": "<R>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "next",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "current",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "enqueue"
            },
            {
              "kind": "Method",
              "canonicalReference": "stentor-models!AbstractResponseBuilder#mediaQueueSize:member(1)",
              "docComment": "/**\n * The number of playables that can be sent at once. Override it if the platform handles more.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mediaQueueSize(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "mediaQueueSize"
            },
            {
              "kind": "Method",
              "canonicalReference": "stentor-models!AbstractResponseBuilder#play:member(1)",
              "docComment": "/**\n * Play the provided audio\n *\n * @param playable - Media to play\n *\n * @returns The builder instance\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abstract play(playable: "
                },
                {
                  "kind": "Reference",
                  "text": "PlayableMedia",
                  "canonicalReference": "stentor-models!PlayableMedia:type"
                },
                {
                  "kind": "Content",
                  "text": ", offset?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "AbstractResponseBuilder",
                  "canonicalReference": "stentor-models!AbstractResponseBuilder:class"
                },
                {
                  "kind": "Content",
                  "text": "<R>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "playable",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "offset",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "play"
            },
            {
              "kind": "Method",
              "canonicalReference": "stentor-models!AbstractResponseBuilder#playPlaylist:member(1)",
              "docComment": "/**\n * Play a playlist\n *\n * Note: Only supported by Actions on Google at the moment. If attempting to use this function on Alexa, only the first item in the playlist will be played.\n *\n * @param playlist - The playlist to be played\n *\n * @returns The builder instance\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abstract playPlaylist(playlist: "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "PlayableMedia",
                  "canonicalReference": "stentor-models!PlayableMedia:type"
                },
                {
                  "kind": "Content",
                  "text": "> | "
                },
                {
                  "kind": "Reference",
                  "text": "PlayableMedia",
                  "canonicalReference": "stentor-models!PlayableMedia:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "AbstractResponseBuilder",
                  "canonicalReference": "stentor-models!AbstractResponseBuilder:class"
                },
                {
                  "kind": "Content",
                  "text": "<R>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "playlist",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 7
                  }
                }
              ],
              "name": "playPlaylist"
            },
            {
              "kind": "Method",
              "canonicalReference": "stentor-models!AbstractResponseBuilder#reprompt:member(1)",
              "docComment": "/**\n * Provide a reprompt, necessary if you want to \"ask\" something\n *\n * @param ssml - The reprompt, either as a string or a response output object which contains SSML and display text.\n *\n * @param append - Append the response to the existing, if available\n *\n * @returns The builder instance\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abstract reprompt(ssml: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "ResponseOutput",
                  "canonicalReference": "stentor-models!ResponseOutput:interface"
                },
                {
                  "kind": "Content",
                  "text": ", append?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "AbstractResponseBuilder",
                  "canonicalReference": "stentor-models!AbstractResponseBuilder:class"
                },
                {
                  "kind": "Content",
                  "text": "<R>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "ssml",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                },
                {
                  "parameterName": "append",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  }
                }
              ],
              "name": "reprompt"
            },
            {
              "kind": "Method",
              "canonicalReference": "stentor-models!AbstractResponseBuilder#respond:member(1)",
              "docComment": "/**\n * Respond to the user.\n *\n * Can contain just an output speech but can also contain an reprompt.\n *\n * @param response - The entire response\n *\n * @returns The builder instance\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abstract respond(response: "
                },
                {
                  "kind": "Reference",
                  "text": "Response",
                  "canonicalReference": "stentor-models!Response:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "AbstractResponseBuilder",
                  "canonicalReference": "stentor-models!AbstractResponseBuilder:class"
                },
                {
                  "kind": "Content",
                  "text": "<R>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "response",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "respond"
            },
            {
              "kind": "Property",
              "canonicalReference": "stentor-models!AbstractResponseBuilder#response:member",
              "docComment": "/**\n * The response that will be communicated to the user\n *\n * @readonly\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get response(): "
                },
                {
                  "kind": "Reference",
                  "text": "Readonly",
                  "canonicalReference": "!Readonly:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Response",
                  "canonicalReference": "stentor-models!Response:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ResponseOutput",
                  "canonicalReference": "stentor-models!ResponseOutput:interface"
                },
                {
                  "kind": "Content",
                  "text": ">> | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "response",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "stentor-models!AbstractResponseBuilder#say:member(1)",
              "docComment": "/**\n * Say something to the user.\n *\n * @param ssml - The response, either as a string or a response output object which contains SSML and display text.\n *\n * @param append - Append the response to the existing, if available\n *\n * @returns The builder instance\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abstract say(ssml: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "ResponseOutput",
                  "canonicalReference": "stentor-models!ResponseOutput:interface"
                },
                {
                  "kind": "Content",
                  "text": ", append?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "AbstractResponseBuilder",
                  "canonicalReference": "stentor-models!AbstractResponseBuilder:class"
                },
                {
                  "kind": "Content",
                  "text": "<R>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "ssml",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                },
                {
                  "parameterName": "append",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  }
                }
              ],
              "name": "say"
            },
            {
              "kind": "Method",
              "canonicalReference": "stentor-models!AbstractResponseBuilder#stop:member(1)",
              "docComment": "/**\n * Stop the current audio\n *\n * @returns The builder instance\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abstract stop(): "
                },
                {
                  "kind": "Reference",
                  "text": "AbstractResponseBuilder",
                  "canonicalReference": "stentor-models!AbstractResponseBuilder:class"
                },
                {
                  "kind": "Content",
                  "text": "<R>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "stop"
            },
            {
              "kind": "Property",
              "canonicalReference": "stentor-models!AbstractResponseBuilder#tag:member",
              "docComment": "/**\n * Tag used by supported 3rd party analytics to track the response.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tag: "
                },
                {
                  "kind": "Content",
                  "text": "string | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "tag",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "stentor-models!AbstractResponseBuilder#withCanFulfill:member(1)",
              "docComment": "/**\n * Build intent pre-fetch results aka \"CanFulfillRequest\"\n *\n * @param  - results\n *\n * @returns The builder instance\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abstract withCanFulfill(results: "
                },
                {
                  "kind": "Reference",
                  "text": "CanFulfillIntentResult",
                  "canonicalReference": "stentor-models!CanFulfillIntentResult:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "AbstractResponseBuilder",
                  "canonicalReference": "stentor-models!AbstractResponseBuilder:class"
                },
                {
                  "kind": "Content",
                  "text": "<R>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "results",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "withCanFulfill"
            },
            {
              "kind": "Method",
              "canonicalReference": "stentor-models!AbstractResponseBuilder#withCard:member(1)",
              "docComment": "/**\n * Provide a card\n *\n * @param card - Card to be displayed to the user\n *\n * @returns The builder instance\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abstract withCard(card: "
                },
                {
                  "kind": "Reference",
                  "text": "Card",
                  "canonicalReference": "stentor-models!Card:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "AbstractResponseBuilder",
                  "canonicalReference": "stentor-models!AbstractResponseBuilder:class"
                },
                {
                  "kind": "Content",
                  "text": "<R>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "card",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "withCard"
            },
            {
              "kind": "Method",
              "canonicalReference": "stentor-models!AbstractResponseBuilder#withCarousel:member(1)",
              "docComment": "/**\n * Provide a carousel (horizontal selection)\n *\n * @param items - List items to display in the carousel\n *\n * @returns The builder instance\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abstract withCarousel(items: "
                },
                {
                  "kind": "Reference",
                  "text": "ListItem",
                  "canonicalReference": "stentor-models!ListItem:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "AbstractResponseBuilder",
                  "canonicalReference": "stentor-models!AbstractResponseBuilder:class"
                },
                {
                  "kind": "Content",
                  "text": "<R>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "items",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                }
              ],
              "name": "withCarousel"
            },
            {
              "kind": "Method",
              "canonicalReference": "stentor-models!AbstractResponseBuilder#withList:member(1)",
              "docComment": "/**\n * Provide a list (vertical selection)\n *\n * @param items - List items to display\n *\n * @param title - The title for the list\n *\n * @returns The builder instance\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abstract withList(items: "
                },
                {
                  "kind": "Reference",
                  "text": "ListItem",
                  "canonicalReference": "stentor-models!ListItem:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ", title?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "AbstractResponseBuilder",
                  "canonicalReference": "stentor-models!AbstractResponseBuilder:class"
                },
                {
                  "kind": "Content",
                  "text": "<R>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "items",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                },
                {
                  "parameterName": "title",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  }
                }
              ],
              "name": "withList"
            },
            {
              "kind": "Method",
              "canonicalReference": "stentor-models!AbstractResponseBuilder#withSuggestions:member(1)",
              "docComment": "/**\n * Provide suggestions for the user.\n *\n * Limited support across platforms for this at the moment, only Google Assistant.\n *\n * @param suggestion - Either a single suggestion chip or an array\n *\n * @returns The builder instance\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abstract withSuggestions(suggestion: "
                },
                {
                  "kind": "Reference",
                  "text": "SuggestionTypes",
                  "canonicalReference": "stentor-models!SuggestionTypes:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "SuggestionTypes",
                  "canonicalReference": "stentor-models!SuggestionTypes:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ", append?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "AbstractResponseBuilder",
                  "canonicalReference": "stentor-models!AbstractResponseBuilder:class"
                },
                {
                  "kind": "Content",
                  "text": "<R>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "suggestion",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  }
                },
                {
                  "parameterName": "append",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  }
                }
              ],
              "name": "withSuggestions"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!Accounts:interface",
          "docComment": "/**\n * A collection of accounts that are linked to the organization. The name is the type of account that is linked. The object linked is unique to the account type, so it's up to the client to know what that is.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface Accounts "
            }
          ],
          "releaseTag": "Public",
          "name": "Accounts",
          "members": [
            {
              "kind": "IndexSignature",
              "canonicalReference": "stentor-models!Accounts:index(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "[accountName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "]: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "accountName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!Action:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type Action = "
            },
            {
              "kind": "Reference",
              "text": "StorageAction",
              "canonicalReference": "stentor-models!StorageAction:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "Action",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!Actionable:interface",
          "docComment": "/**\n * Interface that has actions\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface Actionable "
            }
          ],
          "releaseTag": "Public",
          "name": "Actionable",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Actionable#actions:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "actions: "
                },
                {
                  "kind": "Reference",
                  "text": "Action",
                  "canonicalReference": "stentor-models!Action:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "actions",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!ActiveWithin:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ActiveWithin<T> = "
            },
            {
              "kind": "Content",
              "text": "T & "
            },
            {
              "kind": "Reference",
              "text": "ActiveWithinable",
              "canonicalReference": "stentor-models!ActiveWithinable:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ActiveWithin",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!ActiveWithinable:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ActiveWithinable "
            }
          ],
          "releaseTag": "Public",
          "name": "ActiveWithinable",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!ActiveWithinable#activeWithin:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "activeWithin: "
                },
                {
                  "kind": "Reference",
                  "text": "Duration",
                  "canonicalReference": "stentor-models!Duration:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "activeWithin",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!AlexaCard:type",
          "docComment": "/**\n * @interface\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "type Card = "
            },
            {
              "kind": "Reference",
              "text": "ui.AskForPermissionsConsentCard",
              "canonicalReference": "ask-sdk-model!ui.AskForPermissionsConsentCard:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "ui.LinkAccountCard",
              "canonicalReference": "ask-sdk-model!ui.LinkAccountCard:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "ui.StandardCard",
              "canonicalReference": "ask-sdk-model!ui.StandardCard:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "ui.SimpleCard",
              "canonicalReference": "ask-sdk-model!ui.SimpleCard:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "AlexaCard",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!AlexaPlatformData:interface",
          "docComment": "/**\n * Alexa specific data required for publication\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface AlexaPlatformData extends "
            },
            {
              "kind": "Reference",
              "text": "BaseData",
              "canonicalReference": "stentor-models!BaseData:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "AlexaPlatformData",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!AlexaPlatformData#category:member",
              "docComment": "/**\n * Part of the Alexa Skill Manifest, th category communicates what type of functionality the skill performs.\n *\n * See {@link https://developer.amazon.com/docs/smapi/skill-manifest.html#publishinginformation}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "category?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "category",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!AlexaPlatformData#distributionCountries:member",
              "docComment": "/**\n * Part of the Alexa Skill Manifest publishing information, when isAvailableWorldwide is false this must be specified. It is an array of ISO 3166-1 alpha-2 format country strings where the skill can be distributed.\n *\n * See {@link https://developer.amazon.com/docs/smapi/skill-manifest.html#publishinginformation}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "distributionCountries?: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "distributionCountries",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!AlexaPlatformData#distributionMode:member",
              "docComment": "/**\n * Part of the Alexa Skill Manifest publishing information, either \"PUBLIC\" or \"PRIVATE\".\n *\n * See {@link https://developer.amazon.com/docs/smapi/skill-manifest.html}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "distributionMode?: "
                },
                {
                  "kind": "Content",
                  "text": "\"PUBLIC\" | \"PRIVATE\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "distributionMode",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!AlexaPlatformData#isAvailableWorldwide:member",
              "docComment": "/**\n * Part of the Alexa Skill Manifest publishing information, if true the skill will be distributed in all countries covered by the specified locales.\n *\n * See {@link https://developer.amazon.com/docs/smapi/skill-manifest.html#publishinginformation}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isAvailableWorldwide?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "isAvailableWorldwide",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!AlexaPlatformData#permissions:member",
              "docComment": "/**\n * Part of the Alexa Skill Manifest, an array of named permissions that the skill can use.\n *\n * See {@link https://developer.amazon.com/docs/smapi/skill-manifest.html#permissions}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "permissions?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        name: string;\n    }[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "permissions",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!AlexaPlatformData#platform:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "platform: "
                },
                {
                  "kind": "Content",
                  "text": "\"alexa\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "platform",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!AlexaPlatformData#privacyAndCompliance:member",
              "docComment": "/**\n * Part of the Alexa Skill Manifest.\n *\n * See {@link https://developer.amazon.com/docs/smapi/skill-manifest.html#publishinginformation}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "privacyAndCompliance?: "
                },
                {
                  "kind": "Reference",
                  "text": "Pick",
                  "canonicalReference": "!Pick:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "PrivacyAndCompliance",
                  "canonicalReference": "stentor-models!PrivacyAndCompliance:interface"
                },
                {
                  "kind": "Content",
                  "text": ", keyof "
                },
                {
                  "kind": "Reference",
                  "text": "RequiredAlexaPrivacyAndCompliance",
                  "canonicalReference": "stentor-models!RequiredAlexaPrivacyAndCompliance:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "privacyAndCompliance",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!AnalyticsEvent:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type AnalyticsEvent = "
            },
            {
              "kind": "Content",
              "text": "\"AnalyticsEvent\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "AnalyticsEvent",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!ApiAccessData:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ApiAccessData "
            }
          ],
          "releaseTag": "Public",
          "name": "ApiAccessData",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!ApiAccessData#apiAuthToken:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "apiAuthToken: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "apiAuthToken",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!ApiAccessData#apiBaseUrl:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "apiBaseUrl: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "apiBaseUrl",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "stentor-models!APP_STATUS_ARCHIVED:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "APP_STATUS_ARCHIVED: "
            },
            {
              "kind": "Reference",
              "text": "AppStatusArchived",
              "canonicalReference": "stentor-models!AppStatusArchived:type"
            }
          ],
          "releaseTag": "Public",
          "name": "APP_STATUS_ARCHIVED",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "stentor-models!APP_STATUS_IN_CERTIFICATION:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "APP_STATUS_IN_CERTIFICATION: "
            },
            {
              "kind": "Reference",
              "text": "AppStatusInCertification",
              "canonicalReference": "stentor-models!AppStatusInCertification:type"
            }
          ],
          "releaseTag": "Public",
          "name": "APP_STATUS_IN_CERTIFICATION",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "stentor-models!APP_STATUS_INCOMPLETE:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "APP_STATUS_INCOMPLETE: "
            },
            {
              "kind": "Reference",
              "text": "AppStatusIncomplete",
              "canonicalReference": "stentor-models!AppStatusIncomplete:type"
            }
          ],
          "releaseTag": "Public",
          "name": "APP_STATUS_INCOMPLETE",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "stentor-models!APP_STATUS_LIVE_AND_IN_CERT:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "APP_STATUS_LIVE_AND_IN_CERT: "
            },
            {
              "kind": "Reference",
              "text": "AppStatusLiveInCert",
              "canonicalReference": "stentor-models!AppStatusLiveInCert:type"
            }
          ],
          "releaseTag": "Public",
          "name": "APP_STATUS_LIVE_AND_IN_CERT",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "stentor-models!APP_STATUS_LIVE_AND_REQUIRES_ATTENTION:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "APP_STATUS_LIVE_AND_REQUIRES_ATTENTION: "
            },
            {
              "kind": "Reference",
              "text": "AppStatusLiveAndRequiresAttention",
              "canonicalReference": "stentor-models!AppStatusLiveAndRequiresAttention:type"
            }
          ],
          "releaseTag": "Public",
          "name": "APP_STATUS_LIVE_AND_REQUIRES_ATTENTION",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "stentor-models!APP_STATUS_LIVE_AND_REQUIRES_CERT:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "APP_STATUS_LIVE_AND_REQUIRES_CERT: "
            },
            {
              "kind": "Reference",
              "text": "AppStatusLiveRequiresCert",
              "canonicalReference": "stentor-models!AppStatusLiveRequiresCert:type"
            }
          ],
          "releaseTag": "Public",
          "name": "APP_STATUS_LIVE_AND_REQUIRES_CERT",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "stentor-models!APP_STATUS_LIVE_AND_REQUIRES_PUBLISH:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "APP_STATUS_LIVE_AND_REQUIRES_PUBLISH: "
            },
            {
              "kind": "Reference",
              "text": "AppStatusLiveAndRequiresPublish",
              "canonicalReference": "stentor-models!AppStatusLiveAndRequiresPublish:type"
            }
          ],
          "releaseTag": "Public",
          "name": "APP_STATUS_LIVE_AND_REQUIRES_PUBLISH",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "stentor-models!APP_STATUS_LIVE:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "APP_STATUS_LIVE: "
            },
            {
              "kind": "Reference",
              "text": "AppStatusLive",
              "canonicalReference": "stentor-models!AppStatusLive:type"
            }
          ],
          "releaseTag": "Public",
          "name": "APP_STATUS_LIVE",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "stentor-models!APP_STATUS_REQUIRES_ATTENTION:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "APP_STATUS_REQUIRES_ATTENTION: "
            },
            {
              "kind": "Reference",
              "text": "AppStatusRequiresAttention",
              "canonicalReference": "stentor-models!AppStatusRequiresAttention:type"
            }
          ],
          "releaseTag": "Public",
          "name": "APP_STATUS_REQUIRES_ATTENTION",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "stentor-models!APP_STATUS_REQUIRES_PUBLISH:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "APP_STATUS_REQUIRES_PUBLISH: "
            },
            {
              "kind": "Reference",
              "text": "AppStatusRequiresPublish",
              "canonicalReference": "stentor-models!AppStatusRequiresPublish:type"
            }
          ],
          "releaseTag": "Public",
          "name": "APP_STATUS_REQUIRES_PUBLISH",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "stentor-models!APP_STATUS_SUBMITTED_FOR_REVIEW:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "APP_STATUS_SUBMITTED_FOR_REVIEW: "
            },
            {
              "kind": "Reference",
              "text": "AppStatusSubmittedForReview",
              "canonicalReference": "stentor-models!AppStatusSubmittedForReview:type"
            }
          ],
          "releaseTag": "Public",
          "name": "APP_STATUS_SUBMITTED_FOR_REVIEW",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "stentor-models!APP_STATUS_UNDER_REVIEW:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "APP_STATUS_UNDER_REVIEW: "
            },
            {
              "kind": "Reference",
              "text": "AppStatusUnderReview",
              "canonicalReference": "stentor-models!AppStatusUnderReview:type"
            }
          ],
          "releaseTag": "Public",
          "name": "APP_STATUS_UNDER_REVIEW",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "stentor-models!APP_STATUS_UNKNOWN:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "APP_STATUS_UNKNOWN: "
            },
            {
              "kind": "Reference",
              "text": "AppStatusUnknown",
              "canonicalReference": "stentor-models!AppStatusUnknown:type"
            }
          ],
          "releaseTag": "Public",
          "name": "APP_STATUS_UNKNOWN",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!App:interface",
          "docComment": "/**\n * App represents a set of publishing data and configuration data for running the app.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface App extends "
            },
            {
              "kind": "Reference",
              "text": "Localizable",
              "canonicalReference": "stentor-models!Localizable:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "LocaleSpecificApp",
              "canonicalReference": "stentor-models!LocaleSpecificApp:type"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "name": "App",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!App#accountLinkType:member",
              "docComment": "/**\n * The type of the account linking. This tells us how to redeem the token for PII.\n *\n * @deprecated\n *\n * Use channels instead\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "accountLinkType?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "accountLinkType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!App#actionsOnGoogleId:member",
              "docComment": "/**\n * The project-id for the Action on Google project.\n *\n * @deprecated\n *\n * Use channels instead\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "actionsOnGoogleId?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "actionsOnGoogleId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!App#alexaCategory:member",
              "docComment": "/**\n * The Alexa category\n *\n * @deprecated\n *\n * Use channels instead.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "alexaCategory?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "alexaCategory",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!App#alexaSkillId:member",
              "docComment": "/**\n * The Alexa skill identifier.\n *\n * @deprecated\n *\n * Use channels instead.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "alexaSkillId?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "alexaSkillId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!App#appId:member",
              "docComment": "/**\n * The ID for the application\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "appId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "appId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!App#banner:member",
              "docComment": "/**\n * URL of the original banner image with aspect ratio of 16:9 and minimum dimensions of 1920x1080.\n *\n * Required for some channels, such as Actions on Google\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "banner?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "banner",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!App#channels:member",
              "docComment": "/**\n * Channels for the app.\n *\n * Upgrade from platformData as it allows to publish the same assistant app multiple times to the same channel.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "channels?: "
                },
                {
                  "kind": "Reference",
                  "text": "ChannelData",
                  "canonicalReference": "stentor-models!ChannelData:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "channels",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!App#dataStreams:member",
              "docComment": "/**\n * Data streams for the app.\n *\n * A data stream is outgoing data hookups, typically analytics platforms.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dataStreams?: "
                },
                {
                  "kind": "Reference",
                  "text": "AppDataStreamsMap",
                  "canonicalReference": "stentor-models!AppDataStreamsMap:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "dataStreams",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!App#defaultLocale:member",
              "docComment": "/**\n * This is the locale in which the app is primarily focused on. The app will publish to this locale with the data provided. Items which can be overwritten can be placed in the \"locale\" section with the local necessary.\n *\n * @defaultValue\n *\n * \"en\"\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "defaultLocale?: "
                },
                {
                  "kind": "Reference",
                  "text": "Locale",
                  "canonicalReference": "stentor-models!Locale:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "defaultLocale",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!App#description:member",
              "docComment": "/**\n * The description for the app.\n *\n * The description cannot be more than 4000 characters.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "description?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "description",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!App#dialogflowClientToken:member",
              "docComment": "/**\n * The client access token for Dialogflow that allows you to\n *\n * @deprecated\n *\n * Use channels instead\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dialogflowClientToken?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "dialogflowClientToken",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!App#dialogflowDeveloperToken:member",
              "docComment": "/**\n * The developer access token for Dialogflow that allows you to CRUD intents.\n *\n * @deprecated\n *\n * Use channels instead\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dialogflowDeveloperToken?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "dialogflowDeveloperToken",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!App#endPoint:member",
              "docComment": "/**\n * The URL where the app is served\n *\n * @deprecated\n *\n * Use channels instead\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "endPoint?: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "AppEndpointMap",
                  "canonicalReference": "stentor-models!AppEndpointMap:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "endPoint",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!App#examplePhrases:member",
              "docComment": "/**\n * Example phrases the help users know how to use the app.\n *\n * At least three are required for publication.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "examplePhrases?: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "examplePhrases",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!App#icon:member",
              "docComment": "/**\n * URL to the original icon file before transformation.\n *\n * Aspect ratio must be 1:1 and minimum dimensions are 512x512.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "icon?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "icon",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!App#internalNotes:member",
              "docComment": "/**\n * Allows stentor_admins to view and add notes to apps for internal use\n *\n * @deprecated\n *\n * Will be moving to OVAI specific App model\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "internalNotes?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "internalNotes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!App#invocationName:member",
              "docComment": "/**\n * The invocation name.\n *\n * This can be overridden for each individual channels.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "invocationName?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "invocationName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!App#ipRights:member",
              "docComment": "/**\n * Allows app-specific overriding of IPRights\n *\n * @deprecated\n *\n * Will be moving to OVAI specific App model\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ipRights?: "
                },
                {
                  "kind": "Reference",
                  "text": "IPRights",
                  "canonicalReference": "stentor-models!IPRights:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "ipRights",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!App#keywords:member",
              "docComment": "/**\n * Keywords to help when searching directories for the app\n *\n * Max of 30 keywords are allowed.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "keywords?: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "keywords",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!App#largeBanner:member",
              "docComment": "/**\n * Banner that is 1920x1080.\n *\n * Required for some channels, such as Actions on Google\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "largeBanner?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "largeBanner",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!App#largeIcon:member",
              "docComment": "/**\n * A large icon for the app, 512x512 PNG\n *\n * Required for some channels, such as Alexa\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "largeIcon?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "largeIcon",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!App#locales:member",
              "docComment": "/**\n * This is a series of locales that the apps supports. These can override the items that are in the original App. The items in the main app are used as defaults if they are not provided by this locale.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "locales?: "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Locale",
                  "canonicalReference": "stentor-models!Locale:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "LocaleSpecificApp",
                  "canonicalReference": "stentor-models!LocaleSpecificApp:type"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "locales",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!App#location:member",
              "docComment": "/**\n * Physical location associated with the app.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "location?: "
                },
                {
                  "kind": "Reference",
                  "text": "Location",
                  "canonicalReference": "stentor-models!Location:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "location",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!App#mediumIcon:member",
              "docComment": "/**\n * A medium icon for the app, 192x192 PNG.\n *\n * Required for some channels, such as Actions On Google\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mediumIcon?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "mediumIcon",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!App#name:member",
              "docComment": "/**\n * The name of the app.\n *\n * Must be a minimum of two characters and maximum of 50 characters.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!App#nlu:member",
              "docComment": "/**\n * The NLU available to the assistant application.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "nlu?: "
                },
                {
                  "kind": "Reference",
                  "text": "NLUData",
                  "canonicalReference": "stentor-models!NLUData:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "nlu",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!App#organizationId:member",
              "docComment": "/**\n * The ID of the organization the app belongs to\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "organizationId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "organizationId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!App#platformData:member",
              "docComment": "/**\n * Channel specific data for the app.\n *\n * @deprecated\n *\n * Use channels instead\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "platformData?: "
                },
                {
                  "kind": "Reference",
                  "text": "AppPlatformDataMap",
                  "canonicalReference": "stentor-models!AppPlatformDataMap:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "platformData",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!App#privacyPolicyUrl:member",
              "docComment": "/**\n * URL to the privacy policy for the app\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "privacyPolicyUrl?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "privacyPolicyUrl",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!App#runtimeData:member",
              "docComment": "/**\n * Runtime data - anything you need from the app level metadata\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "runtimeData?: "
                },
                {
                  "kind": "Reference",
                  "text": "AppRuntimeData",
                  "canonicalReference": "stentor-models!AppRuntimeData:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "runtimeData",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!App#smallIcon:member",
              "docComment": "/**\n * A small icon for the app, 108x108 PNG\n *\n * Required for some channels, such as Alexa\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "smallIcon?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "smallIcon",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!App#status:member",
              "docComment": "/**\n * Current status of the app\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "status?: "
                },
                {
                  "kind": "Reference",
                  "text": "FullAppStatus",
                  "canonicalReference": "stentor-models!FullAppStatus:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "status",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!App#stripeSubscriptionId:member",
              "docComment": "/**\n * The subscription ID that is linked to this app.\n *\n * @deprecated\n *\n * Will be moving to OVAI specific App model\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "stripeSubscriptionId?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "stripeSubscriptionId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!App#summary:member",
              "docComment": "/**\n * The summary of the app.\n *\n * Shorter than the description, maximum 160 characters.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "summary?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "summary",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!App#templateType:member",
              "docComment": "/**\n * Type of template the app and its intents adhere to.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "templateType?: "
                },
                {
                  "kind": "Reference",
                  "text": "TemplateType",
                  "canonicalReference": "stentor-models!TemplateType:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "templateType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!App#termsOfUseUrl:member",
              "docComment": "/**\n * URL to the terms of use for the app\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "termsOfUseUrl?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "termsOfUseUrl",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!App#testingInstructions:member",
              "docComment": "/**\n * Testing instructions for the app\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "testingInstructions?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "testingInstructions",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 5
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!AppDataStream:type",
          "docComment": "/**\n * Third (or first) party providers of analytics, metrics, and monitoring that are hooked up to receive transactional information about the app.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type AppDataStream = "
            },
            {
              "kind": "Reference",
              "text": "BespokenDataStream",
              "canonicalReference": "stentor-models!BespokenDataStream:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "ChatbaseDataStream",
              "canonicalReference": "stentor-models!ChatbaseDataStream:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "GoogleAnalyticsStream",
              "canonicalReference": "stentor-models!GoogleAnalyticsStream:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "VoiceLabsDataStream",
              "canonicalReference": "stentor-models!VoiceLabsDataStream:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "LuisDataStream",
              "canonicalReference": "stentor-models!LuisDataStream:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "DialogflowDataStream",
              "canonicalReference": "stentor-models!DialogflowDataStream:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "DashbotDataStream",
              "canonicalReference": "stentor-models!DashbotDataStream:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "AppDataStream",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 14
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!AppDataStreamsMap:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type AppDataStreamsMap = "
            },
            {
              "kind": "Content",
              "text": "{\n    [dataStream in "
            },
            {
              "kind": "Reference",
              "text": "AppDataStreamTypes",
              "canonicalReference": "stentor-models!AppDataStreamTypes:type"
            },
            {
              "kind": "Content",
              "text": "]?: "
            },
            {
              "kind": "Reference",
              "text": "AppDataStream",
              "canonicalReference": "stentor-models!AppDataStream:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "AppDataStreamsMap",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!AppDataStreamsRepo:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type AppDataStreamsRepo = "
            },
            {
              "kind": "Content",
              "text": "{\n    [appId in string]?: "
            },
            {
              "kind": "Reference",
              "text": "AppDataStreamsMap",
              "canonicalReference": "stentor-models!AppDataStreamsMap:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "AppDataStreamsRepo",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!AppDataStreamTypes:type",
          "docComment": "/**\n * Types\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type AppDataStreamTypes = "
            },
            {
              "kind": "Reference",
              "text": "BespokenDataStreamType",
              "canonicalReference": "stentor-models!BespokenDataStreamType:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "VoiceLabsDataStreamType",
              "canonicalReference": "stentor-models!VoiceLabsDataStreamType:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "GoogleAnalyticsDataStreamType",
              "canonicalReference": "stentor-models!GoogleAnalyticsDataStreamType:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "ChatbaseDataStreamType",
              "canonicalReference": "stentor-models!ChatbaseDataStreamType:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "LuisType",
              "canonicalReference": "stentor-models!LuisType:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "DialogflowType",
              "canonicalReference": "stentor-models!DialogflowType:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "DashbotDataStreamType",
              "canonicalReference": "stentor-models!DashbotDataStreamType:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "AppDataStreamTypes",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 14
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!AppEndpoint:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface AppEndpoint "
            }
          ],
          "releaseTag": "Public",
          "name": "AppEndpoint",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!AppEndpoint#url:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "url: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "url",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!AppEndpointMap:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface AppEndpointMap "
            }
          ],
          "releaseTag": "Public",
          "name": "AppEndpointMap",
          "members": [
            {
              "kind": "IndexSignature",
              "canonicalReference": "stentor-models!AppEndpointMap:index(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "[platform: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "]: "
                },
                {
                  "kind": "Reference",
                  "text": "AppEndpoint",
                  "canonicalReference": "stentor-models!AppEndpoint:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "platform",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!AppPlatformDataMap:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface AppPlatformDataMap "
            }
          ],
          "releaseTag": "Public",
          "name": "AppPlatformDataMap",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!AppPlatformDataMap#alexa:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "alexa?: "
                },
                {
                  "kind": "Reference",
                  "text": "AlexaPlatformData",
                  "canonicalReference": "stentor-models!AlexaPlatformData:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "alexa",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!AppPlatformDataMap#google:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "google?: "
                },
                {
                  "kind": "Reference",
                  "text": "GooglePlatformData",
                  "canonicalReference": "stentor-models!GooglePlatformData:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "google",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!AppRuntimeData:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface AppRuntimeData "
            }
          ],
          "releaseTag": "Public",
          "name": "AppRuntimeData",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!AppRuntimeData#backgroundImage:member",
              "docComment": "/**\n * This is the list of images available to anything where image is appropriate. Builders will pick and choose.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "backgroundImage?: "
                },
                {
                  "kind": "Reference",
                  "text": "ImageSpecification",
                  "canonicalReference": "stentor-models!ImageSpecification:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "backgroundImage",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!AppRuntimeData#title:member",
              "docComment": "/**\n * The title of the app.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "title?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "title",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!AppService:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface AppService "
            }
          ],
          "releaseTag": "Public",
          "name": "AppService",
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "stentor-models!AppService#get:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get(appId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "App",
                  "canonicalReference": "stentor-models!App:interface"
                },
                {
                  "kind": "Content",
                  "text": " | undefined>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "appId",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "get"
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!AppStatus:interface",
          "docComment": "/**\n * The status of the App\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface AppStatus "
            }
          ],
          "releaseTag": "Public",
          "name": "AppStatus",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!AppStatus#email:member",
              "docComment": "/**\n * The email of the user/admin who set the status\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "email: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "email",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!AppStatus#notes:member",
              "docComment": "/**\n * Any notes set by the admin when the status was set.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "notes: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "notes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!AppStatus#timestamp:member",
              "docComment": "/**\n * The time when the status was set\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "timestamp: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "timestamp",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!AppStatus#type:member",
              "docComment": "/**\n * Status type\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type: "
                },
                {
                  "kind": "Reference",
                  "text": "AppStatusType",
                  "canonicalReference": "stentor-models!AppStatusType:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!AppStatusArchived:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type AppStatusArchived = "
            },
            {
              "kind": "Content",
              "text": "\"Archived\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "AppStatusArchived",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!AppStatusInCertification:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type AppStatusInCertification = "
            },
            {
              "kind": "Content",
              "text": "\"In Certification\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "AppStatusInCertification",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!AppStatusIncomplete:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type AppStatusIncomplete = "
            },
            {
              "kind": "Content",
              "text": "\"Incomplete\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "AppStatusIncomplete",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!AppStatusLive:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type AppStatusLive = "
            },
            {
              "kind": "Content",
              "text": "\"Live\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "AppStatusLive",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!AppStatusLiveAndRequiresAttention:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type AppStatusLiveAndRequiresAttention = "
            },
            {
              "kind": "Content",
              "text": "\"Live: Requires Attention\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "AppStatusLiveAndRequiresAttention",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!AppStatusLiveAndRequiresPublish:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type AppStatusLiveAndRequiresPublish = "
            },
            {
              "kind": "Content",
              "text": "\"Live: Requires Publish\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "AppStatusLiveAndRequiresPublish",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!AppStatusLiveInCert:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type AppStatusLiveInCert = "
            },
            {
              "kind": "Content",
              "text": "\"Live: In Certification\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "AppStatusLiveInCert",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!AppStatusLiveRequiresCert:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type AppStatusLiveRequiresCert = "
            },
            {
              "kind": "Content",
              "text": "\"Live: Requires Cert\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "AppStatusLiveRequiresCert",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!AppStatusRequiresAttention:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type AppStatusRequiresAttention = "
            },
            {
              "kind": "Content",
              "text": "\"Requires Attention\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "AppStatusRequiresAttention",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!AppStatusRequiresPublish:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type AppStatusRequiresPublish = "
            },
            {
              "kind": "Content",
              "text": "\"Needs publish\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "AppStatusRequiresPublish",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!AppStatusSubmittedForReview:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type AppStatusSubmittedForReview = "
            },
            {
              "kind": "Content",
              "text": "\"Submitted For Review\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "AppStatusSubmittedForReview",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!AppStatusType:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type AppStatusType = "
            },
            {
              "kind": "Reference",
              "text": "AppStatusUnknown",
              "canonicalReference": "stentor-models!AppStatusUnknown:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "AppStatusIncomplete",
              "canonicalReference": "stentor-models!AppStatusIncomplete:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "AppStatusSubmittedForReview",
              "canonicalReference": "stentor-models!AppStatusSubmittedForReview:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "AppStatusUnderReview",
              "canonicalReference": "stentor-models!AppStatusUnderReview:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "AppStatusInCertification",
              "canonicalReference": "stentor-models!AppStatusInCertification:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "AppStatusRequiresPublish",
              "canonicalReference": "stentor-models!AppStatusRequiresPublish:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "AppStatusLive",
              "canonicalReference": "stentor-models!AppStatusLive:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "AppStatusRequiresAttention",
              "canonicalReference": "stentor-models!AppStatusRequiresAttention:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "AppStatusArchived",
              "canonicalReference": "stentor-models!AppStatusArchived:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "AppStatusLiveRequiresCert",
              "canonicalReference": "stentor-models!AppStatusLiveRequiresCert:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "AppStatusLiveInCert",
              "canonicalReference": "stentor-models!AppStatusLiveInCert:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "AppStatusLiveAndRequiresPublish",
              "canonicalReference": "stentor-models!AppStatusLiveAndRequiresPublish:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "AppStatusLiveAndRequiresAttention",
              "canonicalReference": "stentor-models!AppStatusLiveAndRequiresAttention:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "AppStatusType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 26
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!AppStatusUnderReview:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type AppStatusUnderReview = "
            },
            {
              "kind": "Content",
              "text": "\"Under Review\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "AppStatusUnderReview",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!AppStatusUnknown:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type AppStatusUnknown = "
            },
            {
              "kind": "Content",
              "text": "\"Unknown\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "AppStatusUnknown",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!Audio:interface",
          "docComment": "/**\n * Playable media designed for hands-free & eyes-free consumption.\n *\n * This interface cannot be implemented directly.\n *\n * See the following: * {@link https://developers.google.com/actions/assistant/responses#media_responses} * {@link https://developers.google.com/actions/reference/rest/Shared.Types/AppResponse#mediaresponse} * {@link https://developer.amazon.com/docs/custom-skills/audioplayer-interface-reference.html#play-params}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface Audio extends "
            },
            {
              "kind": "Reference",
              "text": "PlayableMedia",
              "canonicalReference": "stentor-models!PlayableMedia:type"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "Audio",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Audio#backgroundImage:member",
              "docComment": "/**\n * When applicable (Alexa), the background image for display surfaces.\n *\n * Minimum dimensions are 1024 by 640 pixels\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "backgroundImage?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "backgroundImage",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Audio#description:member",
              "docComment": "/**\n * Description of the audio\n *\n * Max length is 160 characters, limited by Google.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "description?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "description",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Audio#image:member",
              "docComment": "/**\n * Image for the audio, typically the album art.\n *\n * Dimensions must be square, minimum 480 by 480 pixels\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "image?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "image",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Audio#subtitle:member",
              "docComment": "/**\n * Subtitle for the audio.\n *\n * This is typically the category or artist name.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "subtitle?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "subtitle",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Audio#title:member",
              "docComment": "/**\n * Title (or name) of the audio.\n *\n * This is typically the track title or podcast episode name.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "title?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "title",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Audio#type:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type: "
                },
                {
                  "kind": "Reference",
                  "text": "AudioType",
                  "canonicalReference": "stentor-models!AudioType:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!AudioLiveStream:interface",
          "docComment": "/**\n * Audio with an indefinite length that cannot be paused.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface AudioLiveStream extends "
            },
            {
              "kind": "Reference",
              "text": "Audio",
              "canonicalReference": "stentor-models!Audio:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "AudioLiveStream",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!AudioLiveStream#length:member",
              "docComment": "/**\n * Length for livestreams is always negative one since it has no length.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "length: "
                },
                {
                  "kind": "Content",
                  "text": "-1"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "length",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!AudioLiveStream#name:member",
              "docComment": "/**\n * Name of the stream.\n *\n * Use title instead.\n *\n * @deprecated\n *\n * Use title instead\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "name?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!AudioLiveStream#type:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type: "
                },
                {
                  "kind": "Reference",
                  "text": "AudioLiveStreamType",
                  "canonicalReference": "stentor-models!AudioLiveStreamType:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!AudioLiveStreamType:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type AudioLiveStreamType = "
            },
            {
              "kind": "Content",
              "text": "\"LiveStream\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "AudioLiveStreamType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!AudioPlayer:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface AudioPlayer "
            }
          ],
          "releaseTag": "Public",
          "name": "AudioPlayer",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!AudioPlayer#offsetInMilliseconds:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "offsetInMilliseconds?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "offsetInMilliseconds",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!AudioPlayer#status:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "status: "
                },
                {
                  "kind": "Content",
                  "text": "\"IDLE\" | \"PAUSED\" | \"PLAYING\" | \"STOPPED\" | \"FINISHED\" | \"BUFFER_UNDERRUN\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "status",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!AudioPlayer#token:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "token?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "token",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!AudioPlayerEvent:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type AudioPlayerEvent = "
            },
            {
              "kind": "Reference",
              "text": "AudioPlayerPlaybackStartedEvent",
              "canonicalReference": "stentor-models!AudioPlayerPlaybackStartedEvent:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "AudioPlayerPlaybackFinishedEvent",
              "canonicalReference": "stentor-models!AudioPlayerPlaybackFinishedEvent:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "AudioPlayerPlaybackStoppedEvent",
              "canonicalReference": "stentor-models!AudioPlayerPlaybackStoppedEvent:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "AudioPlayerPlaybackNearlyFinishedEvent",
              "canonicalReference": "stentor-models!AudioPlayerPlaybackNearlyFinishedEvent:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "AudioPlayerPlaybackFailedEvent",
              "canonicalReference": "stentor-models!AudioPlayerPlaybackFailedEvent:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "AudioPlayerSystemExceptionEvent",
              "canonicalReference": "stentor-models!AudioPlayerSystemExceptionEvent:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "AudioPlayerEvent",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 12
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!AudioPlayerPlaybackFailedEvent:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type AudioPlayerPlaybackFailedEvent = "
            },
            {
              "kind": "Content",
              "text": "\"AudioPlayerPlaybackFailed\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "AudioPlayerPlaybackFailedEvent",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!AudioPlayerPlaybackFinishedEvent:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type AudioPlayerPlaybackFinishedEvent = "
            },
            {
              "kind": "Content",
              "text": "\"AudioPlayerPlaybackFinished\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "AudioPlayerPlaybackFinishedEvent",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!AudioPlayerPlaybackNearlyFinishedEvent:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type AudioPlayerPlaybackNearlyFinishedEvent = "
            },
            {
              "kind": "Content",
              "text": "\"AudioPlayerPlaybackNearlyFinished\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "AudioPlayerPlaybackNearlyFinishedEvent",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!AudioPlayerPlaybackStartedEvent:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type AudioPlayerPlaybackStartedEvent = "
            },
            {
              "kind": "Content",
              "text": "\"AudioPlayerPlaybackStarted\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "AudioPlayerPlaybackStartedEvent",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!AudioPlayerPlaybackStoppedEvent:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type AudioPlayerPlaybackStoppedEvent = "
            },
            {
              "kind": "Content",
              "text": "\"AudioPlayerPlaybackStopped\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "AudioPlayerPlaybackStoppedEvent",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!AudioPlayerRequest:interface",
          "docComment": "/**\n * AudioPlayer requests handle audio life-cycle events such as playback started, playback stopped, playback failed, etc.\n *\n * See {@link https://developer.amazon.com/public/solutions/alexa/alexa-skills-kit/docs/custom-audioplayer-interface-reference#requests}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface AudioPlayerRequest extends "
            },
            {
              "kind": "Reference",
              "text": "BaseRequest",
              "canonicalReference": "stentor-models!BaseRequest:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "AudioPlayerRequest",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!AudioPlayerRequest#errorMessage:member",
              "docComment": "/**\n * Only available when an AudioPlayerPlaybackFailedEvent\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "errorMessage?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "errorMessage",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!AudioPlayerRequest#errorType:member",
              "docComment": "/**\n * Only available when an AudioPlayerPlaybackFailedEvent\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "errorType?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "errorType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!AudioPlayerRequest#event:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "event: "
                },
                {
                  "kind": "Reference",
                  "text": "AudioPlayerEvent",
                  "canonicalReference": "stentor-models!AudioPlayerEvent:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "event",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!AudioPlayerRequest#offsetInMilliseconds:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "offsetInMilliseconds: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "offsetInMilliseconds",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!AudioPlayerRequest#token:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "token: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "token",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!AudioPlayerRequest#type:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type: "
                },
                {
                  "kind": "Reference",
                  "text": "AudioPlayerRequestType",
                  "canonicalReference": "stentor-models!AudioPlayerRequestType:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!AudioPlayerRequestEvent:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface AudioPlayerRequestEvent extends "
            },
            {
              "kind": "Reference",
              "text": "RequestEvent",
              "canonicalReference": "stentor-models!RequestEvent:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "AudioPlayerRequestPayload",
              "canonicalReference": "stentor-models!AudioPlayerRequestPayload:interface"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "name": "AudioPlayerRequestEvent",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!AudioPlayerRequestEvent#name:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "name: "
                },
                {
                  "kind": "Reference",
                  "text": "AudioPlayerRequestType",
                  "canonicalReference": "stentor-models!AudioPlayerRequestType:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 5
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!AudioPlayerRequestPayload:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface AudioPlayerRequestPayload "
            }
          ],
          "releaseTag": "Public",
          "name": "AudioPlayerRequestPayload",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!AudioPlayerRequestPayload#event:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "event: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "event",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!AudioPlayerRequestPayload#token:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "token: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "token",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!AudioPlayerRequestType:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type AudioPlayerRequestType = "
            },
            {
              "kind": "Content",
              "text": "\"AUDIO_PLAYER_REQUEST\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "AudioPlayerRequestType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!AudioPlayerSystemExceptionEvent:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type AudioPlayerSystemExceptionEvent = "
            },
            {
              "kind": "Content",
              "text": "\"AudioPlayerSystemException\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "AudioPlayerSystemExceptionEvent",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!AudioType:type",
          "docComment": "/**\n * AudioType is the combination of all types of audio\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type AudioType = "
            },
            {
              "kind": "Reference",
              "text": "PodcastEpisodeType",
              "canonicalReference": "stentor-models!PodcastEpisodeType:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "SongType",
              "canonicalReference": "stentor-models!SongType:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "AudioLiveStreamType",
              "canonicalReference": "stentor-models!AudioLiveStreamType:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "GenericAudioType",
              "canonicalReference": "stentor-models!GenericAudioType:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "AudioType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!BaseData:interface",
          "docComment": "/**\n * Platform specific information by platform type.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface BaseData "
            }
          ],
          "releaseTag": "Public",
          "name": "BaseData",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!BaseData#directoryListing:member",
              "docComment": "/**\n * URL for the directory listing\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "directoryListing?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "directoryListing",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!BaseData#platform:member",
              "docComment": "/**\n * The platform\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "platform: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "platform",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!BaseDataStream:interface",
          "docComment": "/**\n * Base data stream all data streams extend.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface BaseDataStream "
            }
          ],
          "releaseTag": "Public",
          "name": "BaseDataStream",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!BaseDataStream#type:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type: "
                },
                {
                  "kind": "Reference",
                  "text": "AppDataStreamTypes",
                  "canonicalReference": "stentor-models!AppDataStreamTypes:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!BaseRequest:interface",
          "docComment": "/**\n * Shared parameters for each Request\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface BaseRequest "
            }
          ],
          "releaseTag": "Public",
          "name": "BaseRequest",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!BaseRequest#accessToken:member",
              "docComment": "/**\n * Access token from account linking\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "accessToken?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "accessToken",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!BaseRequest#anonymous:member",
              "docComment": "/**\n * The user is anonymous, or a guest.\n *\n * The user either does not yet have a verified identity or have chosen to not have any data saved about them.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "anonymous?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "anonymous",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!BaseRequest#apiAccess:member",
              "docComment": "/**\n * API access data from the platform In case there is an APIs that provides services like list management, messaging...\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "apiAccess?: "
                },
                {
                  "kind": "Reference",
                  "text": "ApiAccessData",
                  "canonicalReference": "stentor-models!ApiAccessData:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "apiAccess",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!BaseRequest#isBargeIn:member",
              "docComment": "/**\n * Is the request a barge in\n *\n * Currently only set on Google and Dialogflow request\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isBargeIn?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "isBargeIn",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!BaseRequest#isHealthCheck:member",
              "docComment": "/**\n * Is the request a health check.\n *\n * Currently only Google and Dialogflow perform health checks.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isHealthCheck?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "isHealthCheck",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!BaseRequest#isNewSession:member",
              "docComment": "/**\n * Is the request a new session.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isNewSession: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "isNewSession",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!BaseRequest#locale:member",
              "docComment": "/**\n * User's locale, such as us-EN and es-MX.\n *\n * Possible values for Alexa are defined here: https://developer.amazon.com/docs/custom-skills/request-and-response-json-reference.html#request-locale Possible values for Dialogflow are defined here: https://dialogflow.com/docs/reference/language\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "locale?: "
                },
                {
                  "kind": "Reference",
                  "text": "Locale",
                  "canonicalReference": "stentor-models!Locale:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "locale",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!BaseRequest#overrideKey:member",
              "docComment": "/**\n * Used during forwarding and redirecting the request to another handler. When set it pulls content or paths for this key instead of for the request.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "overrideKey?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "overrideKey",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!BaseRequest#platform:member",
              "docComment": "/**\n * The platform the request came from\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "platform?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "platform",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!BaseRequest#rawQuery:member",
              "docComment": "/**\n * Raw speech to text (STT) query, not available on all platforms.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "rawQuery?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "rawQuery",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!BaseRequest#type:member",
              "docComment": "/**\n * Type of the request.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type: "
                },
                {
                  "kind": "Reference",
                  "text": "RequestTypes",
                  "canonicalReference": "stentor-models!RequestTypes:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!BaseRequest#userId:member",
              "docComment": "/**\n * ID for the user making the request.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "userId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "userId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!BasicCardItem:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type BasicCardItem = "
            },
            {
              "kind": "Reference",
              "text": "Pick",
              "canonicalReference": "!Pick:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "GoogleActionsV2RichResponseItem",
              "canonicalReference": "actions-on-google!GoogleActionsV2RichResponseItem:interface"
            },
            {
              "kind": "Content",
              "text": ", \"basicCard\">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "BasicCardItem",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!BespokenDataStream:interface",
          "docComment": "/**\n * Data for Bespoken Tools.\n *\n * See {@link https://bespoken.io}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface BespokenDataStream extends "
            },
            {
              "kind": "Reference",
              "text": "BaseDataStream",
              "canonicalReference": "stentor-models!BaseDataStream:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "BespokenDataStream",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!BespokenDataStream#token:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "token: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "token",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!BespokenDataStream#type:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type: "
                },
                {
                  "kind": "Reference",
                  "text": "BespokenDataStreamType",
                  "canonicalReference": "stentor-models!BespokenDataStreamType:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!BespokenDataStreamType:type",
          "docComment": "/**\n * Analytics\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type BespokenDataStreamType = "
            },
            {
              "kind": "Content",
              "text": "\"bespoken\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "BespokenDataStreamType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!BuiltInIntents:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type BuiltInIntents = "
            },
            {
              "kind": "Reference",
              "text": "CancelIntent",
              "canonicalReference": "stentor-models!CancelIntent:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "FirstIntent",
              "canonicalReference": "stentor-models!FirstIntent:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "HelpIntent",
              "canonicalReference": "stentor-models!HelpIntent:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "LatestIntent",
              "canonicalReference": "stentor-models!LatestIntent:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "InputUnknown",
              "canonicalReference": "stentor-models!InputUnknown:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "LoopOffIntent",
              "canonicalReference": "stentor-models!LoopOffIntent:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "LoopOnIntent",
              "canonicalReference": "stentor-models!LoopOnIntent:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "NextIntent",
              "canonicalReference": "stentor-models!NextIntent:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "NoIntent",
              "canonicalReference": "stentor-models!NoIntent:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "PauseIntent",
              "canonicalReference": "stentor-models!PauseIntent:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "PreviousIntent",
              "canonicalReference": "stentor-models!PreviousIntent:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "RepeatIntent",
              "canonicalReference": "stentor-models!RepeatIntent:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "ResumeIntent",
              "canonicalReference": "stentor-models!ResumeIntent:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "ShuffleOffIntent",
              "canonicalReference": "stentor-models!ShuffleOffIntent:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "ShuffleOnIntent",
              "canonicalReference": "stentor-models!ShuffleOnIntent:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "StartOverIntent",
              "canonicalReference": "stentor-models!StartOverIntent:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "StopIntent",
              "canonicalReference": "stentor-models!StopIntent:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "YesIntent",
              "canonicalReference": "stentor-models!YesIntent:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "BuiltInIntents",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 36
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!CancelIntent:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type CancelIntent = "
            },
            {
              "kind": "Content",
              "text": "\"CancelIntent\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "CancelIntent",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!CanFulfillIntentResult:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface CanFulfillIntentResult "
            }
          ],
          "releaseTag": "Public",
          "name": "CanFulfillIntentResult",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!CanFulfillIntentResult#canFulfill:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "canFulfill: "
                },
                {
                  "kind": "Reference",
                  "text": "ThreeChoices",
                  "canonicalReference": "stentor-models!ThreeChoices:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "canFulfill",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!CanFulfillIntentResult#slots:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "slots: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        [slotName: string]: "
                },
                {
                  "kind": "Reference",
                  "text": "CanFulfillIntentSlotResult",
                  "canonicalReference": "stentor-models!CanFulfillIntentSlotResult:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "slots",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!CanFulfillIntentSlotResult:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface CanFulfillIntentSlotResult "
            }
          ],
          "releaseTag": "Public",
          "name": "CanFulfillIntentSlotResult",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!CanFulfillIntentSlotResult#canFulfill:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "canFulfill?: "
                },
                {
                  "kind": "Reference",
                  "text": "ThreeChoices",
                  "canonicalReference": "stentor-models!ThreeChoices:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "canFulfill",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!CanFulfillIntentSlotResult#canUnderstand:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "canUnderstand?: "
                },
                {
                  "kind": "Reference",
                  "text": "ThreeChoices",
                  "canonicalReference": "stentor-models!ThreeChoices:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "canUnderstand",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!Card:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface Card "
            }
          ],
          "releaseTag": "Public",
          "name": "Card",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Card#accessibilityText:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "accessibilityText?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "accessibilityText",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Card#buttons:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "buttons?: "
                },
                {
                  "kind": "Reference",
                  "text": "CardButton",
                  "canonicalReference": "stentor-models!CardButton:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "buttons",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Card#content:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "content: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "content",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Card#largeImageUrl:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "largeImageUrl?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "largeImageUrl",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Card#smallImageUrl:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "smallImageUrl?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "smallImageUrl",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Card#title:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "title: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "title",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Card#type:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type: "
                },
                {
                  "kind": "Content",
                  "text": "\"CARD\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!CardButton:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface CardButton "
            }
          ],
          "releaseTag": "Public",
          "name": "CardButton",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!CardButton#openUrlAction:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "openUrlAction: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "openUrlAction",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!CardButton#title:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "title: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "title",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!CarouselSelectData:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface CarouselSelectData "
            }
          ],
          "releaseTag": "Public",
          "name": "CarouselSelectData",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!CarouselSelectData#\"@type\":member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "\"@type\": "
                },
                {
                  "kind": "Content",
                  "text": "\"type.googleapis.com/google.actions.v2.OptionValueSpec\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "\"@type\"",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!CarouselSelectData#carouselSelect:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "carouselSelect: "
                },
                {
                  "kind": "Reference",
                  "text": "GoogleActionsV2UiElementsCarouselSelect",
                  "canonicalReference": "actions-on-google!GoogleActionsV2UiElementsCarouselSelect:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "carouselSelect",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!Channel:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface Channel "
            }
          ],
          "releaseTag": "Public",
          "name": "Channel",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Channel#builder:member",
              "docComment": "/**\n * Response builder, this is now deprecated in favor of providing a response translator.\n *\n * @deprecated\n *\n * Provide a response translator instead of a customer builder.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "builder?: "
                },
                {
                  "kind": "Content",
                  "text": "new (props: object) => "
                },
                {
                  "kind": "Reference",
                  "text": "AbstractResponseBuilder",
                  "canonicalReference": "stentor-models!AbstractResponseBuilder:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "builder",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "stentor-models!Channel#capabilities:member(1)",
              "docComment": "/**\n * Determine the device capabilities for the channel.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "capabilities(body: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Device",
                  "canonicalReference": "stentor-models!Device:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "body",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "capabilities"
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Channel#hooks:member",
              "docComment": "/**\n * Runtime hooks used by the channel to make any necessary checks or modifications\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hooks?: "
                },
                {
                  "kind": "Reference",
                  "text": "ChannelHooks",
                  "canonicalReference": "stentor-models!ChannelHooks:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "hooks",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Channel#name:member",
              "docComment": "/**\n * The name of the channel.\n *\n * This must be alphanumeric characters only, dashes instead of spaces.\n *\n * For example: actions-on-google or alexa\n *\n * This is used in analytics and in some cases platform selection if the platform is provided in the URL as a query or path parameter.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Channel#nlu:member",
              "docComment": "/**\n * The NLU for the channel\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "nlu?: "
                },
                {
                  "kind": "Reference",
                  "text": "NLUService",
                  "canonicalReference": "stentor-models!NLUService:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "nlu",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Channel#request:member",
              "docComment": "/**\n * Request translator (an instantiated class)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "request: "
                },
                {
                  "kind": "Reference",
                  "text": "Translator",
                  "canonicalReference": "@xapp/patterns!Translator:class"
                },
                {
                  "kind": "Content",
                  "text": "<object, "
                },
                {
                  "kind": "Reference",
                  "text": "Request",
                  "canonicalReference": "stentor-models!Request:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "request",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Channel#response:member",
              "docComment": "/**\n * Response translator (an instantiated class)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "response: "
                },
                {
                  "kind": "Reference",
                  "text": "Translator",
                  "canonicalReference": "@xapp/patterns!Translator:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "RequestResponse",
                  "canonicalReference": "stentor-models!RequestResponse:interface"
                },
                {
                  "kind": "Content",
                  "text": ", object>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "response",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "stentor-models!Channel#test:member(1)",
              "docComment": "/**\n * Optional function that tests the incoming request to see if it is a request for the channel.\n *\n * It returns true if the request is for the channel.\n *\n * If one isn't provided, it will rely on the name to determine the channel.\n *\n * @param body - \n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "test?(body: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "body",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "test"
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!ChannelData:interface",
          "docComment": "/**\n * Channel data, all channel data extends from this object.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ChannelData "
            }
          ],
          "releaseTag": "Public",
          "name": "ChannelData",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!ChannelData#directoryListing:member",
              "docComment": "/**\n * URL for the directory listing\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "directoryListing?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "directoryListing",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!ChannelData#endPoint:member",
              "docComment": "/**\n * URI where the channel can be accessed.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "endPoint?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "endPoint",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!ChannelData#id:member",
              "docComment": "/**\n * Unique ID of the channel.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "id?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!ChannelData#status:member",
              "docComment": "/**\n * The status of the app with respect to this current channel.\n *\n * An example may be that an app is currently live on Alexa but being built on Google Home.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "status?: "
                },
                {
                  "kind": "Reference",
                  "text": "FullAppStatus",
                  "canonicalReference": "stentor-models!FullAppStatus:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "status",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!ChannelData#type:member",
              "docComment": "/**\n * The channel type\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!ChannelData#useNLU:member",
              "docComment": "/**\n * ID of the NLU to use within app.nlu[].\n *\n * If it exists, the channel will use the provided NLU at runtime to convert the raw text to an Intent.\n *\n * If the value is \"*\", then it will pick the first available NLU within app.nlu[]\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "useNLU?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "useNLU",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!ChannelHooks:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ChannelHooks = "
            },
            {
              "kind": "Reference",
              "text": "Pick",
              "canonicalReference": "!Pick:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Hooks",
              "canonicalReference": "stentor-models!Hooks:interface"
            },
            {
              "kind": "Content",
              "text": ", \"preExecution\">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ChannelHooks",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!ChatbaseDataStream:interface",
          "docComment": "/**\n * Data for Chatbase\n *\n * See {@link https://www.chatbase.com/}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ChatbaseDataStream extends "
            },
            {
              "kind": "Reference",
              "text": "BaseDataStream",
              "canonicalReference": "stentor-models!BaseDataStream:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "ChatbaseDataStream",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!ChatbaseDataStream#token:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "token: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "token",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!ChatbaseDataStream#type:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type: "
                },
                {
                  "kind": "Reference",
                  "text": "ChatbaseDataStreamType",
                  "canonicalReference": "stentor-models!ChatbaseDataStreamType:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!ChatbaseDataStreamType:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ChatbaseDataStreamType = "
            },
            {
              "kind": "Content",
              "text": "\"chatbase\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ChatbaseDataStreamType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!CommFieldType:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type CommFieldType = "
            },
            {
              "kind": "Content",
              "text": "\"phoneNumber\" | \"emailAddress\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "CommFieldType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!CompilablePath:type",
          "docComment": "/**\n * Compilable paths\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type CompilablePath = "
            },
            {
              "kind": "Reference",
              "text": "HistoricalPath",
              "canonicalReference": "stentor-models!HistoricalPath:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "PreviousHandlerPath",
              "canonicalReference": "stentor-models!PreviousHandlerPath:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "CompilablePath",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!Content:interface",
          "docComment": "/**\n * Base content map for the handler.\n *\n * All handlers have contextual help and cancel content\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface Content "
            }
          ],
          "releaseTag": "Public",
          "name": "Content",
          "members": [
            {
              "kind": "IndexSignature",
              "canonicalReference": "stentor-models!Content:index(1)",
              "docComment": "/**\n * All remaining content must be an array of string keys corresponding to an array of responses.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "[key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "]: "
                },
                {
                  "kind": "Reference",
                  "text": "Response",
                  "canonicalReference": "stentor-models!Response:type"
                },
                {
                  "kind": "Content",
                  "text": "[] | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Content#CancelIntent:member",
              "docComment": "/**\n * Used when the user says \"cancel\" or \"exit\"\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "CancelIntent?: "
                },
                {
                  "kind": "Reference",
                  "text": "Response",
                  "canonicalReference": "stentor-models!Response:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "CancelIntent",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Content#HelpIntent:member",
              "docComment": "/**\n * Used when the user asks for help, opportunity to provide contextual help based on the current handler.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "HelpIntent?: "
                },
                {
                  "kind": "Reference",
                  "text": "Response",
                  "canonicalReference": "stentor-models!Response:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "HelpIntent",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!Context:interface",
          "docComment": "/**\n * Context object that is passed around while formulating the response\n *\n * NOTE: This is really HandlerContext\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface Context<S extends "
            },
            {
              "kind": "Reference",
              "text": "Storage",
              "canonicalReference": "stentor-models!Storage:interface"
            },
            {
              "kind": "Content",
              "text": " "
            },
            {
              "kind": "Content",
              "text": "= "
            },
            {
              "kind": "Reference",
              "text": "Storage",
              "canonicalReference": "stentor-models!Storage:interface"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "S",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              }
            }
          ],
          "name": "Context",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Context#audioPlayer:member",
              "docComment": "/**\n * Status of the Audio Player\n *\n * Only exists if the app is playing audio\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "audioPlayer?: "
                },
                {
                  "kind": "Reference",
                  "text": "AudioPlayer",
                  "canonicalReference": "stentor-models!AudioPlayer:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "audioPlayer",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Context#device:member",
              "docComment": "/**\n * Device Capabilities\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "device: "
                },
                {
                  "kind": "Reference",
                  "text": "Device",
                  "canonicalReference": "stentor-models!Device:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "device",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Context#pii:member",
              "docComment": "/**\n * The PII record\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "pii?: "
                },
                {
                  "kind": "Reference",
                  "text": "Pii",
                  "canonicalReference": "stentor-models!Pii:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "pii",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Context#requestUserData:member",
              "docComment": "/**\n * A method that servers user profile data (email, location, phone number, etc)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "requestUserData?: "
                },
                {
                  "kind": "Reference",
                  "text": "UserData",
                  "canonicalReference": "stentor-models!UserData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "requestUserData",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Context#response:member",
              "docComment": "/**\n * The response builder.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "response: "
                },
                {
                  "kind": "Reference",
                  "text": "AbstractResponseBuilder",
                  "canonicalReference": "stentor-models!AbstractResponseBuilder:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "response",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Context#session:member",
              "docComment": "/**\n * Session data. Gets deleted when session (id) changes)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "session?: "
                },
                {
                  "kind": "Reference",
                  "text": "SessionStore",
                  "canonicalReference": "stentor-models!SessionStore:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "session",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Context#storage:member",
              "docComment": "/**\n * Long term storage for the user.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "storage: "
                },
                {
                  "kind": "Content",
                  "text": "S"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "storage",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "stentor-models!Context#timeLeftInMillis:member(1)",
              "docComment": "/**\n * Milliseconds left from the execution (NOTE: infinity if not executing in a lambda)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "timeLeftInMillis?(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "timeLeftInMillis"
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!Contexts:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type Contexts = "
            },
            {
              "kind": "Reference",
              "text": "JSONDependent",
              "canonicalReference": "stentor-models!JSONDependent:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "LastActive",
              "canonicalReference": "stentor-models!LastActive:type"
            },
            {
              "kind": "Content",
              "text": "<object> | "
            },
            {
              "kind": "Reference",
              "text": "RequestDependent",
              "canonicalReference": "stentor-models!RequestDependent:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "Schedulable",
              "canonicalReference": "stentor-models!Schedulable:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "SlotDependent",
              "canonicalReference": "stentor-models!SlotDependent:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "StorageDependent",
              "canonicalReference": "stentor-models!StorageDependent:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "SystemDependent",
              "canonicalReference": "stentor-models!SystemDependent:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "Contexts",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 14
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!Contextual:interface",
          "docComment": "/**\n * Currently not in use, for discussion.\n *\n * The idea is this would allow us to add an array of contexts and we can `or` or `and` the contexts. `or` would require one of them to match and `and` would require all to match.\n *\n * TODO: Remove if never used\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface Contextual "
            }
          ],
          "releaseTag": "Public",
          "name": "Contextual",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Contextual#context:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "context?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        and?: "
                },
                {
                  "kind": "Reference",
                  "text": "Contexts",
                  "canonicalReference": "stentor-models!Contexts:type"
                },
                {
                  "kind": "Content",
                  "text": "[];\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "context",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!CustomType:type",
          "docComment": "/**\n * Used to communicate the app is custom and does not adhere to a specific predefined template.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type CustomType = "
            },
            {
              "kind": "Content",
              "text": "\"CUSTOM\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "CustomType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!DashbotDataStream:interface",
          "docComment": "/**\n * Data for Dashbot integration\n *\n * See {@link https://www.dashbot.io/voicelabs}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface DashbotDataStream extends "
            },
            {
              "kind": "Reference",
              "text": "BaseDataStream",
              "canonicalReference": "stentor-models!BaseDataStream:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "DashbotDataStream",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!DashbotDataStream#alexaToken:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "alexaToken: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "alexaToken",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!DashbotDataStream#googleToken:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "googleToken: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "googleToken",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!DashbotDataStream#type:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type: "
                },
                {
                  "kind": "Reference",
                  "text": "DashbotDataStreamType",
                  "canonicalReference": "stentor-models!DashbotDataStreamType:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!DashbotDataStreamType:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type DashbotDataStreamType = "
            },
            {
              "kind": "Content",
              "text": "\"dashbot\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "DashbotDataStreamType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!Data:interface",
          "docComment": "/**\n * Base data object for all the handlers\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface Data "
            }
          ],
          "releaseTag": "Public",
          "name": "Data",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Data#accessibleThroughDiscovery:member",
              "docComment": "/**\n * Is the handler available externally through discovery.\n *\n * On Google it means this accessible through Discovery (see {@link https://developers.google.com/actions/sdk/invocation-and-discovery#discovery}) and on Alexa CanfulfillIntentRequest (see {@link https://developer.amazon.com/docs/custom-skills/understand-name-free-interaction-for-custom-skills.html})\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "accessibleThroughDiscovery?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "accessibleThroughDiscovery",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Data#inputUnknownStrategy:member",
              "docComment": "/**\n * Strategy to use when the handler receives an InputUnknown request.\n *\n * Global requests the global InputUnknownHandler Google's recommended pattern as outlined here: https://designguidelines.withgoogle.com/conversation/conversational-components/errors.html Reprompt uses the reprompt from the previous response.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "inputUnknownStrategy?: "
                },
                {
                  "kind": "Reference",
                  "text": "InputUnknownStrategyGlobal",
                  "canonicalReference": "stentor-models!InputUnknownStrategyGlobal:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "InputUnknownStrategyGoogle",
                  "canonicalReference": "stentor-models!InputUnknownStrategyGoogle:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "InputUnknownStrategyReprompt",
                  "canonicalReference": "stentor-models!InputUnknownStrategyReprompt:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "inputUnknownStrategy",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!DateTime:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface DateTime "
            }
          ],
          "releaseTag": "Public",
          "name": "DateTime",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!DateTime#date:member",
              "docComment": "/**\n * ISO-8601 for the date, in the format YYYY-MM-dd\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "date?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "date",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!DateTime#time:member",
              "docComment": "/**\n * ISO-8601 for time, in the format HH:mm:ss\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "time?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "time",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!DateTime#tz:member",
              "docComment": "/**\n * ISO-8601 timezone offset string in the format -05:00 or Z\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tz?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "tz",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!DateTimeRange:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface DateTimeRange "
            }
          ],
          "releaseTag": "Public",
          "name": "DateTimeRange",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!DateTimeRange#end:member",
              "docComment": "/**\n * End of the range.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "end: "
                },
                {
                  "kind": "Reference",
                  "text": "DateTime",
                  "canonicalReference": "stentor-models!DateTime:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "end",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!DateTimeRange#start:member",
              "docComment": "/**\n * Start of the range\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "start: "
                },
                {
                  "kind": "Reference",
                  "text": "DateTime",
                  "canonicalReference": "stentor-models!DateTime:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "start",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!DelegatedHandlerMethod:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type DelegatedHandlerMethod = "
            },
            {
              "kind": "Content",
              "text": "(request: "
            },
            {
              "kind": "Reference",
              "text": "Request",
              "canonicalReference": "stentor-models!Request:type"
            },
            {
              "kind": "Content",
              "text": ", context: "
            },
            {
              "kind": "Reference",
              "text": "Context",
              "canonicalReference": "stentor-models!Context:interface"
            },
            {
              "kind": "Content",
              "text": ", content: "
            },
            {
              "kind": "Reference",
              "text": "Content",
              "canonicalReference": "stentor-models!Content:interface"
            },
            {
              "kind": "Content",
              "text": ", data: "
            },
            {
              "kind": "Reference",
              "text": "Data",
              "canonicalReference": "stentor-models!Data:interface"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<void>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "DelegatedHandlerMethod",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 12
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!DelegatedRequestMethod:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type DelegatedRequestMethod = "
            },
            {
              "kind": "Content",
              "text": "(request: "
            },
            {
              "kind": "Reference",
              "text": "Request",
              "canonicalReference": "stentor-models!Request:type"
            },
            {
              "kind": "Content",
              "text": ") => boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "DelegatedRequestMethod",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!Device:interface",
          "docComment": "/**\n * Describes the capability of the device where the request originated.\n *\n * It also provides insight to how you can respond to the current request as it isn't always possible to return speech.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface Device "
            }
          ],
          "releaseTag": "Public",
          "name": "Device",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Device#audioSupported:member",
              "docComment": "/**\n * If the device is capable of playing audio.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "audioSupported: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "audioSupported",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Device#canPlayAudio:member",
              "docComment": "/**\n * If the current request can be responded to with audio.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "canPlayAudio: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "canPlayAudio",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Device#canPlayVideo:member",
              "docComment": "/**\n * If the current request can be responded to with video.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "canPlayVideo: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "canPlayVideo",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Device#canSpeak:member",
              "docComment": "/**\n * If the device (and current request) can be responded to with speech\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "canSpeak: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "canSpeak",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Device#canThrowCard:member",
              "docComment": "/**\n * If the device (and current request) can throw a card\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "canThrowCard: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "canThrowCard",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Device#canTransferCall:member",
              "docComment": "/**\n * If the device is capable to transfer calls (usually to an live agent).\n *\n * Telephony channels typically can perform this.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "canTransferCall: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "canTransferCall",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Device#channel:member",
              "docComment": "/**\n * The channel the user is on.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "channel: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "channel",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Device#displayData:member",
              "docComment": "/**\n * Display data\n *\n * Used to tell a little bit more about the display type if data is available\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "displayData?: "
                },
                {
                  "kind": "Reference",
                  "text": "DisplayData",
                  "canonicalReference": "stentor-models!DisplayData:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "displayData",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Device#hasScreen:member",
              "docComment": "/**\n * If the device has a screen.\n *\n * Used to determine if we can link accounts on Google or return display interfaces on Alexa.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hasScreen: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "hasScreen",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Device#videoSupported:member",
              "docComment": "/**\n * If the device is capable of playing video.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "videoSupported: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "videoSupported",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!DialogflowDataStream:interface",
          "docComment": "/**\n * Data for Dialogflow NLU\n *\n * @deprecated\n *\n * Use NLU on the App model\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface DialogflowDataStream extends "
            },
            {
              "kind": "Reference",
              "text": "BaseDataStream",
              "canonicalReference": "stentor-models!BaseDataStream:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "DialogflowDataStream",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!DialogflowDataStream#authToken:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "authToken: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "authToken",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!DialogflowDataStream#minimumScore:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "minimumScore?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "minimumScore",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!DialogflowDataStream#type:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type: "
                },
                {
                  "kind": "Reference",
                  "text": "DialogflowType",
                  "canonicalReference": "stentor-models!DialogflowType:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!DialogflowDataStream#url:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "url: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "url",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!DialogflowType:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type DialogflowType = "
            },
            {
              "kind": "Content",
              "text": "\"dialogflow\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "DialogflowType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!DialogflowV2Data:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface DialogflowV2Data extends "
            },
            {
              "kind": "Reference",
              "text": "BaseData",
              "canonicalReference": "stentor-models!BaseData:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "DialogflowV2Data",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!DialogflowV2Data#platform:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "platform: "
                },
                {
                  "kind": "Content",
                  "text": "\"dialogflow2\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "platform",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!DialogflowV2Data#projectId:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "projectId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "projectId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!Display:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type Display = "
            },
            {
              "kind": "Reference",
              "text": "AlexaCard",
              "canonicalReference": "ask-sdk-model!ui.Card:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "BasicCardItem",
              "canonicalReference": "stentor-models!BasicCardItem:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "Card",
              "canonicalReference": "stentor-models!Card:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "CarouselSelectData",
              "canonicalReference": "stentor-models!CarouselSelectData:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "List",
              "canonicalReference": "stentor-models!List:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "ListSelectData",
              "canonicalReference": "stentor-models!ListSelectData:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "NativeTemplateDirective",
              "canonicalReference": "stentor-models!NativeTemplateDirective:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "RenderTemplateDirective",
              "canonicalReference": "ask-sdk-model!interfaces.display.RenderTemplateDirective:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "SimpleDisplay",
              "canonicalReference": "stentor-models!SimpleDisplay:interface"
            },
            {
              "kind": "Content",
              "text": " | object"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "Display",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 19
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!DisplayData:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface DisplayData "
            }
          ],
          "releaseTag": "Public",
          "name": "DisplayData",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!DisplayData#dpi:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dpi?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "dpi",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!DisplayData#pixelHeight:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "pixelHeight?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "pixelHeight",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!DisplayData#pixelWidth:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "pixelWidth?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "pixelWidth",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!DisplayData#shape:member",
              "docComment": "/**\n * Display type\n *\n * Used to tell the display type if available to tweak visuals if needed. This is just guessing.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "shape?: "
                },
                {
                  "kind": "Reference",
                  "text": "DisplayShape",
                  "canonicalReference": "stentor-models!DisplayShape:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "shape",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!DisplayListItem:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface DisplayListItem "
            }
          ],
          "releaseTag": "Public",
          "name": "DisplayListItem",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!DisplayListItem#description:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "description: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "description",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!DisplayListItem#image:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "image: "
                },
                {
                  "kind": "Reference",
                  "text": "Image",
                  "canonicalReference": "stentor-models!Image:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "image",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!DisplayListItem#title:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "title: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "title",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!DisplayListItem#token:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "token: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "token",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!DisplayShape:type",
          "docComment": "/**\n * The hardware type (screen) if we have it\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type DisplayShape = "
            },
            {
              "kind": "Content",
              "text": "\"RECTANGLE\" | \"ROUND\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "DisplayShape",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!Duration:interface",
          "docComment": "/**\n * Duration, amount and format.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface Duration "
            }
          ],
          "releaseTag": "Public",
          "name": "Duration",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Duration#amount:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly amount: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "amount",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Duration#format:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly format: "
                },
                {
                  "kind": "Reference",
                  "text": "DurationFormat",
                  "canonicalReference": "stentor-models!DurationFormat:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "format",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!DurationFormat:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type DurationFormat = "
            },
            {
              "kind": "Content",
              "text": "\"year\" | \"years\" | \"y\" | \"quarter\" | \"quarters\" | \"Q\" | \"month\" | \"months\" | \"M\" | \"week\" | \"weeks\" | \"w\" | \"day\" | \"days\" | \"d\" | \"hour\" | \"hours\" | \"h\" | \"minute\" | \"minutes\" | \"m\" | \"second\" | \"seconds\" | \"s\" | \"millisecond\" | \"milliseconds\" | \"ms\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "DurationFormat",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!EmailDescription:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface EmailDescription "
            }
          ],
          "releaseTag": "Public",
          "name": "EmailDescription",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!EmailDescription#recipient:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "recipient?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "recipient",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!EmailDescription#sender:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sender: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "sender",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!EmailDescription#subject:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "subject: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "subject",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!EmailDescription#templateUrl:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "templateUrl: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "templateUrl",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!Entity:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface Entity "
            }
          ],
          "releaseTag": "Public",
          "name": "Entity",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Entity#appId:member",
              "docComment": "/**\n * The ID for the application the entity belongs to.\n *\n * This is immutable.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "appId?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "appId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Entity#dialogflowId:member",
              "docComment": "/**\n * Optional ID if the slot type has a representation in Dialogflow.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dialogflowId?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "dialogflowId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Entity#displayName:member",
              "docComment": "/**\n * Optional display name, used to help better communicate the entity.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "displayName?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "displayName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Entity#entityId:member",
              "docComment": "/**\n * The ID (name) of the entity.\n *\n * This is meant for machines but is somewhat human readable\n *\n * This is immutable.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "entityId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "entityId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Entity#values:member",
              "docComment": "/**\n * Values for the entity.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "values: "
                },
                {
                  "kind": "Reference",
                  "text": "EntityValue",
                  "canonicalReference": "stentor-models!EntityValue:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "values",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!EntityValue:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface EntityValue "
            }
          ],
          "releaseTag": "Public",
          "name": "EntityValue",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!EntityValue#canonicalId:member",
              "docComment": "/**\n * Used by Alexa. This value is returned as a reference, such as \"LAX\"\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "canonicalId?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "canonicalId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!EntityValue#name:member",
              "docComment": "/**\n * The name of the entity.\n *\n * For example, for an entity called cities, a value would be \"Los Angeles\".\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!EntityValue#synonyms:member",
              "docComment": "/**\n * List of potential synonyms for the entity.\n *\n * For example, \"L.A.\"\" & \"City of Angels\"\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "synonyms?: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "synonyms",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!ErrorEvent:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ErrorEvent extends "
            },
            {
              "kind": "Reference",
              "text": "Event",
              "canonicalReference": "stentor-models!Event:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ErrorPayload",
              "canonicalReference": "stentor-models!ErrorPayload:interface"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "name": "ErrorEvent",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!ErrorEvent#type:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type: "
                },
                {
                  "kind": "Reference",
                  "text": "ErrorEventType",
                  "canonicalReference": "stentor-models!ErrorEventType:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 5
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!ErrorEventType:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ErrorEventType = "
            },
            {
              "kind": "Content",
              "text": "\"ERROR\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ErrorEventType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!ErrorPayload:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ErrorPayload "
            }
          ],
          "releaseTag": "Public",
          "name": "ErrorPayload",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!ErrorPayload#message:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "message: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "message",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!ErrorPayload#stack:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "stack: "
                },
                {
                  "kind": "Reference",
                  "text": "ErrorPayloadStack",
                  "canonicalReference": "stentor-models!ErrorPayloadStack:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "stack",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!ErrorPayloadStack:interface",
          "docComment": "/**\n * The individual stack trace line.\n *\n * We leverage stacktrace-parser to accomplish this, these types are from https://github.com/errwischt/stacktrace-parser/blob/c91463fd96b4acf962857551235755212dc33e2e/src/index.d.ts#L3\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ErrorPayloadStack "
            }
          ],
          "releaseTag": "Public",
          "name": "ErrorPayloadStack",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!ErrorPayloadStack#arguments:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "arguments: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "arguments",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!ErrorPayloadStack#column:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "column: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "column",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!ErrorPayloadStack#file:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "file: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "file",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!ErrorPayloadStack#lineNumber:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "lineNumber: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "lineNumber",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!ErrorPayloadStack#methodName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "methodName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "methodName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!Event:interface",
          "docComment": "/**\n * The base structure for an Event. An event must be serializable to a string so it can be reconstructed on the other side.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface Event<P extends "
            },
            {
              "kind": "Content",
              "text": "string | boolean | object | number | undefined "
            },
            {
              "kind": "Content",
              "text": "= "
            },
            {
              "kind": "Content",
              "text": "undefined"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "P",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "name": "Event",
          "members": [
            {
              "kind": "IndexSignature",
              "canonicalReference": "stentor-models!Event:index(1)",
              "docComment": "/**\n * Any additional keys with which this event contains.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "[key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "]: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Event#currentHandler:member",
              "docComment": "/**\n * The current handler the user was in at the time of the request.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "currentHandler?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "currentHandler",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Event#isHealthCheck:member",
              "docComment": "/**\n * Is the event from a health check\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isHealthCheck?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "isHealthCheck",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Event#isNewSession:member",
              "docComment": "/**\n * Is the event the start of a session.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isNewSession?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "isNewSession",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Event#name:member",
              "docComment": "/**\n * The name of this event.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Event#payload:member",
              "docComment": "/**\n * A serializable payload to associate with the event.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "payload?: "
                },
                {
                  "kind": "Content",
                  "text": "P"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "payload",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Event#selectedHandler:member",
              "docComment": "/**\n * The handler that was selected based on the request and the current handler.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "selectedHandler?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "selectedHandler",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Event#type:member",
              "docComment": "/**\n * The type of event which is being sent.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type: "
                },
                {
                  "kind": "Reference",
                  "text": "EventType",
                  "canonicalReference": "stentor-models!EventType:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!EventStream:interface",
          "docComment": "/**\n * An event stream is a collection of events that eventually get dispatched to a particular endpoint.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface EventStream "
            }
          ],
          "releaseTag": "Public",
          "name": "EventStream",
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "stentor-models!EventStream#addEvent:member(1)",
              "docComment": "/**\n * Add an event to the stream. This will not be sent until the event is flushed.\n *\n * @param  - event The event to send.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addEvent(event: "
                },
                {
                  "kind": "Reference",
                  "text": "Event",
                  "canonicalReference": "stentor-models!Event:interface"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  }
                }
              ],
              "name": "addEvent"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "stentor-models!EventStream#flush:member(1)",
              "docComment": "/**\n * Send all the events to the end of the stream.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "flush(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "flush"
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!EventType:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type EventType = "
            },
            {
              "kind": "Reference",
              "text": "LambdaFailureEventType",
              "canonicalReference": "stentor-models!LambdaFailureEventType:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "LambdaSuccessEventType",
              "canonicalReference": "stentor-models!LambdaSuccessEventType:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "MessageEventType",
              "canonicalReference": "stentor-models!MessageEventType:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "RequestEventType",
              "canonicalReference": "stentor-models!RequestEventType:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "AnalyticsEvent",
              "canonicalReference": "stentor-models!AnalyticsEvent:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "ErrorEventType",
              "canonicalReference": "stentor-models!ErrorEventType:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "EventType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 12
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!ExecutablePath:interface",
          "docComment": "/**\n * An executable path defines exactly where an incoming request will be routed to.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ExecutablePath extends "
            },
            {
              "kind": "Reference",
              "text": "SharedPath",
              "canonicalReference": "stentor-models!SharedPath:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "ExecutablePath",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!ExecutablePath#intentId:member",
              "docComment": "/**\n * The ID of the handler to forward or redirect the request to\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "intentId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "intentId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!ExecutablePath#slots:member",
              "docComment": "/**\n * Optional, if redirecting or forwarding to a handler that is expecting slots, set these to pre-populate them on the request.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "slots?: "
                },
                {
                  "kind": "Reference",
                  "text": "RequestSlotMap",
                  "canonicalReference": "stentor-models!RequestSlotMap:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "slots",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!ExecutablePath#type:member",
              "docComment": "/**\n * Type of path.\n *\n * Setting type to START changes the request so that handler.start() is called.\n *\n * Not setting the type passes the request straight through, requiring the new handler to handle the request as is.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type?: "
                },
                {
                  "kind": "Reference",
                  "text": "PathType",
                  "canonicalReference": "stentor-models!PathType:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!Expirable:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface Expirable "
            }
          ],
          "releaseTag": "Public",
          "name": "Expirable",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Expirable#expiration:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "expiration: "
                },
                {
                  "kind": "Reference",
                  "text": "Expiration",
                  "canonicalReference": "stentor-models!Expiration:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "expiration",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!Expiration:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type Expiration = "
            },
            {
              "kind": "Reference",
              "text": "ExpirationDate",
              "canonicalReference": "stentor-models!ExpirationDate:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "ExpirationDuration",
              "canonicalReference": "stentor-models!ExpirationDuration:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "Expiration",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!ExpirationDate:interface",
          "docComment": "/**\n * A date to expire by.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ExpirationDate "
            }
          ],
          "releaseTag": "Public",
          "name": "ExpirationDate",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!ExpirationDate#date:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "date?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "date",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!ExpirationDuration:interface",
          "docComment": "/**\n * A duration to expire in.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ExpirationDuration "
            }
          ],
          "releaseTag": "Public",
          "name": "ExpirationDuration",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!ExpirationDuration#duration:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "duration?: "
                },
                {
                  "kind": "Reference",
                  "text": "Duration",
                  "canonicalReference": "stentor-models!Duration:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "duration",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!FirstIntent:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type FirstIntent = "
            },
            {
              "kind": "Content",
              "text": "\"FirstIntent\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "FirstIntent",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!FirstTime:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type FirstTime<T> = "
            },
            {
              "kind": "Content",
              "text": "T & "
            },
            {
              "kind": "Reference",
              "text": "FirstTimeable",
              "canonicalReference": "stentor-models!FirstTimeable:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "FirstTime",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!FirstTimeable:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface FirstTimeable "
            }
          ],
          "releaseTag": "Public",
          "name": "FirstTimeable",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!FirstTimeable#firstTime:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "firstTime: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "firstTime",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!Forward:interface",
          "docComment": "/**\n * A map of where to forward intent requests to.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface Forward "
            }
          ],
          "releaseTag": "Public",
          "name": "Forward",
          "members": [
            {
              "kind": "IndexSignature",
              "canonicalReference": "stentor-models!Forward:index(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "[key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "]: "
                },
                {
                  "kind": "Reference",
                  "text": "Path",
                  "canonicalReference": "stentor-models!Path:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!FullAppStatus:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface FullAppStatus extends "
            },
            {
              "kind": "Reference",
              "text": "AppStatus",
              "canonicalReference": "stentor-models!AppStatus:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "FullAppStatus",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!FullAppStatus#statusHistory:member",
              "docComment": "/**\n * History of the app's status\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "statusHistory?: "
                },
                {
                  "kind": "Reference",
                  "text": "AppStatus",
                  "canonicalReference": "stentor-models!AppStatus:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "statusHistory",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!GenericAudio:interface",
          "docComment": "/**\n * Simple implementation of Audio.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface GenericAudio extends "
            },
            {
              "kind": "Reference",
              "text": "Audio",
              "canonicalReference": "stentor-models!Audio:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "GenericAudio",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!GenericAudio#type:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type: "
                },
                {
                  "kind": "Reference",
                  "text": "GenericAudioType",
                  "canonicalReference": "stentor-models!GenericAudioType:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!GenericAudioType:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type GenericAudioType = "
            },
            {
              "kind": "Content",
              "text": "\"Audio\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "GenericAudioType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!GenericMediaPlaylistType:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type GenericMediaPlaylistType = "
            },
            {
              "kind": "Content",
              "text": "\"MediaPlaylist\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "GenericMediaPlaylistType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!GenericRSSFeedType:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type GenericRSSFeedType = "
            },
            {
              "kind": "Content",
              "text": "\"RSSFeed\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "GenericRSSFeedType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!GenericVideoType:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type GenericVideoType = "
            },
            {
              "kind": "Content",
              "text": "\"Video\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "GenericVideoType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!GoogleAdditionalInformationQuestions:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface GoogleAdditionalInformationQuestions "
            }
          ],
          "releaseTag": "Public",
          "name": "GoogleAdditionalInformationQuestions",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!GoogleAdditionalInformationQuestions#alcoholAndTobaccoRelatedContent:member",
              "docComment": "/**\n * From the copy of the question:\n *\n * Do your Actions contain alcohol or tobacco-related content? If yes, you must include age verification at the beginning of the conversation. If your Actions mainly sell alcohol or tobacco, you must implement account linking and verify that the user meets legal age requirements.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "alcoholAndTobaccoRelatedContent?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "alcoholAndTobaccoRelatedContent",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!GoogleAdditionalInformationQuestions#intendedForUnderThirteen:member",
              "docComment": "/**\n * From the copy of the question:\n *\n * Are children under the age of 13 one of the intended audiences of your Actions? If yes, you must join the Actions for Families program. The Actions for Families program allows developers to designate that their Actions are family-friendly, so parents and kids can find trusted, high-quality content more easily on the Google Assistant.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "intendedForUnderThirteen?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "intendedForUnderThirteen",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!GoogleAnalyticsDataStreamType:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type GoogleAnalyticsDataStreamType = "
            },
            {
              "kind": "Content",
              "text": "\"googleAnalytics\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "GoogleAnalyticsDataStreamType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!GoogleAnalyticsStream:interface",
          "docComment": "/**\n * Data for Google Analytics\n *\n * Token will be of format \"UA-XXXXXXX\"\n *\n * See {@link https://developer.amazon.com/blogs/alexa/post/TxPQVHWYRKJGXE/how-this-alexa-developer-easily-implemented-google-analytics-to-monitor-skill-performance}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface GoogleAnalyticsStream extends "
            },
            {
              "kind": "Reference",
              "text": "BaseDataStream",
              "canonicalReference": "stentor-models!BaseDataStream:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "GoogleAnalyticsStream",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!GoogleAnalyticsStream#token:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "token: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "token",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!GoogleAnalyticsStream#type:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type: "
                },
                {
                  "kind": "Reference",
                  "text": "GoogleAnalyticsDataStreamType",
                  "canonicalReference": "stentor-models!GoogleAnalyticsDataStreamType:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!GoogleMapsAddressComponent:interface",
          "docComment": "/**\n * description of a single component of an address (City, County, State/Province, Country, etc.)\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface GoogleMapsAddressComponent "
            }
          ],
          "releaseTag": "Public",
          "name": "GoogleMapsAddressComponent",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!GoogleMapsAddressComponent#long_name:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "long_name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "long_name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!GoogleMapsAddressComponent#short_name:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "short_name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "short_name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!GoogleMapsAddressComponent#types:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "types: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "types",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!GoogleMapsGeocodeResponse:interface",
          "docComment": "/**\n * Represents a single response from the geocode api in JSON format e.g. https://maps.googleapis.com/maps/api/geocode/json?&address=Portland\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface GoogleMapsGeocodeResponse "
            }
          ],
          "releaseTag": "Public",
          "name": "GoogleMapsGeocodeResponse",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!GoogleMapsGeocodeResponse#results:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "results: "
                },
                {
                  "kind": "Reference",
                  "text": "GoogleMapsResult",
                  "canonicalReference": "stentor-models!GoogleMapsResult:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "results",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!GoogleMapsGeocodeResponse#status:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "status: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "status",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!GoogleMapsLocation:interface",
          "docComment": "/**\n * A single point on a Google Map\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface GoogleMapsLocation "
            }
          ],
          "releaseTag": "Public",
          "name": "GoogleMapsLocation",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!GoogleMapsLocation#lat:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "lat: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "lat",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!GoogleMapsLocation#lng:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "lng: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "lng",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!GoogleMapsLocationBox:interface",
          "docComment": "/**\n * Represents the bounding area around a given location\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface GoogleMapsLocationBox "
            }
          ],
          "releaseTag": "Public",
          "name": "GoogleMapsLocationBox",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!GoogleMapsLocationBox#northeast:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "northeast: "
                },
                {
                  "kind": "Reference",
                  "text": "GoogleMapsLocation",
                  "canonicalReference": "stentor-models!GoogleMapsLocation:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "northeast",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!GoogleMapsLocationBox#southwest:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "southwest: "
                },
                {
                  "kind": "Reference",
                  "text": "GoogleMapsLocation",
                  "canonicalReference": "stentor-models!GoogleMapsLocation:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "southwest",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!GoogleMapsResult:interface",
          "docComment": "/**\n * Single entry of the results array\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface GoogleMapsResult "
            }
          ],
          "releaseTag": "Public",
          "name": "GoogleMapsResult",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!GoogleMapsResult#address_components:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "address_components: "
                },
                {
                  "kind": "Reference",
                  "text": "GoogleMapsAddressComponent",
                  "canonicalReference": "stentor-models!GoogleMapsAddressComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "address_components",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!GoogleMapsResult#formatted_address:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "formatted_address: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "formatted_address",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!GoogleMapsResult#geometry:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "geometry: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        bounds: "
                },
                {
                  "kind": "Reference",
                  "text": "GoogleMapsLocationBox",
                  "canonicalReference": "stentor-models!GoogleMapsLocationBox:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n        location: "
                },
                {
                  "kind": "Reference",
                  "text": "GoogleMapsLocation",
                  "canonicalReference": "stentor-models!GoogleMapsLocation:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n        location_type: string;\n        viewport: "
                },
                {
                  "kind": "Reference",
                  "text": "GoogleMapsLocationBox",
                  "canonicalReference": "stentor-models!GoogleMapsLocationBox:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "geometry",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!GoogleMapsResult#place_id:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "place_id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "place_id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!GoogleMapsResult#types:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "types: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "types",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!GooglePlatformData:interface",
          "docComment": "/**\n * Google specific information required for publication\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface GooglePlatformData extends "
            },
            {
              "kind": "Reference",
              "text": "BaseData",
              "canonicalReference": "stentor-models!BaseData:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "GooglePlatformData",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!GooglePlatformData#additionalInformationQuestions:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "additionalInformationQuestions?: "
                },
                {
                  "kind": "Reference",
                  "text": "GoogleAdditionalInformationQuestions",
                  "canonicalReference": "stentor-models!GoogleAdditionalInformationQuestions:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "additionalInformationQuestions",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!GooglePlatformData#platform:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "platform: "
                },
                {
                  "kind": "Content",
                  "text": "\"google\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "platform",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!GraphCoords:interface",
          "docComment": "/**\n * These are coordinates for the placement of the intent when placed in a graph with other intents.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface GraphCoords "
            }
          ],
          "releaseTag": "Public",
          "name": "GraphCoords",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!GraphCoords#x:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "x?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "x",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!GraphCoords#y:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "y?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "y",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!Handler:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface Handler<C extends "
            },
            {
              "kind": "Reference",
              "text": "Content",
              "canonicalReference": "stentor-models!Content:interface"
            },
            {
              "kind": "Content",
              "text": " "
            },
            {
              "kind": "Content",
              "text": "= "
            },
            {
              "kind": "Reference",
              "text": "Content",
              "canonicalReference": "stentor-models!Content:interface"
            },
            {
              "kind": "Content",
              "text": ", D extends "
            },
            {
              "kind": "Reference",
              "text": "Data",
              "canonicalReference": "stentor-models!Data:interface"
            },
            {
              "kind": "Content",
              "text": " "
            },
            {
              "kind": "Content",
              "text": "= "
            },
            {
              "kind": "Reference",
              "text": "Data",
              "canonicalReference": "stentor-models!Data:interface"
            },
            {
              "kind": "Content",
              "text": ", F extends "
            },
            {
              "kind": "Reference",
              "text": "Forward",
              "canonicalReference": "stentor-models!Forward:interface"
            },
            {
              "kind": "Content",
              "text": " "
            },
            {
              "kind": "Content",
              "text": "= "
            },
            {
              "kind": "Reference",
              "text": "Forward",
              "canonicalReference": "stentor-models!Forward:interface"
            },
            {
              "kind": "Content",
              "text": ", R extends "
            },
            {
              "kind": "Reference",
              "text": "Redirect",
              "canonicalReference": "stentor-models!Redirect:interface"
            },
            {
              "kind": "Content",
              "text": " "
            },
            {
              "kind": "Content",
              "text": "= "
            },
            {
              "kind": "Reference",
              "text": "Redirect",
              "canonicalReference": "stentor-models!Redirect:interface"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "Intent",
              "canonicalReference": "stentor-models!Intent:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "C",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              }
            },
            {
              "typeParameterName": "D",
              "constraintTokenRange": {
                "startIndex": 6,
                "endIndex": 8
              },
              "defaultTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              }
            },
            {
              "typeParameterName": "F",
              "constraintTokenRange": {
                "startIndex": 11,
                "endIndex": 13
              },
              "defaultTypeTokenRange": {
                "startIndex": 14,
                "endIndex": 15
              }
            },
            {
              "typeParameterName": "R",
              "constraintTokenRange": {
                "startIndex": 16,
                "endIndex": 18
              },
              "defaultTypeTokenRange": {
                "startIndex": 19,
                "endIndex": 20
              }
            }
          ],
          "name": "Handler",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Handler#content:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "content: "
                },
                {
                  "kind": "Content",
                  "text": "C"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "content",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Handler#data:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "data?: "
                },
                {
                  "kind": "Content",
                  "text": "D"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "data",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Handler#forward:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "forward?: "
                },
                {
                  "kind": "Content",
                  "text": "F"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "forward",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Handler#permissions:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "permissions?: "
                },
                {
                  "kind": "Reference",
                  "text": "UserDataType",
                  "canonicalReference": "stentor-models!UserDataType:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "permissions",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Handler#redirect:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "redirect?: "
                },
                {
                  "kind": "Content",
                  "text": "R"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "redirect",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Handler#type:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 21,
              "endIndex": 23
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!HandlerDelegates:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface HandlerDelegates "
            }
          ],
          "releaseTag": "Public",
          "name": "HandlerDelegates",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!HandlerDelegates#canHandleRequest:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "canHandleRequest?: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegatedRequestMethod",
                  "canonicalReference": "stentor-models!DelegatedRequestMethod:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "canHandleRequest",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!HandlerDelegates#handleRequest:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "handleRequest: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegatedHandlerMethod",
                  "canonicalReference": "stentor-models!DelegatedHandlerMethod:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "handleRequest",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!HandlerDelegates#start:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "start?: "
                },
                {
                  "kind": "Reference",
                  "text": "DelegatedHandlerMethod",
                  "canonicalReference": "stentor-models!DelegatedHandlerMethod:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "start",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!HandlerHistoryData:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface HandlerHistoryData "
            }
          ],
          "releaseTag": "Public",
          "name": "HandlerHistoryData",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!HandlerHistoryData#intentId:member",
              "docComment": "/**\n * The id of the handler.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "intentId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "intentId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!HandlerHistoryData#sessionId:member",
              "docComment": "/**\n * The ID for the session the handler was played in.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sessionId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "sessionId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!HandlerHistoryData#timestamp:member",
              "docComment": "/**\n * The timestamp the handler was requested.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "timestamp: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "timestamp",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!HandlerService:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface HandlerService "
            }
          ],
          "releaseTag": "Public",
          "name": "HandlerService",
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "stentor-models!HandlerService#get:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get(id: "
                },
                {
                  "kind": "Content",
                  "text": "string | {\n        intentId: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Handler",
                  "canonicalReference": "stentor-models!Handler:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "get"
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!HaveNotSeenWithin:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type HaveNotSeenWithin<T> = "
            },
            {
              "kind": "Content",
              "text": "T & "
            },
            {
              "kind": "Reference",
              "text": "HaveNotSeenWithinable",
              "canonicalReference": "stentor-models!HaveNotSeenWithinable:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "HaveNotSeenWithin",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!HaveNotSeenWithinable:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface HaveNotSeenWithinable "
            }
          ],
          "releaseTag": "Public",
          "name": "HaveNotSeenWithinable",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!HaveNotSeenWithinable#haveNotSeenWithin:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "haveNotSeenWithin: "
                },
                {
                  "kind": "Reference",
                  "text": "Duration",
                  "canonicalReference": "stentor-models!Duration:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "haveNotSeenWithin",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!HelpIntent:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type HelpIntent = "
            },
            {
              "kind": "Content",
              "text": "\"HelpIntent\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "HelpIntent",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!HistoricalPath:interface",
          "docComment": "/**\n * When compiled, it will move the user back to a previous handler they already visited.\n *\n * It always calls the start() method of the historical handler.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface HistoricalPath extends "
            },
            {
              "kind": "Reference",
              "text": "SharedPath",
              "canonicalReference": "stentor-models!SharedPath:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "HistoricalPath",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!HistoricalPath#historicalIndex:member",
              "docComment": "/**\n * The number of handlers to go back into the history of.\n *\n * This is typically just one and can be no more than 10.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "historicalIndex: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "historicalIndex",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!History:interface",
          "docComment": "/**\n * History is a map to store information about recent activity for the user by some hashed token that links back to the content.\n *\n * For PlayableHistoryData, the token is the token for the track, for HandlerHistoryData the token is the ID of the Handler.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface History "
            }
          ],
          "releaseTag": "Public",
          "name": "History",
          "members": [
            {
              "kind": "IndexSignature",
              "canonicalReference": "stentor-models!History:index(1)",
              "docComment": "/**\n * Remaining keys will typically be HistoryData or undefined.\n *\n * lastTrimmed and handler are reserved keys.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "[token: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "]: "
                },
                {
                  "kind": "Reference",
                  "text": "HistoryData",
                  "canonicalReference": "stentor-models!HistoryData:type"
                },
                {
                  "kind": "Content",
                  "text": " | number | "
                },
                {
                  "kind": "Reference",
                  "text": "HandlerHistoryData",
                  "canonicalReference": "stentor-models!HandlerHistoryData:interface"
                },
                {
                  "kind": "Content",
                  "text": "[] | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "token",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!History#handler:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "handler?: "
                },
                {
                  "kind": "Reference",
                  "text": "HandlerHistoryData",
                  "canonicalReference": "stentor-models!HandlerHistoryData:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "handler",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!History#lastTrimmed:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "lastTrimmed?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "lastTrimmed",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!HistoryData:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type HistoryData = "
            },
            {
              "kind": "Reference",
              "text": "PlayableHistoryData",
              "canonicalReference": "stentor-models!PlayableHistoryData:interface"
            },
            {
              "kind": "Content",
              "text": " | {}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "HistoryData",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!Hooks:interface",
          "docComment": "/**\n * Hooks are used to provide the opportunity to modify or log runtime data at different points in the lifecycle.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface Hooks "
            }
          ],
          "releaseTag": "Public",
          "name": "Hooks",
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "stentor-models!Hooks#postRequestTranslation:member(1)",
              "docComment": "/**\n * This hook is called directly after the request is translated for the channel.\n *\n * This can be an opportunity to modify the request but the request must be returned to continue operation.\n *\n * @param request - The request after it has been translated\n *\n * @returns Promise that passes back the request\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "postRequestTranslation?(request: "
                },
                {
                  "kind": "Reference",
                  "text": "Request",
                  "canonicalReference": "stentor-models!Request:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Request",
                  "canonicalReference": "stentor-models!Request:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "request",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "postRequestTranslation"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "stentor-models!Hooks#preExecution:member(1)",
              "docComment": "/**\n * Once the channel is selected and before the request is translated, the preExecution hook is called.\n *\n * This can be used for pre-execution modifications or checks. If an error is thrown, it will be caught and returned. If you return undefined, all execution will halt without throwing an error (feel free to call the callback yourself).\n *\n * @param event - \n *\n * @param context - \n *\n * @param callback - \n *\n * @returns Promise that either returns undefined to halt execution or the parameters back.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "preExecution?(event: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ", context: "
                },
                {
                  "kind": "Reference",
                  "text": "RuntimeContext",
                  "canonicalReference": "stentor-models!RuntimeContext:interface"
                },
                {
                  "kind": "Content",
                  "text": ", callback: "
                },
                {
                  "kind": "Reference",
                  "text": "RuntimeCallback",
                  "canonicalReference": "stentor-models!RuntimeCallback:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        event: object;\n        context: "
                },
                {
                  "kind": "Reference",
                  "text": "RuntimeContext",
                  "canonicalReference": "stentor-models!RuntimeContext:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n        callback: "
                },
                {
                  "kind": "Reference",
                  "text": "RuntimeCallback",
                  "canonicalReference": "stentor-models!RuntimeCallback:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    } | undefined>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "event",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "context",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "preExecution"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "stentor-models!Hooks#preResponseTranslation:member(1)",
              "docComment": "/**\n * This hook is called before the response is translated for the channel.\n *\n * Last chance to tweak the platform independent response or collect some data from the request/response (transcript).\n *\n * @param request - \n *\n * @param response - \n *\n * @returns \n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "preResponseTranslation?(request: "
                },
                {
                  "kind": "Reference",
                  "text": "Request",
                  "canonicalReference": "stentor-models!Request:type"
                },
                {
                  "kind": "Content",
                  "text": ", response: "
                },
                {
                  "kind": "Reference",
                  "text": "AbstractResponseBuilder",
                  "canonicalReference": "stentor-models!AbstractResponseBuilder:class"
                },
                {
                  "kind": "Content",
                  "text": ", storage: "
                },
                {
                  "kind": "Reference",
                  "text": "Storage",
                  "canonicalReference": "stentor-models!Storage:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        request: "
                },
                {
                  "kind": "Reference",
                  "text": "Request",
                  "canonicalReference": "stentor-models!Request:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        response: "
                },
                {
                  "kind": "Reference",
                  "text": "AbstractResponseBuilder",
                  "canonicalReference": "stentor-models!AbstractResponseBuilder:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        storage: "
                },
                {
                  "kind": "Reference",
                  "text": "Storage",
                  "canonicalReference": "stentor-models!Storage:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 15
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "request",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "response",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "storage",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "preResponseTranslation"
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!Image:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface Image "
            }
          ],
          "releaseTag": "Public",
          "name": "Image",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Image#contentDescription:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "contentDescription?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "contentDescription",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Image#sources:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sources: "
                },
                {
                  "kind": "Reference",
                  "text": "ImageSpecification",
                  "canonicalReference": "stentor-models!ImageSpecification:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "sources",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!ImageSpecification:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ImageSpecification "
            }
          ],
          "releaseTag": "Public",
          "name": "ImageSpecification",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!ImageSpecification#height:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "height: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "height",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!ImageSpecification#imageUrl:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "imageUrl: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "imageUrl",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!ImageSpecification#width:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "width: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "width",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!ImageType:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ImageType = "
            },
            {
              "kind": "Content",
              "text": "\"Image\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ImageType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!InputUnknown:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type InputUnknown = "
            },
            {
              "kind": "Content",
              "text": "\"InputUnknown\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "InputUnknown",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!InputUnknownID:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type InputUnknownID = "
            },
            {
              "kind": "Content",
              "text": "\"InputUnknown\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "InputUnknownID",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!InputUnknownRequest:interface",
          "docComment": "/**\n * Request when a user requests something not in the interaction model.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface InputUnknownRequest extends "
            },
            {
              "kind": "Reference",
              "text": "BaseRequest",
              "canonicalReference": "stentor-models!BaseRequest:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "InputUnknownRequest",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!InputUnknownRequest#intentId:member",
              "docComment": "/**\n * Input Unknowns have a constant intentId.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "intentId: "
                },
                {
                  "kind": "Reference",
                  "text": "InputUnknownID",
                  "canonicalReference": "stentor-models!InputUnknownID:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "intentId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!InputUnknownRequest#sessionId:member",
              "docComment": "/**\n * The session ID.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sessionId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "sessionId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!InputUnknownRequest#type:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type: "
                },
                {
                  "kind": "Reference",
                  "text": "InputUnknownRequestType",
                  "canonicalReference": "stentor-models!InputUnknownRequestType:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!InputUnknownRequestType:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type InputUnknownRequestType = "
            },
            {
              "kind": "Content",
              "text": "\"INPUT_UNKNOWN_REQUEST\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "InputUnknownRequestType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!InputUnknownStrategyGlobal:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type InputUnknownStrategyGlobal = "
            },
            {
              "kind": "Content",
              "text": "\"GLOBAL\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "InputUnknownStrategyGlobal",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!InputUnknownStrategyGoogle:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type InputUnknownStrategyGoogle = "
            },
            {
              "kind": "Content",
              "text": "\"GOOGLE\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "InputUnknownStrategyGoogle",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!InputUnknownStrategyReprompt:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type InputUnknownStrategyReprompt = "
            },
            {
              "kind": "Content",
              "text": "\"REPROMPT\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "InputUnknownStrategyReprompt",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!Intent:interface",
          "docComment": "/**\n * Intents represent the request of a user.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface Intent extends "
            },
            {
              "kind": "Reference",
              "text": "Localizable",
              "canonicalReference": "stentor-models!Localizable:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "LocaleSpecificIntent",
              "canonicalReference": "stentor-models!LocaleSpecificIntent:type"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "name": "Intent",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Intent#appId:member",
              "docComment": "/**\n * The ID for the app the intent belongs to.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "appId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "appId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Intent#createdAt:member",
              "docComment": "/**\n * ISO-8601 string of when the intent was created.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "createdAt?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "createdAt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Intent#defaultLocale:member",
              "docComment": "/**\n * This is the locale in which the app is primarily focused on. The intent will publish to this locale with the data provided. Items which can be overwritten can be placed in the \"locale\" section with the locale necessary.\n *\n * @defaultValue\n *\n * \"en\"\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "defaultLocale?: "
                },
                {
                  "kind": "Reference",
                  "text": "Locale",
                  "canonicalReference": "stentor-models!Locale:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "defaultLocale",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Intent#dialogflowId:member",
              "docComment": "/**\n * Dialogflow keeps track of individual intents by a unique ID.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dialogflowId?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "dialogflowId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Intent#graphCoords:member",
              "docComment": "/**\n * UI position coordinates for graphing.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "graphCoords?: "
                },
                {
                  "kind": "Reference",
                  "text": "GraphCoords",
                  "canonicalReference": "stentor-models!GraphCoords:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "graphCoords",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Intent#intentId:member",
              "docComment": "/**\n * The ID of the intent, typically a combination of the name and a random string.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "intentId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "intentId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Intent#langCode:member",
              "docComment": "/**\n * The language code. Defaults to \"en-US\".\n *\n * @deprecated\n *\n * This is no longer in use (it was in fact, never used). Favor {@link Intent.defaultLocale} and {@link Intent.locales} instead.\n *\n * @defaultValue\n *\n * \"en-US\"\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "langCode?: "
                },
                {
                  "kind": "Reference",
                  "text": "LangCode",
                  "canonicalReference": "stentor-models!LangCode:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "langCode",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Intent#locales:member",
              "docComment": "/**\n * This is a series of locales that the apps supports. These can override the items that are in the original Intent. The items in the main intent are used as defaults if they are not provided by this locale.\n *\n * Locales are hierarchical. Languages will override the default attributes. Dialects will override the languages.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "locales?: "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Locale",
                  "canonicalReference": "stentor-models!Locale:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "LocaleSpecificIntent",
                  "canonicalReference": "stentor-models!LocaleSpecificIntent:type"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "locales",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Intent#name:member",
              "docComment": "/**\n * The human readable name of the intent.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "name?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Intent#organizationId:member",
              "docComment": "/**\n * The organization ID for the app of which this intent belongs.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "organizationId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "organizationId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Intent#slots:member",
              "docComment": "/**\n * The slots defined within the utterance patterns and their Entity types.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "slots?: "
                },
                {
                  "kind": "Reference",
                  "text": "Slot",
                  "canonicalReference": "stentor-models!Slot:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "slots",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Intent#slotTypes:member",
              "docComment": "/**\n * A map of the slot type definition.\n *\n * @deprecated\n *\n * Use Entities\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "slotTypes?: "
                },
                {
                  "kind": "Reference",
                  "text": "SlotTypeMap",
                  "canonicalReference": "stentor-models!SlotTypeMap:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "slotTypes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Intent#substitutions:member",
              "docComment": "/**\n * Substitutions can be used to clean up your utterance pattern to make it more readable.\n *\n * For example, you may often have a lot of slots at the beginning of every pattern:\n *\n * `\\{$\\{acknowledge\\}|$\\{yes_no\\}|\\}$\\{prefix\\} the rest of the utterance`\n *\n * This then moves the actual meat of the pattern to the right when really you don't care about the above except that it is there.\n *\n * Substitutions will allow you to replace these, just at the local intent level, to make it easier to read.\n *\n * \\{ [\"_PREFIX_\"]\\}: \"\\{$\\{acknowledge\\}|$\\{yes_no\\}|\\}$\\{prefix\\}\" \\}\n *\n * So it then becomes:\n *\n * `$\\{_PREFIX_\\} the rest of the utterance`\n *\n * It also allows you to change the substitution value and have it updated across all the utterance patterns where the substitution exists.\n *\n * When compiling the patterns, the substitution is applied first before expanding.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "substitutions?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        [pattern: string]: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "substitutions",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Intent#utterancePatterns:member",
              "docComment": "/**\n * An array of utterance patterns.\n *\n * For more information on syntax see {@link https://github.com/alexa-js/alexa-utterances}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "utterancePatterns?: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "utterancePatterns",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 5
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!IntentRequest:interface",
          "docComment": "/**\n * Request for a particular intent.\n *\n * For Alexa see {@link https://developer.amazon.com/public/solutions/alexa/alexa-skills-kit/docs/handling-requests-sent-by-alexa#intentrequest}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IntentRequest extends "
            },
            {
              "kind": "Reference",
              "text": "BaseRequest",
              "canonicalReference": "stentor-models!BaseRequest:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "IntentRequest",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!IntentRequest#canFulfill:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "canFulfill?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "canFulfill",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!IntentRequest#data:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "data?: "
                },
                {
                  "kind": "Reference",
                  "text": "Data",
                  "canonicalReference": "stentor-models!Data:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "data",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!IntentRequest#intentId:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "intentId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "intentId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!IntentRequest#isBargeIn:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isBargeIn?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "isBargeIn",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!IntentRequest#knowledgeAnswer:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "knowledgeAnswer?: "
                },
                {
                  "kind": "Reference",
                  "text": "KnowledgeAnswer",
                  "canonicalReference": "stentor-models!KnowledgeAnswer:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "knowledgeAnswer",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!IntentRequest#sessionId:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sessionId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "sessionId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!IntentRequest#slots:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "slots?: "
                },
                {
                  "kind": "Reference",
                  "text": "RequestSlotMap",
                  "canonicalReference": "stentor-models!RequestSlotMap:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "slots",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!IntentRequest#type:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type: "
                },
                {
                  "kind": "Reference",
                  "text": "IntentRequestType",
                  "canonicalReference": "stentor-models!IntentRequestType:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!IntentRequestEvent:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IntentRequestEvent extends "
            },
            {
              "kind": "Reference",
              "text": "RequestEvent",
              "canonicalReference": "stentor-models!RequestEvent:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "IntentRequestPayload",
              "canonicalReference": "stentor-models!IntentRequestPayload:interface"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "name": "IntentRequestEvent",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!IntentRequestEvent#name:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "name: "
                },
                {
                  "kind": "Reference",
                  "text": "IntentRequestType",
                  "canonicalReference": "stentor-models!IntentRequestType:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 5
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!IntentRequestPayload:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IntentRequestPayload "
            }
          ],
          "releaseTag": "Public",
          "name": "IntentRequestPayload",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!IntentRequestPayload#intent:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "intent: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "intent",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!IntentRequestPayload#rawQuery:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "rawQuery?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "rawQuery",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!IntentRequestPayload#slots:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "slots?: "
                },
                {
                  "kind": "Reference",
                  "text": "RequestSlotMap",
                  "canonicalReference": "stentor-models!RequestSlotMap:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "slots",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!IntentRequestType:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type IntentRequestType = "
            },
            {
              "kind": "Content",
              "text": "\"INTENT_REQUEST\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "IntentRequestType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!IPRights:interface",
          "docComment": "/**\n * The IP rights documents that exist for the various platforms.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface IPRights "
            }
          ],
          "releaseTag": "Public",
          "name": "IPRights",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!IPRights#alexa:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "alexa?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "alexa",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!JSONDependable:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type JSONDependable<T> = "
            },
            {
              "kind": "Content",
              "text": "T & "
            },
            {
              "kind": "Reference",
              "text": "JSONDependent",
              "canonicalReference": "stentor-models!JSONDependent:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "JSONDependable",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!JSONDependableResponse:type",
          "docComment": "/**\n * A response that is dependent on a particular JSON path matcher.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type JSONDependableResponse<T = "
            },
            {
              "kind": "Content",
              "text": "string | "
            },
            {
              "kind": "Reference",
              "text": "ResponseOutput",
              "canonicalReference": "stentor-models!ResponseOutput:interface"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Reference",
              "text": "JSONDependable",
              "canonicalReference": "stentor-models!JSONDependable:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "SimpleResponse",
              "canonicalReference": "stentor-models!SimpleResponse:interface"
            },
            {
              "kind": "Content",
              "text": "<T>>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "JSONDependableResponse",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 4,
            "endIndex": 8
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!JSONDependent:interface",
          "docComment": "/**\n * Path based on evaluating a JSON path to determine the value that will be matched.\n *\n * For example: name: $.request.slots.slot2.value will evaluate the slot with name slot2 name: $.context.storage.key1 will evaluate key1 on the user's storage\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface JSONDependent "
            }
          ],
          "releaseTag": "Public",
          "name": "JSONDependent",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!JSONDependent#JSONPathMatch:member",
              "docComment": "/**\n * Match data for the JSON path.\n *\n * 'name' on Match is the JSON path\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "JSONPathMatch: "
                },
                {
                  "kind": "Reference",
                  "text": "Match",
                  "canonicalReference": "stentor-models!Match:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "JSONPathMatch",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!JSONDependentPath:type",
          "docComment": "/**\n * Path used if a particular key-value pair on the user's storage matches.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type JSONDependentPath = "
            },
            {
              "kind": "Reference",
              "text": "JSONDependable",
              "canonicalReference": "stentor-models!JSONDependable:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ExecutablePath",
              "canonicalReference": "stentor-models!ExecutablePath:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "CompilablePath",
              "canonicalReference": "stentor-models!CompilablePath:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "JSONDependentPath",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!KeyValue:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface KeyValue "
            }
          ],
          "releaseTag": "Public",
          "name": "KeyValue",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!KeyValue#key:member",
              "docComment": "/**\n * Key on the storage that the action will be taken on.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "key",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!KeyValue#value:member",
              "docComment": "/**\n * The value to be set or appended.\n *\n * Not always required when deleting a key.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "value?: "
                },
                {
                  "kind": "Reference",
                  "text": "ValueTypes",
                  "canonicalReference": "stentor-models!ValueTypes:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "value",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!KeyValueStore:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface KeyValueStore "
            }
          ],
          "releaseTag": "Public",
          "name": "KeyValueStore",
          "members": [
            {
              "kind": "IndexSignature",
              "canonicalReference": "stentor-models!KeyValueStore:index(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "[keys: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "]: "
                },
                {
                  "kind": "Content",
                  "text": "boolean | number | string | object | any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "keys",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!KnowledgeAnswer:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface KnowledgeAnswer "
            }
          ],
          "releaseTag": "Public",
          "name": "KnowledgeAnswer",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!KnowledgeAnswer#answer:member",
              "docComment": "/**\n * Raw answer\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "answer: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "answer",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!KnowledgeAnswer#faqQuestion:member",
              "docComment": "/**\n * Raw question\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "faqQuestion: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "faqQuestion",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!KnowledgeAnswer#matchConfidence:member",
              "docComment": "/**\n * Confidence 0-1\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "matchConfidence: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "matchConfidence",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!KnowledgeAnswer#source:member",
              "docComment": "/**\n * Which knowledge base (optional)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "source?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "source",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!KnowledgeAnswerID:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type KnowledgeAnswerID = "
            },
            {
              "kind": "Content",
              "text": "\"KnowledgeAnswer\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "KnowledgeAnswerID",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!LambdaFailureEventType:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type LambdaFailureEventType = "
            },
            {
              "kind": "Content",
              "text": "\"LambdaErrorEvent\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "LambdaFailureEventType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!LambdaFinishEvent:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface LambdaFinishEvent extends "
            },
            {
              "kind": "Reference",
              "text": "Event",
              "canonicalReference": "stentor-models!Event:interface"
            },
            {
              "kind": "Content",
              "text": "<string> "
            }
          ],
          "releaseTag": "Public",
          "name": "LambdaFinishEvent",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!LambdaFinishEvent#type:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type: "
                },
                {
                  "kind": "Reference",
                  "text": "LambdaSuccessEventType",
                  "canonicalReference": "stentor-models!LambdaSuccessEventType:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "LambdaFailureEventType",
                  "canonicalReference": "stentor-models!LambdaFailureEventType:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!LambdaSuccessEventType:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type LambdaSuccessEventType = "
            },
            {
              "kind": "Content",
              "text": "\"LambdaSuccessEvent\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "LambdaSuccessEventType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!LangCode:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type LangCode = "
            },
            {
              "kind": "Reference",
              "text": "LangCodeEnUs",
              "canonicalReference": "stentor-models!LangCodeEnUs:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "LangCode",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!LangCodeEnUs:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type LangCodeEnUs = "
            },
            {
              "kind": "Content",
              "text": "\"en-US\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "LangCodeEnUs",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!Language:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type Language = "
            },
            {
              "kind": "Content",
              "text": "\"da\" | \"de\" | \"en\" | \"es\" | \"fr\" | \"it\" | \"ja\" | \"nl\" | \"no\" | \"pt\" | \"ru\" | \"sv\" | \"th\" | \"tr\" | \"uk\" | \"zh\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "Language",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!LanguageTag:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type LanguageTag = "
            },
            {
              "kind": "Content",
              "text": "\"de-DE\" | \"en-AU\" | \"en-CA\" | \"en-GB\" | \"en-IN\" | \"en-US\" | \"es-419\" | \"es-ES\" | \"es-MX\" | \"fr-CA\" | \"fr-FR\" | \"it-IT\" | \"ja-JP\" | \"pt-BR\" | \"zh-CH\" | \"zh-HK\" | \"zh-TW\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "LanguageTag",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!LastActive:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type LastActive<T> = "
            },
            {
              "kind": "Reference",
              "text": "FirstTime",
              "canonicalReference": "stentor-models!FirstTime:type"
            },
            {
              "kind": "Content",
              "text": "<T> | "
            },
            {
              "kind": "Reference",
              "text": "HaveNotSeenWithin",
              "canonicalReference": "stentor-models!HaveNotSeenWithin:type"
            },
            {
              "kind": "Content",
              "text": "<T> | "
            },
            {
              "kind": "Reference",
              "text": "ActiveWithin",
              "canonicalReference": "stentor-models!ActiveWithin:type"
            },
            {
              "kind": "Content",
              "text": "<T>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "LastActive",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!LastActiveResponse:type",
          "docComment": "/**\n * A response that is contextual, it knows about your past interactions.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type LastActiveResponse<T = "
            },
            {
              "kind": "Content",
              "text": "string | "
            },
            {
              "kind": "Reference",
              "text": "ResponseOutput",
              "canonicalReference": "stentor-models!ResponseOutput:interface"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Reference",
              "text": "LastActive",
              "canonicalReference": "stentor-models!LastActive:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "SimpleResponse",
              "canonicalReference": "stentor-models!SimpleResponse:interface"
            },
            {
              "kind": "Content",
              "text": "<T>>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "LastActiveResponse",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 4,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!LastActiveSegment:type",
          "docComment": "/**\n * A segment that is contextual, it knows about your past interactions.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type LastActiveSegment = "
            },
            {
              "kind": "Reference",
              "text": "LastActive",
              "canonicalReference": "stentor-models!LastActive:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "SimpleSegment",
              "canonicalReference": "stentor-models!SimpleSegment:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "LastActiveSegment",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!LatestIntent:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type LatestIntent = "
            },
            {
              "kind": "Content",
              "text": "\"LatestIntent\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "LatestIntent",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!LaunchRequest:interface",
          "docComment": "/**\n * The Launch Request, when the user says \"open \\{invocation name\\}\" or \"talk to \\{invocation name\\}\"\n *\n * See {@link https://developer.amazon.com/public/solutions/alexa/alexa-skills-kit/docs/handling-requests-sent-by-alexa#launchrequest}\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface LaunchRequest extends "
            },
            {
              "kind": "Reference",
              "text": "BaseRequest",
              "canonicalReference": "stentor-models!BaseRequest:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "LaunchRequest",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!LaunchRequest#intentId:member",
              "docComment": "/**\n * LaunchRequest has a constant intentId\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "intentId: "
                },
                {
                  "kind": "Reference",
                  "text": "LaunchRequestID",
                  "canonicalReference": "stentor-models!LaunchRequestID:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "intentId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!LaunchRequest#sessionId:member",
              "docComment": "/**\n * Session ID\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sessionId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "sessionId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!LaunchRequest#type:member",
              "docComment": "/**\n * LaunchRequest has a constant type of \"LAUNCH_REQUEST\"\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type: "
                },
                {
                  "kind": "Reference",
                  "text": "LaunchRequestType",
                  "canonicalReference": "stentor-models!LaunchRequestType:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!LaunchRequestID:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type LaunchRequestID = "
            },
            {
              "kind": "Content",
              "text": "\"LaunchRequest\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "LaunchRequestID",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!LaunchRequestType:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type LaunchRequestType = "
            },
            {
              "kind": "Content",
              "text": "\"LAUNCH_REQUEST\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "LaunchRequestType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!LinkOutSuggestion:interface",
          "docComment": "/**\n * Suggestion chip that links out to an App or Website. Ownership of the URL must be validated in the Actions on Google developer console or the suggestion will not be shown.\n *\n * The title has a limit of 20 characters, note this is different from when it is a normal suggestion\n *\n * Only Google Assistant at the moment.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface LinkOutSuggestion extends "
            },
            {
              "kind": "Reference",
              "text": "Suggestion",
              "canonicalReference": "stentor-models!Suggestion:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "LinkOutSuggestion",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!LinkOutSuggestion#url:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "url: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "url",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!List:interface",
          "docComment": "/**\n * List style display items.\n *\n * Can either be vertical style list or a carousel.\n *\n * This translates to a List/Carousel on the Google Assistant and ListTemplate1/ListTemplate2 on Amazon Alexa\n *\n * See {@link https://developers.google.com/actions/assistant/responses#list} and {@link https://developer.amazon.com/docs/custom-skills/display-template-reference.html#listtemplate1}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface List "
            }
          ],
          "releaseTag": "Public",
          "name": "List",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!List#items:member",
              "docComment": "/**\n * The list items.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "items: "
                },
                {
                  "kind": "Reference",
                  "text": "ListItem",
                  "canonicalReference": "stentor-models!ListItem:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "items",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!List#title:member",
              "docComment": "/**\n * Title of the list, not required for Carousels on Google\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "title?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "title",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!List#token:member",
              "docComment": "/**\n * Token is a reference to the list, required by Alexa\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "token?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "token",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!List#type:member",
              "docComment": "/**\n * Type of list.\n *\n * LIST is vertical, translates to a List on Google and ListTemplate1 on Alexa CAROUSEL is horizontal, translates to a Carousel on Google and ListTemplate2 on Alexa\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type: "
                },
                {
                  "kind": "Content",
                  "text": "\"LIST\" | \"CAROUSEL\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!ListImage:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ListImage "
            }
          ],
          "releaseTag": "Public",
          "name": "ListImage",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!ListImage#accessibilityText:member",
              "docComment": "/**\n * Describes the image for screen readers, referred to as ContentDescription on Alexa.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "accessibilityText: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "accessibilityText",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!ListImage#height:member",
              "docComment": "/**\n * The optional height of the image\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "height?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "height",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!ListImage#url:member",
              "docComment": "/**\n * The location of the image, publicly accessible.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "url: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "url",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!ListImage#urlIcon:member",
              "docComment": "/**\n * The optional location of the smaller version of the image (icon?), publicly accessible.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "urlIcon?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "urlIcon",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!ListImage#width:member",
              "docComment": "/**\n * The optional width of the image\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "width?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "width",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!ListItem:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ListItem "
            }
          ],
          "releaseTag": "Public",
          "name": "ListItem",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!ListItem#description:member",
              "docComment": "/**\n * Description text of the list item, referred to as SecondaryText on Alexa.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "description?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "description",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!ListItem#image:member",
              "docComment": "/**\n * The image for the list item.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "image?: "
                },
                {
                  "kind": "Reference",
                  "text": "ListImage",
                  "canonicalReference": "stentor-models!ListImage:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "image",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!ListItem#synonyms:member",
              "docComment": "/**\n * Synonyms can be added so the user can speak the selection instead of touching the screen.\n *\n * Only supported on Google.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "synonyms?: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "synonyms",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!ListItem#title:member",
              "docComment": "/**\n * Title of the list item, referred to as PrimaryText on Alexa.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "title: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "title",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!ListItem#token:member",
              "docComment": "/**\n * Used as a reference for when the list item is selected.\n *\n * This is the same as a key on Google.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "token: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "token",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!ListSelectData:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ListSelectData "
            }
          ],
          "releaseTag": "Public",
          "name": "ListSelectData",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!ListSelectData#\"@type\":member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "\"@type\": "
                },
                {
                  "kind": "Content",
                  "text": "\"type.googleapis.com/google.actions.v2.OptionValueSpec\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "\"@type\"",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!ListSelectData#listSelect:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "listSelect: "
                },
                {
                  "kind": "Reference",
                  "text": "GoogleActionsV2UiElementsListSelect",
                  "canonicalReference": "actions-on-google!GoogleActionsV2UiElementsListSelect:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "listSelect",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!LiveStreamType:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type LiveStreamType = "
            },
            {
              "kind": "Reference",
              "text": "AudioLiveStreamType",
              "canonicalReference": "stentor-models!AudioLiveStreamType:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "VideoLiveStreamType",
              "canonicalReference": "stentor-models!VideoLiveStreamType:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "LiveStreamType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!Locale:type",
          "docComment": "/**\n * The different kinds of locales that can be assigned in Stentor.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type Locale = "
            },
            {
              "kind": "Reference",
              "text": "LanguageTag",
              "canonicalReference": "stentor-models!LanguageTag:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "Language",
              "canonicalReference": "stentor-models!Language:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "Locale",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!LocaleObject:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type LocaleObject = "
            },
            {
              "kind": "Content",
              "text": "object"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "LocaleObject",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!LocaleSpecificApp:type",
          "docComment": "/**\n * An app locale is a description of an app as it will appear to users in other countries.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type LocaleSpecificApp = "
            },
            {
              "kind": "Reference",
              "text": "Partial",
              "canonicalReference": "!Partial:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Pick",
              "canonicalReference": "!Pick:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "App",
              "canonicalReference": "stentor-models!App:interface"
            },
            {
              "kind": "Content",
              "text": ", \"name\" | \"summary\" | \"description\" | \"alexaCategory\" | \"invocationName\" | \"examplePhrases\" | \"keywords\" | \"icon\" | \"smallIcon\" | \"largeIcon\" | \"termsOfUseUrl\" | \"privacyPolicyUrl\">>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "LocaleSpecificApp",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!LocaleSpecificIntent:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type LocaleSpecificIntent = "
            },
            {
              "kind": "Reference",
              "text": "Partial",
              "canonicalReference": "!Partial:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Pick",
              "canonicalReference": "!Pick:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Intent",
              "canonicalReference": "stentor-models!Intent:interface"
            },
            {
              "kind": "Content",
              "text": ", \"slots\" | \"utterancePatterns\" | \"substitutions\">>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "LocaleSpecificIntent",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!LocaleSpecificResponseOutput:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type LocaleSpecificResponseOutput = "
            },
            {
              "kind": "Reference",
              "text": "Partial",
              "canonicalReference": "!Partial:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Pick",
              "canonicalReference": "!Pick:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ResponseOutput",
              "canonicalReference": "stentor-models!ResponseOutput:interface"
            },
            {
              "kind": "Content",
              "text": ", \"displayText\" | \"ssml\" | \"textToSpeech\" | \"suggestions\">>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "LocaleSpecificResponseOutput",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!Localizable:interface",
          "docComment": "/**\n * An object that has a default locale and separate localalized versions.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface Localizable<O extends "
            },
            {
              "kind": "Reference",
              "text": "LocaleObject",
              "canonicalReference": "stentor-models!LocaleObject:type"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "O",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "Localizable",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Localizable#defaultLocale:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "defaultLocale?: "
                },
                {
                  "kind": "Reference",
                  "text": "Locale",
                  "canonicalReference": "stentor-models!Locale:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "defaultLocale",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Localizable#locales:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "locales?: "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Locale",
                  "canonicalReference": "stentor-models!Locale:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<O>>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "locales",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!Location:interface",
          "docComment": "/**\n * Description of a physical location\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface Location "
            }
          ],
          "releaseTag": "Public",
          "name": "Location",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Location#geocode:member",
              "docComment": "/**\n * Geocoded form of the location\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "geocode?: "
                },
                {
                  "kind": "Reference",
                  "text": "LocationGeocode",
                  "canonicalReference": "stentor-models!LocationGeocode:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "geocode",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Location#streetAddress:member",
              "docComment": "/**\n * The free-form street address, in the format used by the national postal service of the concerned country. This field can then be used for geocoding with a third-party API, like the Google Maps Geocoding API, to determine latitude and longitude.\n *\n * For example: Washington, DC or 123 Main St, City, State\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "streetAddress?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "streetAddress",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!LocationGeocode:interface",
          "docComment": "/**\n * The exact coordinates\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface LocationGeocode "
            }
          ],
          "releaseTag": "Public",
          "name": "LocationGeocode",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!LocationGeocode#latitude:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "latitude: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "latitude",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!LocationGeocode#longitude:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "longitude: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "longitude",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!Logic:interface",
          "docComment": "/**\n * Logic meant to be run in the LogicEvaluator.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface Logic "
            }
          ],
          "releaseTag": "Public",
          "name": "Logic",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Logic#compiled:member",
              "docComment": "/**\n * The compiled JavaScript\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "compiled: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "compiled",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Logic#version:member",
              "docComment": "/**\n * Version of the LogicEvaluator the compiled code will be executed within.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "version?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "version",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!LoopOffIntent:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type LoopOffIntent = "
            },
            {
              "kind": "Content",
              "text": "\"LoopOffIntent\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "LoopOffIntent",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!LoopOnIntent:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type LoopOnIntent = "
            },
            {
              "kind": "Content",
              "text": "\"LoopOnIntent\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "LoopOnIntent",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!LuisDataStream:interface",
          "docComment": "/**\n * Data for Luis NLU\n *\n * @deprecated\n *\n * Use NLU on the App model\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface LuisDataStream extends "
            },
            {
              "kind": "Reference",
              "text": "BaseDataStream",
              "canonicalReference": "stentor-models!BaseDataStream:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "LuisDataStream",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!LuisDataStream#minimumScore:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "minimumScore?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "minimumScore",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!LuisDataStream#type:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type: "
                },
                {
                  "kind": "Reference",
                  "text": "LuisType",
                  "canonicalReference": "stentor-models!LuisType:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!LuisDataStream#url:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "url: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "url",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!LuisType:type",
          "docComment": "/**\n * NLU services\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type LuisType = "
            },
            {
              "kind": "Content",
              "text": "\"luis\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "LuisType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!Match:interface",
          "docComment": "/**\n * Match is an interface that describes how to compare two different values.\n *\n * For example:\n *\n * value of name is 1 operation is >= value 4\n *\n * 1 >= 4 is false\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface Match "
            }
          ],
          "releaseTag": "Public",
          "name": "Match",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Match#name:member",
              "docComment": "/**\n * The name of the key on the object that the value is going to be compared against.\n *\n * TODO: Could we call this key instead?\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Match#operation:member",
              "docComment": "/**\n * The comparison operator.\n *\n * If not provided, it defaults to \"===\"\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "operation?: "
                },
                {
                  "kind": "Reference",
                  "text": "MatchOperation",
                  "canonicalReference": "stentor-models!MatchOperation:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "operation",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Match#value:member",
              "docComment": "/**\n * The test value that is compared.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "value: "
                },
                {
                  "kind": "Content",
                  "text": "boolean | string | number | (boolean | string | number)[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "value",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!MatchOperation:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type MatchOperation = "
            },
            {
              "kind": "Content",
              "text": "\"==\" | \"===\" | \">\" | \">=\" | \"<\" | \"=<\" | \"!=\" | \"!==\" | \"includes\" | \"!includes\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "MatchOperation",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!Media:interface",
          "docComment": "/**\n * Any type of media that exists at a URL.\n *\n * Can be image, audio, or video.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface Media "
            }
          ],
          "releaseTag": "Public",
          "name": "Media",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Media#type:member",
              "docComment": "/**\n * The type of media.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type: "
                },
                {
                  "kind": "Reference",
                  "text": "MediaType",
                  "canonicalReference": "stentor-models!MediaType:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Media#url:member",
              "docComment": "/**\n * The location of the resource.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "url: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "url",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!MediaPlaylistType:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type MediaPlaylistType = "
            },
            {
              "kind": "Reference",
              "text": "GenericMediaPlaylistType",
              "canonicalReference": "stentor-models!GenericMediaPlaylistType:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "RSSFeedType",
              "canonicalReference": "stentor-models!RSSFeedType:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "MediaPlaylistType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!MediaSourceType:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type MediaSourceType = "
            },
            {
              "kind": "Reference",
              "text": "OnDemandType",
              "canonicalReference": "stentor-models!OnDemandType:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "PlaylistType",
              "canonicalReference": "stentor-models!PlaylistType:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "AudioLiveStreamType",
              "canonicalReference": "stentor-models!AudioLiveStreamType:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "VideoLiveStreamType",
              "canonicalReference": "stentor-models!VideoLiveStreamType:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "MediaSourceType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!MediaType:type",
          "docComment": "/**\n * MediaType is the combination of Audio, Video, and Images\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type MediaType = "
            },
            {
              "kind": "Reference",
              "text": "AudioType",
              "canonicalReference": "stentor-models!AudioType:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "VideoType",
              "canonicalReference": "stentor-models!VideoType:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "ImageType",
              "canonicalReference": "stentor-models!ImageType:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "UnspecifiedMediaType",
              "canonicalReference": "stentor-models!UnspecifiedMediaType:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "MediaType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!MessageEvent:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface MessageEvent extends "
            },
            {
              "kind": "Reference",
              "text": "Event",
              "canonicalReference": "stentor-models!Event:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "MessagePayload",
              "canonicalReference": "stentor-models!MessagePayload:interface"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "name": "MessageEvent",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!MessageEvent#type:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type: "
                },
                {
                  "kind": "Reference",
                  "text": "MessageEventType",
                  "canonicalReference": "stentor-models!MessageEventType:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 5
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!MessageEventType:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type MessageEventType = "
            },
            {
              "kind": "Content",
              "text": "\"MessageEvent\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "MessageEventType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!MessagePayload:interface",
          "docComment": "/**\n * A simple payload meant for message events.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface MessagePayload "
            }
          ],
          "releaseTag": "Public",
          "name": "MessagePayload",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!MessagePayload#message:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "message: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "message",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!MultimediaType:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type MultimediaType = "
            },
            {
              "kind": "Content",
              "text": "\"Multimedia\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "MultimediaType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!NativeTemplateDirective:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface NativeTemplateDirective "
            }
          ],
          "releaseTag": "Public",
          "name": "NativeTemplateDirective",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!NativeTemplateDirective#template:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "template: "
                },
                {
                  "kind": "Reference",
                  "text": "Template",
                  "canonicalReference": "ask-sdk-model!interfaces.display.Template:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "template",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!NativeTemplateDirective#type:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type: "
                },
                {
                  "kind": "Content",
                  "text": "\"NativeTemplate\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!NextIntent:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type NextIntent = "
            },
            {
              "kind": "Content",
              "text": "\"NextIntent\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "NextIntent",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!NLUData:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface NLUData "
            }
          ],
          "releaseTag": "Public",
          "name": "NLUData",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!NLUData#id:member",
              "docComment": "/**\n * The reference ID for the NLU\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "id?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!NLUData#type:member",
              "docComment": "/**\n * The type of NLU\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!NLUQueryResponse:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface NLUQueryResponse "
            }
          ],
          "releaseTag": "Public",
          "name": "NLUQueryResponse",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!NLUQueryResponse#intentId:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "intentId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "intentId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!NLUQueryResponse#slots:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "slots?: "
                },
                {
                  "kind": "Reference",
                  "text": "RequestSlotMap",
                  "canonicalReference": "stentor-models!RequestSlotMap:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "slots",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!NLUQueryResponse#type:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type: "
                },
                {
                  "kind": "Reference",
                  "text": "IntentRequestType",
                  "canonicalReference": "stentor-models!IntentRequestType:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "InputUnknownRequestType",
                  "canonicalReference": "stentor-models!InputUnknownRequestType:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!NLUService:interface",
          "docComment": "/**\n * Service which can turn raw text into an intent and slots (optional).\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface NLUService "
            }
          ],
          "releaseTag": "Public",
          "name": "NLUService",
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "stentor-models!NLUService#query:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "query(q: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "NLUQueryResponse",
                  "canonicalReference": "stentor-models!NLUQueryResponse:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "q",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "query"
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!NoIntent:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type NoIntent = "
            },
            {
              "kind": "Content",
              "text": "\"NoIntent\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "NoIntent",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!NotificationPermissionRequestType:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type NotificationPermissionRequestType = "
            },
            {
              "kind": "Content",
              "text": "\"NOTIFICATION_PERMISSION_REQUEST_TYPE\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "NotificationPermissionRequestType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!OnDemand:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface OnDemand "
            }
          ],
          "releaseTag": "Public",
          "name": "OnDemand",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!OnDemand#apiKey:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "apiKey: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "apiKey",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!OnDemand#type:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type: "
                },
                {
                  "kind": "Reference",
                  "text": "OnDemandType",
                  "canonicalReference": "stentor-models!OnDemandType:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!OnDemandAudio:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type OnDemandAudio = "
            },
            {
              "kind": "Reference",
              "text": "ReportableSong",
              "canonicalReference": "stentor-models!ReportableSong:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "Song",
              "canonicalReference": "stentor-models!Song:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "ReportableAudio",
              "canonicalReference": "stentor-models!ReportableAudio:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "Audio",
              "canonicalReference": "stentor-models!Audio:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "OnDemandAudio",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!OnDemandChannel:interface",
          "docComment": "/**\n * A group of playable media.\n *\n * NOTE: This is a work in progress interface. It would make sense to have this either have a playlist or extend playlist.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface OnDemandChannel "
            }
          ],
          "releaseTag": "Public",
          "name": "OnDemandChannel",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!OnDemandChannel#name:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!OnDemandChannel#token:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "token: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "token",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!OnDemandTemplateType:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type OnDemandTemplateType = "
            },
            {
              "kind": "Content",
              "text": "\"PODCAST_TEMPLATE\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "OnDemandTemplateType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!OnDemandType:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type OnDemandType = "
            },
            {
              "kind": "Reference",
              "text": "SocialRadioType",
              "canonicalReference": "stentor-models!SocialRadioType:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "OnDemandType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!OptionSelectID:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type OptionSelectID = "
            },
            {
              "kind": "Content",
              "text": "\"OptionSelect\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "OptionSelectID",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!OptionSelectRequest:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface OptionSelectRequest extends "
            },
            {
              "kind": "Reference",
              "text": "BaseRequest",
              "canonicalReference": "stentor-models!BaseRequest:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "OptionSelectRequest",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!OptionSelectRequest#index:member",
              "docComment": "/**\n * For the selection of an item in a list, this is the index of the item.\n *\n * This is not always available.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "index?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "index",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!OptionSelectRequest#intentId:member",
              "docComment": "/**\n * OptionSelect has a constant ID.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "intentId: "
                },
                {
                  "kind": "Reference",
                  "text": "OptionSelectID",
                  "canonicalReference": "stentor-models!OptionSelectID:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "intentId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!OptionSelectRequest#sessionId:member",
              "docComment": "/**\n * The current session ID\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sessionId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "sessionId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!OptionSelectRequest#title:member",
              "docComment": "/**\n * The textual representation of the selected option.\n *\n * This is not always available.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "title?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "title",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!OptionSelectRequest#token:member",
              "docComment": "/**\n * The select option's unique id\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "token: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "token",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!OptionSelectRequest#type:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type: "
                },
                {
                  "kind": "Reference",
                  "text": "OptionSelectRequestType",
                  "canonicalReference": "stentor-models!OptionSelectRequestType:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!OptionSelectRequestType:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type OptionSelectRequestType = "
            },
            {
              "kind": "Content",
              "text": "\"OPTION_SELECT_REQUEST\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "OptionSelectRequestType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!OptStatus:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type OptStatus = "
            },
            {
              "kind": "Content",
              "text": "\"OPTIN\" | \"OPTOUT\" | \"PENDING\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "OptStatus",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!Organization:interface",
          "docComment": "/**\n * An organization is the name of organization contains a collection of groups.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface Organization "
            }
          ],
          "releaseTag": "Public",
          "name": "Organization",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Organization#auth0GroupId:member",
              "docComment": "/**\n * The group ID as it is in auth0. This can be used to retrieve the permissions, roles, and nested groups that the group may contain.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "auth0GroupId?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "auth0GroupId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Organization#contact:member",
              "docComment": "/**\n * Contact email for the organization.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "contact?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "contact",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Organization#contactName:member",
              "docComment": "/**\n * Contact name for the organization.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "contactName?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "contactName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Organization#contactPhone:member",
              "docComment": "/**\n * ContactPhone for the organization\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "contactPhone?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "contactPhone",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Organization#contractDate:member",
              "docComment": "/**\n * Contract date\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "contractDate?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "contractDate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Organization#description:member",
              "docComment": "/**\n * The public facing description of the group.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "description: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "description",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Organization#ipRights:member",
              "docComment": "/**\n * IP Rights documents that are attached to this organization.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ipRights?: "
                },
                {
                  "kind": "Reference",
                  "text": "IPRights",
                  "canonicalReference": "stentor-models!IPRights:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "ipRights",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Organization#logoUrl:member",
              "docComment": "/**\n * The remote location for the organization's image.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "logoUrl?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "logoUrl",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Organization#name:member",
              "docComment": "/**\n * The public facing name of this organization.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Organization#notes:member",
              "docComment": "/**\n * Internally maintained notes for the organization\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "notes?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "notes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Organization#organizationId:member",
              "docComment": "/**\n * The unique identifier of the organization.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "organizationId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "organizationId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Organization#paymentAccounts:member",
              "docComment": "/**\n * Accounts that are linked to the organization that involve financial transactions.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "paymentAccounts?: "
                },
                {
                  "kind": "Reference",
                  "text": "PaymentAccounts",
                  "canonicalReference": "stentor-models!PaymentAccounts:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "paymentAccounts",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Organization#publishingAccounts:member",
              "docComment": "/**\n * The vendorId that is used for publishing. For example, the accounts under \"Smapi\" will have a vendorId or other metadata needed for publishing.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "publishingAccounts?: "
                },
                {
                  "kind": "Reference",
                  "text": "Accounts",
                  "canonicalReference": "stentor-models!Accounts:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "publishingAccounts",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Organization#website:member",
              "docComment": "/**\n * The main website that the organization owns.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "website?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "website",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Organization#XAPPLead:member",
              "docComment": "/**\n * Internal SME/POC\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "XAPPLead?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "XAPPLead",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!OVAIContext:interface",
          "docComment": "/**\n * Context specific to One Voice AI.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface OVAIContext "
            }
          ],
          "releaseTag": "Public",
          "name": "OVAIContext",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!OVAIContext#appId:member",
              "docComment": "/**\n * The OVAI unique appId\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "appId?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "appId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!OVAIContext#platform:member",
              "docComment": "/**\n * Platform / Channel name\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "platform?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "platform",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!Path:type",
          "docComment": "/**\n * A path determines where to redirect or forward an incoming request. They can either be predetermined (ExecutablePath) or determined at runtime (CompilablePath). Additionally, they can have rules associated with them to only apply them at certain situations.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type Path = "
            },
            {
              "kind": "Reference",
              "text": "ExecutablePath",
              "canonicalReference": "stentor-models!ExecutablePath:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "CompilablePath",
              "canonicalReference": "stentor-models!CompilablePath:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "RequestDependentPath",
              "canonicalReference": "stentor-models!RequestDependentPath:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "SlotDependentPath",
              "canonicalReference": "stentor-models!SlotDependentPath:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "StorageDependentPath",
              "canonicalReference": "stentor-models!StorageDependentPath:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "JSONDependentPath",
              "canonicalReference": "stentor-models!JSONDependentPath:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "SystemDependentPath",
              "canonicalReference": "stentor-models!SystemDependentPath:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "Path",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 14
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!PathType:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type PathType = "
            },
            {
              "kind": "Content",
              "text": "\"START\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "PathType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!PauseIntent:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type PauseIntent = "
            },
            {
              "kind": "Content",
              "text": "\"PauseIntent\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "PauseIntent",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!PaymentAccounts:interface",
          "docComment": "/**\n * A collection of accounts associated with the payment on the stentor platform.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface PaymentAccounts "
            }
          ],
          "releaseTag": "Public",
          "name": "PaymentAccounts",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!PaymentAccounts#so:member",
              "docComment": "/**\n * The Service order account that is linked to this organization.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "so?: "
                },
                {
                  "kind": "Reference",
                  "text": "ServiceOrders",
                  "canonicalReference": "stentor-models!ServiceOrders:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "so",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!PaymentAccounts#stripe:member",
              "docComment": "/**\n * The stripe account that is linked to this organization.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "stripe?: "
                },
                {
                  "kind": "Reference",
                  "text": "StripeAccount",
                  "canonicalReference": "stentor-models!StripeAccount:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "stripe",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!PermissionGrantID:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type PermissionGrantID = "
            },
            {
              "kind": "Content",
              "text": "\"PermissionGrant\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "PermissionGrantID",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!PermissionRequest:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface PermissionRequest extends "
            },
            {
              "kind": "Reference",
              "text": "BaseRequest",
              "canonicalReference": "stentor-models!BaseRequest:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "PermissionRequest",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!PermissionRequest#granted:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "granted: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "granted",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!PermissionRequest#intentId:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "intentId: "
                },
                {
                  "kind": "Reference",
                  "text": "PermissionGrantID",
                  "canonicalReference": "stentor-models!PermissionGrantID:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "intentId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!PermissionRequest#sessionId:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sessionId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "sessionId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!PermissionRequest#type:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type: "
                },
                {
                  "kind": "Reference",
                  "text": "PermissionRequestType",
                  "canonicalReference": "stentor-models!PermissionRequestType:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!PermissionRequest#userProfile:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "userProfile: "
                },
                {
                  "kind": "Reference",
                  "text": "UserProfile",
                  "canonicalReference": "stentor-models!UserProfile:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "userProfile",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!PermissionRequestType:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type PermissionRequestType = "
            },
            {
              "kind": "Content",
              "text": "\"PERMISSION_GRANT\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "PermissionRequestType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!Pii:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface Pii "
            }
          ],
          "releaseTag": "Public",
          "name": "Pii",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Pii#appId:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "appId?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "appId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Pii#coarseLocation:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "coarseLocation?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "coarseLocation",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Pii#customData:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "customData?: "
                },
                {
                  "kind": "Content",
                  "text": "any[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "customData",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Pii#customDataStatus:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "customDataStatus?: "
                },
                {
                  "kind": "Reference",
                  "text": "OptStatus",
                  "canonicalReference": "stentor-models!OptStatus:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "customDataStatus",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Pii#emailAddress:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "emailAddress?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "emailAddress",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Pii#emailAddressStatus:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "emailAddressStatus?: "
                },
                {
                  "kind": "Reference",
                  "text": "OptStatus",
                  "canonicalReference": "stentor-models!OptStatus:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "emailAddressStatus",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Pii#name:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "name?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Pii#pendingEmailJobs:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "pendingEmailJobs?: "
                },
                {
                  "kind": "Reference",
                  "text": "EmailDescription",
                  "canonicalReference": "stentor-models!EmailDescription:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "pendingEmailJobs",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Pii#pendingSmsJobs:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "pendingSmsJobs?: "
                },
                {
                  "kind": "Reference",
                  "text": "SmsDescription",
                  "canonicalReference": "stentor-models!SmsDescription:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "pendingSmsJobs",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Pii#phoneNumber:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "phoneNumber?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "phoneNumber",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Pii#phoneNumberStatus:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "phoneNumberStatus?: "
                },
                {
                  "kind": "Reference",
                  "text": "OptStatus",
                  "canonicalReference": "stentor-models!OptStatus:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "phoneNumberStatus",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Pii#preciseLocation:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "preciseLocation?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "preciseLocation",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Pii#token:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "token?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "token",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!PIIService:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface PIIService "
            }
          ],
          "releaseTag": "Public",
          "name": "PIIService",
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "stentor-models!PIIService#getPiiForField:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getPiiForField(field: "
                },
                {
                  "kind": "Reference",
                  "text": "CommFieldType",
                  "canonicalReference": "stentor-models!CommFieldType:type"
                },
                {
                  "kind": "Content",
                  "text": ", value: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Pii",
                  "canonicalReference": "stentor-models!Pii:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "field",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "getPiiForField"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "stentor-models!PIIService#loadPii:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "loadPii(token: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Pii",
                  "canonicalReference": "stentor-models!Pii:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "token",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "loadPii"
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!PIIService#pii:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "pii: "
                },
                {
                  "kind": "Reference",
                  "text": "Pii",
                  "canonicalReference": "stentor-models!Pii:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "pii",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "stentor-models!PIIService#redeem:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "redeem(userDataType: "
                },
                {
                  "kind": "Reference",
                  "text": "UserDataType",
                  "canonicalReference": "stentor-models!UserDataType:type"
                },
                {
                  "kind": "Content",
                  "text": ", accessToken: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "UserDataValue",
                  "canonicalReference": "stentor-models!UserDataValue:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "userDataType",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "accessToken",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "redeem"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "stentor-models!PIIService#removePii:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "removePii(token?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "token",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "removePii"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "stentor-models!PIIService#savePii:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "savePii(pii: "
                },
                {
                  "kind": "Reference",
                  "text": "Pii",
                  "canonicalReference": "stentor-models!Pii:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "pii",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "savePii"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "stentor-models!PIIService#updatePii:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "updatePii(pii: "
                },
                {
                  "kind": "Reference",
                  "text": "Pii",
                  "canonicalReference": "stentor-models!Pii:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "pii",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "updatePii"
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!Playable:interface",
          "docComment": "/**\n * An object that can be played.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface Playable "
            }
          ],
          "releaseTag": "Public",
          "name": "Playable",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Playable#id:member",
              "docComment": "/**\n * An ID for the playable object.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "id?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Playable#length:member",
              "docComment": "/**\n * The length of the playable object in milliseconds.\n *\n * A length of -1 denotes the playable has no end.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "length?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "length",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Playable#token:member",
              "docComment": "/**\n * A token for the playable object that represents a unique playback of the track.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "token?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "token",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Playable#url:member",
              "docComment": "/**\n * The URL for the playable object.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "url: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "url",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Playable#visuals:member",
              "docComment": "/**\n * Things to show on screens if the device is capable of showing.\n *\n * This is used primarily on Google for media cards.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "visuals?: "
                },
                {
                  "kind": "Reference",
                  "text": "Visuals",
                  "canonicalReference": "stentor-models!Visuals:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "visuals",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!PlayableHistoryData:interface",
          "docComment": "/**\n * Historical data for a user's previous listening.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface PlayableHistoryData "
            }
          ],
          "releaseTag": "Public",
          "name": "PlayableHistoryData",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!PlayableHistoryData#currentTime:member",
              "docComment": "/**\n * The time into playback, in milliseconds, the users is for the current playable.\n *\n * It is undefined if the playable hasn't started and -1 if it finished playback.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "currentTime: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "currentTime",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!PlayableHistoryData#lastPlayed:member",
              "docComment": "/**\n * The UNIX timestamp for the last time the item was played.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "lastPlayed: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "lastPlayed",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!PlayableMedia:type",
          "docComment": "/**\n * Media that can be played.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type PlayableMedia = "
            },
            {
              "kind": "Reference",
              "text": "Playable",
              "canonicalReference": "stentor-models!Playable:interface"
            },
            {
              "kind": "Content",
              "text": " & "
            },
            {
              "kind": "Reference",
              "text": "Media",
              "canonicalReference": "stentor-models!Media:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "PlayableMedia",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!PlaybackControlEvent:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type PlaybackControlEvent = "
            },
            {
              "kind": "Reference",
              "text": "PlaybackControlNextEvent",
              "canonicalReference": "stentor-models!PlaybackControlNextEvent:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "PlaybackControlPauseEvent",
              "canonicalReference": "stentor-models!PlaybackControlPauseEvent:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "PlaybackControlPreviousEvent",
              "canonicalReference": "stentor-models!PlaybackControlPreviousEvent:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "PlaybackControlPlayEvent",
              "canonicalReference": "stentor-models!PlaybackControlPlayEvent:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "PlaybackControlEvent",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!PlaybackControlNextEvent:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type PlaybackControlNextEvent = "
            },
            {
              "kind": "Content",
              "text": "\"PlaybackControlNextEvent\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "PlaybackControlNextEvent",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!PlaybackControlPauseEvent:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type PlaybackControlPauseEvent = "
            },
            {
              "kind": "Content",
              "text": "\"PlaybackControlPauseEvent\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "PlaybackControlPauseEvent",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!PlaybackControlPlayEvent:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type PlaybackControlPlayEvent = "
            },
            {
              "kind": "Content",
              "text": "\"PlaybackControlPlayEvent\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "PlaybackControlPlayEvent",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!PlaybackControlPreviousEvent:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type PlaybackControlPreviousEvent = "
            },
            {
              "kind": "Content",
              "text": "\"PlaybackControlPreviousEvent\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "PlaybackControlPreviousEvent",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!PlaybackControlRequest:interface",
          "docComment": "/**\n * Playback control requests come from either remote control buttons or on screen buttons. These are events like next, previous, resume & pause.\n *\n * See {@link https://developer.amazon.com/public/solutions/alexa/alexa-skills-kit/docs/custom-playbackcontroller-interface-reference#requests}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface PlaybackControlRequest extends "
            },
            {
              "kind": "Reference",
              "text": "BaseRequest",
              "canonicalReference": "stentor-models!BaseRequest:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "PlaybackControlRequest",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!PlaybackControlRequest#event:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "event: "
                },
                {
                  "kind": "Reference",
                  "text": "PlaybackControlEvent",
                  "canonicalReference": "stentor-models!PlaybackControlEvent:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "event",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!PlaybackControlRequest#type:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type: "
                },
                {
                  "kind": "Reference",
                  "text": "PlaybackControlRequestType",
                  "canonicalReference": "stentor-models!PlaybackControlRequestType:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!PlaybackControlRequestEvent:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface PlaybackControlRequestEvent extends "
            },
            {
              "kind": "Reference",
              "text": "RequestEvent",
              "canonicalReference": "stentor-models!RequestEvent:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "PlaybackControlRequestPayload",
              "canonicalReference": "stentor-models!PlaybackControlRequestPayload:interface"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "name": "PlaybackControlRequestEvent",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!PlaybackControlRequestEvent#name:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "name: "
                },
                {
                  "kind": "Reference",
                  "text": "PlaybackControlRequestType",
                  "canonicalReference": "stentor-models!PlaybackControlRequestType:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 5
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!PlaybackControlRequestPayload:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface PlaybackControlRequestPayload "
            }
          ],
          "releaseTag": "Public",
          "name": "PlaybackControlRequestPayload",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!PlaybackControlRequestPayload#event:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "event: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "event",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!PlaybackControlRequestType:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type PlaybackControlRequestType = "
            },
            {
              "kind": "Content",
              "text": "\"PLAYBACK_CONTROL_REQUEST\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "PlaybackControlRequestType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!PlayIntent:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type PlayIntent = "
            },
            {
              "kind": "Content",
              "text": "\"PlayIntent\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "PlayIntent",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!PlaylistType:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type PlaylistType = "
            },
            {
              "kind": "Reference",
              "text": "RSSFeedType",
              "canonicalReference": "stentor-models!RSSFeedType:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "MediaPlaylistType",
              "canonicalReference": "stentor-models!MediaPlaylistType:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "PlaylistType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!PlayPodcastTitle:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type PlayPodcastTitle = "
            },
            {
              "kind": "Content",
              "text": "\"PlayPodcastTitleIntent\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "PlayPodcastTitle",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!PlayTitleIntent:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type PlayTitleIntent = "
            },
            {
              "kind": "Content",
              "text": "\"PlayTitleIntent\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "PlayTitleIntent",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!PlayTopicIntent:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type PlayTopicIntent = "
            },
            {
              "kind": "Content",
              "text": "\"PlayTopicIntent\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "PlayTopicIntent",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!PodcastEpisode:interface",
          "docComment": "/**\n * An episode for a podcast.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface PodcastEpisode extends "
            },
            {
              "kind": "Reference",
              "text": "RSSFeedItem",
              "canonicalReference": "stentor-models!RSSFeedItem:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "Audio",
              "canonicalReference": "stentor-models!Audio:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "PodcastEpisode",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!PodcastEpisode#type:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type: "
                },
                {
                  "kind": "Reference",
                  "text": "PodcastEpisodeType",
                  "canonicalReference": "stentor-models!PodcastEpisodeType:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            },
            {
              "startIndex": 3,
              "endIndex": 5
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!PodcastEpisodeType:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type PodcastEpisodeType = "
            },
            {
              "kind": "Content",
              "text": "\"PodcastEpisode\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "PodcastEpisodeType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!PodcastType:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type PodcastType = "
            },
            {
              "kind": "Content",
              "text": "\"Podcast\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "PodcastType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!PreviousHandlerPath:interface",
          "docComment": "/**\n * The previous handler path will look at the previousHandler on the storage for a potential match and leverage it when applicable.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface PreviousHandlerPath extends "
            },
            {
              "kind": "Reference",
              "text": "SharedPath",
              "canonicalReference": "stentor-models!SharedPath:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "PreviousHandlerPath",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!PreviousHandlerPath#previousHandler:member",
              "docComment": "/**\n * Set to true to request the previous handler paths.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "previousHandler: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "previousHandler",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!PreviousIntent:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type PreviousIntent = "
            },
            {
              "kind": "Content",
              "text": "\"PreviousIntent\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "PreviousIntent",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!PrivacyAndCompliance:interface",
          "docComment": "/**\n * Privacy and compliance data required for Alexa\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface PrivacyAndCompliance "
            }
          ],
          "releaseTag": "Public",
          "name": "PrivacyAndCompliance",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!PrivacyAndCompliance#allowsPurchases:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "allowsPurchases?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "allowsPurchases",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!PrivacyAndCompliance#containsAds:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "containsAds?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "containsAds",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!PrivacyAndCompliance#isChildDirected:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isChildDirected?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "isChildDirected",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!PrivacyAndCompliance#isExportCompliant:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isExportCompliant?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "isExportCompliant",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!PrivacyAndCompliance#locales:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "locales?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        [locale: string]: {\n            privacyPolicyUrl: string;\n            termsOfUseUrl: string;\n        };\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "locales",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!PrivacyAndCompliance#usesPersonalInfo:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "usesPersonalInfo?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "usesPersonalInfo",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!RadioTemplateType:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type RadioTemplateType = "
            },
            {
              "kind": "Content",
              "text": "\"RADIO_TEMPLATE\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "RadioTemplateType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!Redirect:interface",
          "docComment": "/**\n * A map of where to redirect intent requests to before the actual handling. Usually a gate.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface Redirect "
            }
          ],
          "releaseTag": "Public",
          "name": "Redirect",
          "members": [
            {
              "kind": "IndexSignature",
              "canonicalReference": "stentor-models!Redirect:index(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "[key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "]: "
                },
                {
                  "kind": "Reference",
                  "text": "Path",
                  "canonicalReference": "stentor-models!Path:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!RelativeDateRangeType:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type RelativeDateRangeType = "
            },
            {
              "kind": "Content",
              "text": "\"LAST_MONTH\" | \"LAST_WEEK\" | \"LAST_WEEKEND\" | \"LAST_YEAR\" | \"THIS_MONTH\" | \"THIS_WEEK\" | \"THIS_WEEKEND\" | \"THIS_YEAR\" | \"NEXT_MONTH\" | \"NEXT_WEEK\" | \"NEXT_WEEKEND\" | \"NEXT_YEAR\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "RelativeDateRangeType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!RelativeDateTime:interface",
          "docComment": "/**\n * A relative date time contains data about relative dates such as \"yesterday\" or \"last year\".\n *\n * Typically, this object is then converted to a DateTime or DateTimeRange at runtime.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface RelativeDateTime "
            }
          ],
          "releaseTag": "Public",
          "name": "RelativeDateTime",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!RelativeDateTime#amount:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "amount?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "amount",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!RelativeDateTime#relativity:member",
              "docComment": "/**\n * The relative date. It can be just \"LAST_WEEKEND\" but can also be \"$\\{LAST_WEEKEND\\}\", \"$\\{LAST_SUNDAY\\}T12:00:00\", \"$\\{LAST_FRIDAY\\}T12:00:00 --\\> $\\{LAST_SATURDAY\\}T12:00:00\" or \"$\\{LAST_FRIDAY\\}T12:00:00/$\\{LAST_SATURDAY\\}T12:00:00\"\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "relativity: "
                },
                {
                  "kind": "Reference",
                  "text": "RelativeDateType",
                  "canonicalReference": "stentor-models!RelativeDateType:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "RelativeDateRangeType",
                  "canonicalReference": "stentor-models!RelativeDateRangeType:type"
                },
                {
                  "kind": "Content",
                  "text": " | string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "relativity",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!RelativeDateType:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type RelativeDateType = "
            },
            {
              "kind": "Content",
              "text": "\"LAST_FRIDAY\" | \"LAST_MONDAY\" | \"LAST_SATURDAY\" | \"LAST_SUNDAY\" | \"LAST_THURSDAY\" | \"LAST_TUESDAY\" | \"LAST_WEDNESDAY\" | \"YESTERDAY\" | \"THIS_FRIDAY\" | \"THIS_MONDAY\" | \"THIS_SATURDAY\" | \"THIS_SUNDAY\" | \"THIS_THURSDAY\" | \"THIS_TUESDAY\" | \"THIS_WEDNESDAY\" | \"TODAY\" | \"NEXT_FRIDAY\" | \"NEXT_MONDAY\" | \"NEXT_SATURDAY\" | \"NEXT_SUNDAY\" | \"NEXT_THURSDAY\" | \"NEXT_TUESDAY\" | \"NEXT_WEDNESDAY\" | \"TOMORROW\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "RelativeDateType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!RenderTemplateDirective:interface",
          "docComment": "/**\n * @interface\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "interface RenderTemplateDirective "
            }
          ],
          "releaseTag": "Public",
          "name": "RenderTemplateDirective",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!RenderTemplateDirective#template:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "'template'?: "
                },
                {
                  "kind": "Reference",
                  "text": "interfaces.display.Template",
                  "canonicalReference": "ask-sdk-model!interfaces.display.Template:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "template",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!RenderTemplateDirective#type:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "'type': "
                },
                {
                  "kind": "Content",
                  "text": "'Display.RenderTemplate'"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!RepeatIntent:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type RepeatIntent = "
            },
            {
              "kind": "Content",
              "text": "\"RepeatIntent\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "RepeatIntent",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!Reportable:interface",
          "docComment": "/**\n * A playable whose playback can be reported to a third party.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface Reportable extends "
            },
            {
              "kind": "Reference",
              "text": "Playable",
              "canonicalReference": "stentor-models!Playable:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "Reportable",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Reportable#playedId:member",
              "docComment": "/**\n * An ID representing a playback of the playable.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "playedId?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "playedId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!ReportableAudio:interface",
          "docComment": "/**\n * Audio that is reportable\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ReportableAudio extends "
            },
            {
              "kind": "Reference",
              "text": "Audio",
              "canonicalReference": "stentor-models!Audio:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "Reportable",
              "canonicalReference": "stentor-models!Reportable:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "ReportableAudio",
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            },
            {
              "startIndex": 3,
              "endIndex": 5
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!ReportableSong:interface",
          "docComment": "/**\n * Song that is reportable\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ReportableSong extends "
            },
            {
              "kind": "Reference",
              "text": "Song",
              "canonicalReference": "stentor-models!Song:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "Reportable",
              "canonicalReference": "stentor-models!Reportable:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "ReportableSong",
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            },
            {
              "startIndex": 3,
              "endIndex": 5
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!Request:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type Request = "
            },
            {
              "kind": "Reference",
              "text": "LaunchRequest",
              "canonicalReference": "stentor-models!LaunchRequest:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "SessionEndedRequest",
              "canonicalReference": "stentor-models!SessionEndedRequest:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "InputUnknownRequest",
              "canonicalReference": "stentor-models!InputUnknownRequest:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "IntentRequest",
              "canonicalReference": "stentor-models!IntentRequest:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "AudioPlayerRequest",
              "canonicalReference": "stentor-models!AudioPlayerRequest:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "PlaybackControlRequest",
              "canonicalReference": "stentor-models!PlaybackControlRequest:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "PermissionRequest",
              "canonicalReference": "stentor-models!PermissionRequest:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "SurfaceChangeRequest",
              "canonicalReference": "stentor-models!SurfaceChangeRequest:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "NotificationPermissionRequest",
              "canonicalReference": "stentor-models!NotificationPermissionRequest:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "SignInRequest",
              "canonicalReference": "stentor-models!SignInRequest:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "OptionSelectRequest",
              "canonicalReference": "stentor-models!OptionSelectRequest:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "Request",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 22
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!RequestDependable:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type RequestDependable<T> = "
            },
            {
              "kind": "Content",
              "text": "T & "
            },
            {
              "kind": "Reference",
              "text": "RequestDependent",
              "canonicalReference": "stentor-models!RequestDependent:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "RequestDependable",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!RequestDependent:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface RequestDependent "
            }
          ],
          "releaseTag": "Public",
          "name": "RequestDependent",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!RequestDependent#requestMatch:member",
              "docComment": "/**\n * The match will be compared to keys on the request.\n *\n * If evaluated true, the object is valid.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "requestMatch: "
                },
                {
                  "kind": "Reference",
                  "text": "Match",
                  "canonicalReference": "stentor-models!Match:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "requestMatch",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!RequestDependentPath:type",
          "docComment": "/**\n * Path that is dependent on a system request.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type RequestDependentPath = "
            },
            {
              "kind": "Reference",
              "text": "RequestDependable",
              "canonicalReference": "stentor-models!RequestDependable:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ExecutablePath",
              "canonicalReference": "stentor-models!ExecutablePath:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "CompilablePath",
              "canonicalReference": "stentor-models!CompilablePath:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "RequestDependentPath",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!RequestDependentResponse:type",
          "docComment": "/**\n * A response that is dependent on a value on the request.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type RequestDependentResponse<T = "
            },
            {
              "kind": "Content",
              "text": "string | "
            },
            {
              "kind": "Reference",
              "text": "ResponseOutput",
              "canonicalReference": "stentor-models!ResponseOutput:interface"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Reference",
              "text": "RequestDependable",
              "canonicalReference": "stentor-models!RequestDependable:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "SimpleResponse",
              "canonicalReference": "stentor-models!SimpleResponse:interface"
            },
            {
              "kind": "Content",
              "text": "<T>>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "RequestDependentResponse",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 4,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!RequestDependentSegment:type",
          "docComment": "/**\n * A segment that is dependent on a value on the request.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type RequestDependentSegment = "
            },
            {
              "kind": "Reference",
              "text": "RequestDependable",
              "canonicalReference": "stentor-models!RequestDependable:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "SimpleSegment",
              "canonicalReference": "stentor-models!SimpleSegment:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "RequestDependentSegment",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!RequestEvent:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface RequestEvent<P extends "
            },
            {
              "kind": "Content",
              "text": "object"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "Event",
              "canonicalReference": "stentor-models!Event:interface"
            },
            {
              "kind": "Content",
              "text": "<P> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "P",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "RequestEvent",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!RequestEvent#name:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "name: "
                },
                {
                  "kind": "Reference",
                  "text": "RequestTypes",
                  "canonicalReference": "stentor-models!RequestTypes:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!RequestEvent#type:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type: "
                },
                {
                  "kind": "Reference",
                  "text": "RequestEventType",
                  "canonicalReference": "stentor-models!RequestEventType:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 3,
              "endIndex": 5
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!RequestEventType:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type RequestEventType = "
            },
            {
              "kind": "Content",
              "text": "\"REQUEST\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "RequestEventType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!RequestHandler:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface RequestHandler "
            }
          ],
          "releaseTag": "Public",
          "name": "RequestHandler",
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "stentor-models!RequestHandler#canHandleRequest:member(1)",
              "docComment": "/**\n * If it can handle the request.\n *\n * @param request - Potential request for the handler\n *\n * @param context - Context for the request\n *\n * @returns If the handler can handle the provided request with given context\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "canHandleRequest(request: "
                },
                {
                  "kind": "Reference",
                  "text": "Request",
                  "canonicalReference": "stentor-models!Request:type"
                },
                {
                  "kind": "Content",
                  "text": ", context: "
                },
                {
                  "kind": "Reference",
                  "text": "Context",
                  "canonicalReference": "stentor-models!Context:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "request",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "context",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "canHandleRequest"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "stentor-models!RequestHandler#handleRequest:member(1)",
              "docComment": "/**\n * Handle the give request with provided context.\n *\n * @param request - Request to be handled\n *\n * @param context - Context the request is handled within\n *\n * @returns Promise that returns void when the execution is complete\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "handleRequest(request: "
                },
                {
                  "kind": "Reference",
                  "text": "Request",
                  "canonicalReference": "stentor-models!Request:type"
                },
                {
                  "kind": "Content",
                  "text": ", context: "
                },
                {
                  "kind": "Reference",
                  "text": "Context",
                  "canonicalReference": "stentor-models!Context:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "request",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "context",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "handleRequest"
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!RequestResponse:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface RequestResponse "
            }
          ],
          "releaseTag": "Public",
          "name": "RequestResponse",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!RequestResponse#request:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "request: "
                },
                {
                  "kind": "Reference",
                  "text": "Request",
                  "canonicalReference": "stentor-models!Request:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "request",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!RequestResponse#response:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "response: "
                },
                {
                  "kind": "Reference",
                  "text": "Response",
                  "canonicalReference": "stentor-models!Response:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "response",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!RequestSlot:interface",
          "docComment": "/**\n * Information for a slot coming in on the request.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface RequestSlot<T = "
            },
            {
              "kind": "Reference",
              "text": "RequestSlotValues",
              "canonicalReference": "stentor-models!RequestSlotValues:type"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "RequestSlot",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!RequestSlot#id:member",
              "docComment": "/**\n * ID of the slot, if applicable.\n *\n * For example, \"UVA\"\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "id?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!RequestSlot#name:member",
              "docComment": "/**\n * The name of the slot, also used as the key in the RequestSlotMap.\n *\n * For example, \"FIRST_TEAM\" or \"Podcast\", this is typically user defined.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!RequestSlot#original:member",
              "docComment": "/**\n * The original value provided by the NLU before normalization.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "original?: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "original",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!RequestSlot#rawValue:member",
              "docComment": "/**\n * The raw spoken value.\n *\n * For example, \"cavaliers\" or \"red\"\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "rawValue?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "rawValue",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!RequestSlot#successfulMatch:member",
              "docComment": "/**\n * If the entity resolution was successful or not.\n *\n * See {@link https://developer.amazon.com/docs/custom-skills/define-synonyms-and-ids-for-slot-type-values-entity-resolution.html#er-built-in-types}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "successfulMatch?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "successfulMatch",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!RequestSlot#value:member",
              "docComment": "/**\n * The slot normalized value.\n *\n * When leveraging synonyms, this will be the canonical value. If not then it is the same as the rawValue.\n *\n * For example, \"University of Virginia\" or \"Red Wine\".\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "value?: "
                },
                {
                  "kind": "Content",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "value",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!RequestSlotMap:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface RequestSlotMap "
            }
          ],
          "releaseTag": "Public",
          "name": "RequestSlotMap",
          "members": [
            {
              "kind": "IndexSignature",
              "canonicalReference": "stentor-models!RequestSlotMap:index(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "[slotName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "]: "
                },
                {
                  "kind": "Reference",
                  "text": "RequestSlot",
                  "canonicalReference": "stentor-models!RequestSlot:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "slotName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!RequestSlotValues:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type RequestSlotValues = "
            },
            {
              "kind": "Content",
              "text": "string | number | "
            },
            {
              "kind": "Reference",
              "text": "DateTimeRange",
              "canonicalReference": "stentor-models!DateTimeRange:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "DateTime",
              "canonicalReference": "stentor-models!DateTime:interface"
            },
            {
              "kind": "Content",
              "text": " | (string)[]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "RequestSlotValues",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!RequestTypes:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type RequestTypes = "
            },
            {
              "kind": "Reference",
              "text": "AudioPlayerRequestType",
              "canonicalReference": "stentor-models!AudioPlayerRequestType:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "InputUnknownRequestType",
              "canonicalReference": "stentor-models!InputUnknownRequestType:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "IntentRequestType",
              "canonicalReference": "stentor-models!IntentRequestType:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "LaunchRequestType",
              "canonicalReference": "stentor-models!LaunchRequestType:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "PermissionRequestType",
              "canonicalReference": "stentor-models!PermissionRequestType:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "PlaybackControlRequestType",
              "canonicalReference": "stentor-models!PlaybackControlRequestType:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "SessionEndedRequestType",
              "canonicalReference": "stentor-models!SessionEndedRequestType:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "SurfaceChangeRequestType",
              "canonicalReference": "stentor-models!SurfaceChangeRequestType:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "SignInRequestType",
              "canonicalReference": "stentor-models!SignInRequestType:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "OptionSelectRequestType",
              "canonicalReference": "stentor-models!OptionSelectRequestType:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "NotificationPermissionRequestType",
              "canonicalReference": "stentor-models!NotificationPermissionRequestType:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "RequestTypes",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 22
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!RequiredAlexaPrivacyAndCompliance:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface RequiredAlexaPrivacyAndCompliance "
            }
          ],
          "releaseTag": "Public",
          "name": "RequiredAlexaPrivacyAndCompliance",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!RequiredAlexaPrivacyAndCompliance#allowsPurchases:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "allowsPurchases: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "allowsPurchases",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!RequiredAlexaPrivacyAndCompliance#containsAds:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "containsAds: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "containsAds",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!RequiredAlexaPrivacyAndCompliance#isChildDirected:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isChildDirected: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "isChildDirected",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!RequiredAlexaPrivacyAndCompliance#isExportCompliant:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isExportCompliant: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "isExportCompliant",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!RequiredAlexaPrivacyAndCompliance#usesPersonalInfo:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "usesPersonalInfo: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "usesPersonalInfo",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!Response:type",
          "docComment": "/**\n * A response is a possible response back to a user; it includes a prompt, reprompt, and visual assets.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type Response<T = "
            },
            {
              "kind": "Content",
              "text": "string | "
            },
            {
              "kind": "Reference",
              "text": "ResponseOutput",
              "canonicalReference": "stentor-models!ResponseOutput:interface"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Reference",
              "text": "JSONDependableResponse",
              "canonicalReference": "stentor-models!JSONDependableResponse:type"
            },
            {
              "kind": "Content",
              "text": "<T> | "
            },
            {
              "kind": "Reference",
              "text": "LastActiveResponse",
              "canonicalReference": "stentor-models!LastActiveResponse:type"
            },
            {
              "kind": "Content",
              "text": "<T> | "
            },
            {
              "kind": "Reference",
              "text": "RequestDependentResponse",
              "canonicalReference": "stentor-models!RequestDependentResponse:type"
            },
            {
              "kind": "Content",
              "text": "<T> | "
            },
            {
              "kind": "Reference",
              "text": "SchedulableResponse",
              "canonicalReference": "stentor-models!SchedulableResponse:type"
            },
            {
              "kind": "Content",
              "text": "<T> | "
            },
            {
              "kind": "Reference",
              "text": "SimpleResponse",
              "canonicalReference": "stentor-models!SimpleResponse:interface"
            },
            {
              "kind": "Content",
              "text": "<T> | "
            },
            {
              "kind": "Reference",
              "text": "SlotDependentResponse",
              "canonicalReference": "stentor-models!SlotDependentResponse:type"
            },
            {
              "kind": "Content",
              "text": "<T> | "
            },
            {
              "kind": "Reference",
              "text": "StorageDependentResponse",
              "canonicalReference": "stentor-models!StorageDependentResponse:type"
            },
            {
              "kind": "Content",
              "text": "<T> | "
            },
            {
              "kind": "Reference",
              "text": "SystemDependentResponse",
              "canonicalReference": "stentor-models!SystemDependentResponse:type"
            },
            {
              "kind": "Content",
              "text": "<T>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "Response",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 4,
            "endIndex": 20
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!ResponseBuilderProps:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ResponseBuilderProps "
            }
          ],
          "releaseTag": "Public",
          "name": "ResponseBuilderProps",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!ResponseBuilderProps#assistantTitle:member",
              "docComment": "/**\n * Sets the title for some channels with display surfaces.\n *\n * @deprecated\n *\n * In favor of setting the title directly on the channel.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "assistantTitle?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "assistantTitle",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!ResponseBuilderProps#backgroundImage:member",
              "docComment": "/**\n * Sets the background image for some channels with display surfaces.\n *\n * @deprecated\n *\n * In favor of setting the background image on the channel.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "backgroundImage?: "
                },
                {
                  "kind": "Reference",
                  "text": "ImageSpecification",
                  "canonicalReference": "stentor-models!ImageSpecification:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "backgroundImage",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!ResponseBuilderProps#device:member",
              "docComment": "/**\n * Capabilities of the current device.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "device: "
                },
                {
                  "kind": "Reference",
                  "text": "Readonly",
                  "canonicalReference": "!Readonly:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Device",
                  "canonicalReference": "stentor-models!Device:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "device",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!ResponseData:interface",
          "docComment": "/**\n * Additional response metadata.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ResponseData "
            }
          ],
          "releaseTag": "Public",
          "name": "ResponseData",
          "members": [
            {
              "kind": "IndexSignature",
              "canonicalReference": "stentor-models!ResponseData:index(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "[key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "]: "
                },
                {
                  "kind": "Content",
                  "text": "string | number | boolean | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!ResponseData#content:member",
              "docComment": "/**\n * Provides context to the user for select system responses.\n *\n * Used for SURFACE_CHANGE, ACCOUNT_LINK,\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "content?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "content",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!ResponseData#expectedPreviousToken:member",
              "docComment": "/**\n * During media playback, expected previous token is used as a reference point. It is used by certain channels to prevent race condition requests that can occur when navigating content quickly.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "expectedPreviousToken?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "expectedPreviousToken",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!ResponseData#title:member",
              "docComment": "/**\n * Provides a title for select system responses.\n *\n * Used for SURFACE_CHANGE\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "title?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "title",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!ResponseOutput:interface",
          "docComment": "/**\n * A response object which contains all the necessary information to communicate a particular response for multiple surfaces.\n *\n * Note: We may want to change this to SimpleResponse and then have multiple levels of this object to also account for cards, lists, etc.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ResponseOutput extends "
            },
            {
              "kind": "Reference",
              "text": "Localizable",
              "canonicalReference": "stentor-models!Localizable:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "LocaleSpecificResponseOutput",
              "canonicalReference": "stentor-models!LocaleSpecificResponseOutput:type"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "name": "ResponseOutput",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!ResponseOutput#defaultLocale:member",
              "docComment": "/**\n * The locale for the response, defaults to \"en\"\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "defaultLocale?: "
                },
                {
                  "kind": "Reference",
                  "text": "Locale",
                  "canonicalReference": "stentor-models!Locale:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "defaultLocale",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!ResponseOutput#displayText:member",
              "docComment": "/**\n * Used only display/chat capable surfaces\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "displayText?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "displayText",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!ResponseOutput#locales:member",
              "docComment": "/**\n * The language code for the response output.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "locales?: "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Locale",
                  "canonicalReference": "stentor-models!Locale:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "LocaleSpecificResponseOutput",
                  "canonicalReference": "stentor-models!LocaleSpecificResponseOutput:type"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "locales",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!ResponseOutput#ssml:member",
              "docComment": "/**\n * The SSML\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ssml?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "ssml",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!ResponseOutput#suggestions:member",
              "docComment": "/**\n * Used where suggestions can be displayed to the user.\n *\n * Note: These only apply to prompts, not reprompts.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "suggestions?: "
                },
                {
                  "kind": "Reference",
                  "text": "SuggestionTypes",
                  "canonicalReference": "stentor-models!SuggestionTypes:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "suggestions",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!ResponseOutput#textToSpeech:member",
              "docComment": "/**\n * Text to speech\n *\n * @deprecated\n *\n * Do not use, instead use both ssml and displayText\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "textToSpeech?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "textToSpeech",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 5
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!ResponseSegment:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ResponseSegment = "
            },
            {
              "kind": "Reference",
              "text": "SimpleSegment",
              "canonicalReference": "stentor-models!SimpleSegment:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "ScheduledSegment",
              "canonicalReference": "stentor-models!ScheduledSegment:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "LastActiveSegment",
              "canonicalReference": "stentor-models!LastActiveSegment:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "SlotDependentSegment",
              "canonicalReference": "stentor-models!SlotDependentSegment:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "RequestDependentSegment",
              "canonicalReference": "stentor-models!RequestDependentSegment:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "StorageDependentSegment",
              "canonicalReference": "stentor-models!StorageDependentSegment:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ResponseSegment",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 12
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!ResponseSegmentsMap:interface",
          "docComment": "/**\n * Map of response segments where the key is name within the template.\n *\n * For example a string with ${ GREETING }, GREETING is the key for the array of segments.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ResponseSegmentsMap "
            }
          ],
          "releaseTag": "Public",
          "name": "ResponseSegmentsMap",
          "members": [
            {
              "kind": "IndexSignature",
              "canonicalReference": "stentor-models!ResponseSegmentsMap:index(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "[key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "]: "
                },
                {
                  "kind": "Reference",
                  "text": "ResponseSegment",
                  "canonicalReference": "stentor-models!ResponseSegment:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!ResumeIntent:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ResumeIntent = "
            },
            {
              "kind": "Content",
              "text": "\"ResumeIntent\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ResumeIntent",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!RSSFeedItem:interface",
          "docComment": "/**\n * An individual item (from <item>) found within an RSS Feed.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface RSSFeedItem "
            }
          ],
          "releaseTag": "Public",
          "name": "RSSFeedItem",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!RSSFeedItem#description:member",
              "docComment": "/**\n * Description of the feed item.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "description?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "description",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!RSSFeedItem#explicit:member",
              "docComment": "/**\n * If the feed item is marked explicit.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "explicit?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "explicit",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!RSSFeedItem#feedTitle:member",
              "docComment": "/**\n * The title of the feed the item belongs to.\n *\n * This is primarily used to remind listeners what feed the feed item came from.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "feedTitle: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "feedTitle",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!RSSFeedItem#id:member",
              "docComment": "/**\n * The GUID of the feed item.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "id?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!RSSFeedItem#image:member",
              "docComment": "/**\n * URL for the image\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "image?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "image",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!RSSFeedItem#length:member",
              "docComment": "/**\n * The length within the <enclosure> tag.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "length?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "length",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!RSSFeedItem#link:member",
              "docComment": "/**\n * The link of the feed item.\n *\n * This is typically where users can find more information about the RSS feed item and not the actual media content.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "link?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "link",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!RSSFeedItem#mediaType:member",
              "docComment": "/**\n * The media type within the <enclosure> tag.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mediaType?: "
                },
                {
                  "kind": "Content",
                  "text": "\"video/mpeg\" | \"audio/mpeg\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "mediaType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!RSSFeedItem#pubDate:member",
              "docComment": "/**\n * Date the feed item was published.\n *\n * RFC 822 encoded date string, in accordance with the RSS 2.0 specification.\n *\n * One exception is the year may be expressed with two digits instead of the preferred four digits.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "pubDate?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "pubDate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!RSSFeedItem#subtitle:member",
              "docComment": "/**\n * The subtitle of the feed item.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "subtitle?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "subtitle",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!RSSFeedItem#title:member",
              "docComment": "/**\n * The title of the feed item.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "title?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "title",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!RSSFeedItem#url:member",
              "docComment": "/**\n * The URL within the <enclosure> tag.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "url: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "url",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!RSSFeedItemPlayableMedia:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type RSSFeedItemPlayableMedia = "
            },
            {
              "kind": "Reference",
              "text": "RSSFeedItem",
              "canonicalReference": "stentor-models!RSSFeedItem:interface"
            },
            {
              "kind": "Content",
              "text": " & "
            },
            {
              "kind": "Reference",
              "text": "PlayableMedia",
              "canonicalReference": "stentor-models!PlayableMedia:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "RSSFeedItemPlayableMedia",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!RSSFeedType:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type RSSFeedType = "
            },
            {
              "kind": "Reference",
              "text": "GenericRSSFeedType",
              "canonicalReference": "stentor-models!GenericRSSFeedType:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "PodcastType",
              "canonicalReference": "stentor-models!PodcastType:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "RSSFeedType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!RuntimeCallback:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type RuntimeCallback<Result extends "
            },
            {
              "kind": "Content",
              "text": "object "
            },
            {
              "kind": "Content",
              "text": "= "
            },
            {
              "kind": "Content",
              "text": "object"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "(error?: "
            },
            {
              "kind": "Reference",
              "text": "Error",
              "canonicalReference": "!Error:interface"
            },
            {
              "kind": "Content",
              "text": " | null | string, result?: Result, request?: "
            },
            {
              "kind": "Reference",
              "text": "Request",
              "canonicalReference": "stentor-models!Request:type"
            },
            {
              "kind": "Content",
              "text": ", response?: "
            },
            {
              "kind": "Reference",
              "text": "Response",
              "canonicalReference": "stentor-models!Response:type"
            },
            {
              "kind": "Content",
              "text": ") => void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "RuntimeCallback",
          "typeParameters": [
            {
              "typeParameterName": "Result",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 5,
            "endIndex": 12
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!RuntimeContext:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface RuntimeContext "
            }
          ],
          "releaseTag": "Public",
          "name": "RuntimeContext",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!RuntimeContext#appData:member",
              "docComment": "/**\n * App data used at runtime.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "appData?: "
                },
                {
                  "kind": "Reference",
                  "text": "AppRuntimeData",
                  "canonicalReference": "stentor-models!AppRuntimeData:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "appData",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "stentor-models!RuntimeContext#buildResponse:member(1)",
              "docComment": "/**\n * Builds the response for the specific platform\n *\n * @param  - code\n *\n * @param  - result\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "buildResponse?(code: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", result: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "code",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "result",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "buildResponse"
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!RuntimeContext#environment:member",
              "docComment": "/**\n * Current environment\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "environment?: "
                },
                {
                  "kind": "Content",
                  "text": "\"dev\" | \"stage\" | \"prod\" | \"production\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "environment",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "stentor-models!RuntimeContext#getRemainingTimeInMillis:member(1)",
              "docComment": "/**\n * Optional, for functions as a service, it gets the remaining execution time.\n *\n * @returns The remaining execution time of the function\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getRemainingTimeInMillis?(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getRemainingTimeInMillis"
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!RuntimeContext#headers:member",
              "docComment": "/**\n * The headers for the request\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "headers?: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "headers",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!RuntimeContext#ovai:member",
              "docComment": "/**\n * Context specific to One Voice AI\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ovai?: "
                },
                {
                  "kind": "Reference",
                  "text": "OVAIContext",
                  "canonicalReference": "stentor-models!OVAIContext:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "ovai",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!RuntimeContext#rawBody:member",
              "docComment": "/**\n * The request body as a string.\n *\n * This is extremely important when verifying the payload comes from Alexa. It must be exactly how it comes in. It cannot be JSON.parsed then JSON.stringified as the order is important for certification.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "rawBody?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "rawBody",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!Schedulable:interface",
          "docComment": "/**\n * Used to extend existing interfaces and making them schedulable.\n *\n * TODO: Switch the names of these, Schedulable should be Scheduled.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface Schedulable "
            }
          ],
          "releaseTag": "Public",
          "name": "Schedulable",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Schedulable#schedule:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly schedule: "
                },
                {
                  "kind": "Reference",
                  "text": "Schedule",
                  "canonicalReference": "stentor-models!Schedule:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "schedule",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!SchedulableResponse:type",
          "docComment": "/**\n * A response that can be scheduled.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type SchedulableResponse<T = "
            },
            {
              "kind": "Content",
              "text": "string | "
            },
            {
              "kind": "Reference",
              "text": "ResponseOutput",
              "canonicalReference": "stentor-models!ResponseOutput:interface"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Reference",
              "text": "Scheduled",
              "canonicalReference": "stentor-models!Scheduled:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "SimpleResponse",
              "canonicalReference": "stentor-models!SimpleResponse:interface"
            },
            {
              "kind": "Content",
              "text": "<T>>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "SchedulableResponse",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 4,
            "endIndex": 8
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!Schedule:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface Schedule "
            }
          ],
          "releaseTag": "Public",
          "name": "Schedule",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Schedule#duration:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly duration: "
                },
                {
                  "kind": "Reference",
                  "text": "Duration",
                  "canonicalReference": "stentor-models!Duration:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "duration",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Schedule#start:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly start: "
                },
                {
                  "kind": "Reference",
                  "text": "ScheduleStart",
                  "canonicalReference": "stentor-models!ScheduleStart:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "start",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!Scheduled:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type Scheduled<T> = "
            },
            {
              "kind": "Content",
              "text": "T & "
            },
            {
              "kind": "Reference",
              "text": "Schedulable",
              "canonicalReference": "stentor-models!Schedulable:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "Scheduled",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!ScheduledSegment:type",
          "docComment": "/**\n * A segment that can be scheduled.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ScheduledSegment = "
            },
            {
              "kind": "Reference",
              "text": "Scheduled",
              "canonicalReference": "stentor-models!Scheduled:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "SimpleSegment",
              "canonicalReference": "stentor-models!SimpleSegment:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ScheduledSegment",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!ScheduleStart:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ScheduleStart "
            }
          ],
          "releaseTag": "Public",
          "name": "ScheduleStart",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!ScheduleStart#dayOfWeek:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly dayOfWeek?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "dayOfWeek",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!ScheduleStart#format:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly format?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "format",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!ScheduleStart#time:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly time: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "time",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!ScheduleStart#timeZone:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly timeZone?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "timeZone",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!ServiceOrderAccount:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ServiceOrderAccount "
            }
          ],
          "releaseTag": "Public",
          "name": "ServiceOrderAccount",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!ServiceOrderAccount#date:member",
              "docComment": "/**\n * The date with which the service order was created.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "date: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "date",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!ServiceOrderAccount#numberOfApps:member",
              "docComment": "/**\n * The number of apps that the service order allows.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "numberOfApps?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "numberOfApps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!ServiceOrderAccount#paymentType:member",
              "docComment": "/**\n * The style of payment that the service order is a part of.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "paymentType: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "paymentType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!ServiceOrders:type",
          "docComment": "/**\n * The type for number of apps in a `ServiceOrderAccount`.\n *\n * The legacy parameter is a ServiceOrderAccount which represents Radio/Live stream templates only.\n *\n * The New Parameter is a ServiceOrderTemplate object in which the key is the service order and the object returned is the service order supplied.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ServiceOrders = "
            },
            {
              "kind": "Reference",
              "text": "ServiceOrderAccount",
              "canonicalReference": "stentor-models!ServiceOrderAccount:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "ServiceOrderTemplate",
              "canonicalReference": "stentor-models!ServiceOrderTemplate:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ServiceOrders",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!ServiceOrderTemplate:type",
          "docComment": "/**\n * The new form of `ServiceOrderAccount#numberOfApps`. The key is the type of template which can be found at `templates/Types`.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ServiceOrderTemplate = "
            },
            {
              "kind": "Reference",
              "text": "Partial",
              "canonicalReference": "!Partial:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "TemplateType",
              "canonicalReference": "stentor-models!TemplateType:type"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "ServiceOrderAccount",
              "canonicalReference": "stentor-models!ServiceOrderAccount:interface"
            },
            {
              "kind": "Content",
              "text": ">>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ServiceOrderTemplate",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 9
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!SessionEndedRequest:interface",
          "docComment": "/**\n * Session Ended Request, used by Alexa to signal the session has ended.\n *\n * See {@link https://developer.amazon.com/public/solutions/alexa/alexa-skills-kit/docs/handling-requests-sent-by-alexa#sessionendedrequest}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface SessionEndedRequest extends "
            },
            {
              "kind": "Reference",
              "text": "BaseRequest",
              "canonicalReference": "stentor-models!BaseRequest:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "SessionEndedRequest",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!SessionEndedRequest#errorMessage:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "errorMessage?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "errorMessage",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!SessionEndedRequest#errorType:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "errorType?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "errorType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!SessionEndedRequest#reason:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "reason: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "reason",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!SessionEndedRequest#sessionId:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sessionId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "sessionId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!SessionEndedRequest#type:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type: "
                },
                {
                  "kind": "Reference",
                  "text": "SessionEndedRequestType",
                  "canonicalReference": "stentor-models!SessionEndedRequestType:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!SessionEndedRequestType:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type SessionEndedRequestType = "
            },
            {
              "kind": "Content",
              "text": "\"SESSION_ENDED_REQUEST\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "SessionEndedRequestType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!SessionStore:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface SessionStore "
            }
          ],
          "releaseTag": "Public",
          "name": "SessionStore",
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "stentor-models!SessionStore#get:member(1)",
              "docComment": "/**\n * Get a session value\n *\n * @param key - Key for value to be retrieved\n *\n * @returns Value for the supplied key\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get(key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "get"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "stentor-models!SessionStore#getStore:member(1)",
              "docComment": "/**\n * This will return the whole store\n *\n * @returns The session storage\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getStore(): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getStore"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "stentor-models!SessionStore#set:member(1)",
              "docComment": "/**\n * Set a value with a key\n *\n * @param key - Key for value to be set\n *\n * @param value - Value to be set on the store\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "set(key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", value: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "set"
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!SessionStoreData:interface",
          "docComment": "/**\n * Lets make it simple and versatile\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface SessionStoreData "
            }
          ],
          "releaseTag": "Public",
          "name": "SessionStoreData",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!SessionStoreData#data:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "data: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        [key: string]: any;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "data",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!SessionStoreData#id:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!SharedPath:interface",
          "docComment": "/**\n * Shared parameters on a path.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface SharedPath extends "
            },
            {
              "kind": "Reference",
              "text": "Partial",
              "canonicalReference": "!Partial:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Actionable",
              "canonicalReference": "stentor-models!Actionable:interface"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "name": "SharedPath",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!SharedPath#data:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "data?: "
                },
                {
                  "kind": "Content",
                  "text": "object"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "data",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!SharedPath#platform:member",
              "docComment": "/**\n * Optional platform filter for the path.\n *\n * If set, the path will only apply to the specified platform.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "platform?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "platform",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 5
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!ShuffleOffIntent:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ShuffleOffIntent = "
            },
            {
              "kind": "Content",
              "text": "\"ShuffleOffIntent\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ShuffleOffIntent",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!ShuffleOnIntent:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ShuffleOnIntent = "
            },
            {
              "kind": "Content",
              "text": "\"ShuffleOnIntent\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ShuffleOnIntent",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!SignInID:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type SignInID = "
            },
            {
              "kind": "Content",
              "text": "\"SignIn\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "SignInID",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!SignInRequest:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface SignInRequest extends "
            },
            {
              "kind": "Reference",
              "text": "BaseRequest",
              "canonicalReference": "stentor-models!BaseRequest:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "SignInRequest",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!SignInRequest#granted:member",
              "docComment": "/**\n * If the sign in request was successful.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "granted: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "granted",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!SignInRequest#intentId:member",
              "docComment": "/**\n * SignIn request has a constant ID.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "intentId: "
                },
                {
                  "kind": "Reference",
                  "text": "SignInID",
                  "canonicalReference": "stentor-models!SignInID:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "intentId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!SignInRequest#sessionId:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sessionId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "sessionId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!SignInRequest#type:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type: "
                },
                {
                  "kind": "Reference",
                  "text": "SignInRequestType",
                  "canonicalReference": "stentor-models!SignInRequestType:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!SignInRequestType:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type SignInRequestType = "
            },
            {
              "kind": "Content",
              "text": "\"SIGN_IN_REQUEST\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "SignInRequestType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!SimpleDisplay:interface",
          "docComment": "/**\n * The base Display structure\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface SimpleDisplay "
            }
          ],
          "releaseTag": "Public",
          "name": "SimpleDisplay",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!SimpleDisplay#backButtonVisible:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "backButtonVisible?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "backButtonVisible",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!SimpleDisplay#backgroundImage:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "backgroundImage?: "
                },
                {
                  "kind": "Reference",
                  "text": "Image",
                  "canonicalReference": "stentor-models!Image:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "backgroundImage",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!SimpleDisplay#image:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "image?: "
                },
                {
                  "kind": "Reference",
                  "text": "Image",
                  "canonicalReference": "stentor-models!Image:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "image",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!SimpleDisplay#listItems:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "listItems?: "
                },
                {
                  "kind": "Reference",
                  "text": "DisplayListItem",
                  "canonicalReference": "stentor-models!DisplayListItem:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "listItems",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!SimpleDisplay#textContent:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "textContent?: "
                },
                {
                  "kind": "Reference",
                  "text": "TextContent",
                  "canonicalReference": "stentor-models!TextContent:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "textContent",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!SimpleDisplay#title:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "title?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "title",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!SimpleDisplay#token:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "token: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "token",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!SimpleDisplay#type:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type: "
                },
                {
                  "kind": "Content",
                  "text": "\"ImageDisplay\" | \"ShortText\" | \"LongText\" | \"ImageRightDetail\" | \"ImageLeftDetail\" | \"ImageForwardList\" | \"TextForwardList\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!SimpleResponse:interface",
          "docComment": "/**\n * A response that expects a user's input.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface SimpleResponse<T = "
            },
            {
              "kind": "Content",
              "text": "string | "
            },
            {
              "kind": "Reference",
              "text": "ResponseOutput",
              "canonicalReference": "stentor-models!ResponseOutput:interface"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "Partial",
              "canonicalReference": "!Partial:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Actionable",
              "canonicalReference": "stentor-models!Actionable:interface"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "name": "SimpleResponse",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!SimpleResponse#data:member",
              "docComment": "/**\n * Supplemental data to augment the response.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "data?: "
                },
                {
                  "kind": "Reference",
                  "text": "ResponseData",
                  "canonicalReference": "stentor-models!ResponseData:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "data",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!SimpleResponse#displays:member",
              "docComment": "/**\n * Display elements for surfaces/devices with screens.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "displays?: "
                },
                {
                  "kind": "Reference",
                  "text": "Display",
                  "canonicalReference": "stentor-models!Display:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "displays",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!SimpleResponse#media:member",
              "docComment": "/**\n * Media for playback\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "media?: "
                },
                {
                  "kind": "Reference",
                  "text": "Media",
                  "canonicalReference": "stentor-models!Media:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "media",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!SimpleResponse#name:member",
              "docComment": "/**\n * Name of the response.\n *\n * Used to help differentiate multiple responses.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "name?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!SimpleResponse#outputSpeech:member",
              "docComment": "/**\n * What the assistant will say first as part of the response.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "outputSpeech?: "
                },
                {
                  "kind": "Content",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "outputSpeech",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!SimpleResponse#reprompt:member",
              "docComment": "/**\n * If provided, the output speech was most likely a question and requires a response from the user. The reprompt is given if the user doesn't say anything or the assistant can't recognize the response.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "reprompt?: "
                },
                {
                  "kind": "Content",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "reprompt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!SimpleResponse#segments:member",
              "docComment": "/**\n * Segments used for the outputSpeech and reprompt.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "segments?: "
                },
                {
                  "kind": "Reference",
                  "text": "ResponseSegmentsMap",
                  "canonicalReference": "stentor-models!ResponseSegmentsMap:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "segments",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!SimpleResponse#silencePrompt:member",
              "docComment": "/**\n * @deprecated\n *\n * This is not in use.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "silencePrompt?: "
                },
                {
                  "kind": "Content",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "silencePrompt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!SimpleResponse#system:member",
              "docComment": "/**\n * System responses to perform account links, control media, surface changes, and permission requests.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "system?: "
                },
                {
                  "kind": "Content",
                  "text": "\"ACCOUNT_LINK\" | \"MEDIA_ENQUEUE\" | \"MEDIA_STOP\" | \"SURFACE_CHANGE\" | \"PERMISSION_LIST\" | \"PERMISSION_EMAIL\" | \"PERMISSION_PHONE_NUMBER\" | \"PERMISSION_LOCATION_PRECISE\" | \"PERMISSION_LOCATION_COARSE\" | \"PERMISSION_NOTIFICATION\" | \"TRANSFER_CALL\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "system",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!SimpleResponse#tag:member",
              "docComment": "/**\n * Used for tracking the response in third party analytics.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tag?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "tag",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 4,
              "endIndex": 8
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!SimpleSegment:interface",
          "docComment": "/**\n * Simple segment, just the segment that will replace the template.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface SimpleSegment "
            }
          ],
          "releaseTag": "Public",
          "name": "SimpleSegment",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!SimpleSegment#segment:member",
              "docComment": "/**\n * The segment replaces the template in the templated string.\n *\n * In the string \"${GREETING}, how are you?\", the segment will replace ${GREETING}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "segment: "
                },
                {
                  "kind": "Content",
                  "text": "string | "
                },
                {
                  "kind": "Reference",
                  "text": "ResponseOutput",
                  "canonicalReference": "stentor-models!ResponseOutput:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "segment",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!SimpleSuggestion:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type SimpleSuggestion = "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "SimpleSuggestion",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!Slot:interface",
          "docComment": "/**\n * Slots available to the intent.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface Slot "
            }
          ],
          "releaseTag": "Public",
          "name": "Slot",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Slot#isList:member",
              "docComment": "/**\n * Is the slot a list of values. Supported natively by Dialogflow and shims for Alexa.\n *\n * Can be a boolean or number. When a number is used, it provides guidance to the Alexa shim on the max amount of expected items in the list. Minimum value is 2. Value defaults to 6 when set to true.\n *\n * NOTE: Only one isList slot is supported per utterance pattern.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isList?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean | number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "isList",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Slot#name:member",
              "docComment": "/**\n * The name of the slot, corresponds to how it is displayed in the sample utterance.\n *\n * For example: \"Play {Podcast}\" where Podcast is the name.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Slot#type:member",
              "docComment": "/**\n * The type of entity for the slot.\n *\n * This corresponds to an Entity, specifically the entityId key.\n *\n * For legacy applications, SlotType is used.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!SlotDependable:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type SlotDependable<T> = "
            },
            {
              "kind": "Content",
              "text": "T & "
            },
            {
              "kind": "Reference",
              "text": "SlotDependent",
              "canonicalReference": "stentor-models!SlotDependent:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "SlotDependable",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!SlotDependent:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface SlotDependent "
            }
          ],
          "releaseTag": "Public",
          "name": "SlotDependent",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!SlotDependent#slotMatch:member",
              "docComment": "/**\n * The match that will be compared to the slots\n *\n * If evaluated true, the object is valid.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "slotMatch: "
                },
                {
                  "kind": "Reference",
                  "text": "Match",
                  "canonicalReference": "stentor-models!Match:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "slotMatch",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!SlotDependentPath:type",
          "docComment": "/**\n * Path used if a slot on the incoming intent matches the compare value.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type SlotDependentPath = "
            },
            {
              "kind": "Reference",
              "text": "SlotDependable",
              "canonicalReference": "stentor-models!SlotDependable:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ExecutablePath",
              "canonicalReference": "stentor-models!ExecutablePath:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "CompilablePath",
              "canonicalReference": "stentor-models!CompilablePath:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "SlotDependentPath",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!SlotDependentResponse:type",
          "docComment": "/**\n * A response that is dependent on a slot value in the current request.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type SlotDependentResponse<T = "
            },
            {
              "kind": "Content",
              "text": "string | "
            },
            {
              "kind": "Reference",
              "text": "ResponseOutput",
              "canonicalReference": "stentor-models!ResponseOutput:interface"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Reference",
              "text": "SlotDependable",
              "canonicalReference": "stentor-models!SlotDependable:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "SimpleResponse",
              "canonicalReference": "stentor-models!SimpleResponse:interface"
            },
            {
              "kind": "Content",
              "text": "<T>>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "SlotDependentResponse",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 4,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!SlotDependentSegment:type",
          "docComment": "/**\n * A segment that is dependent on a slot value in the current request.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type SlotDependentSegment = "
            },
            {
              "kind": "Reference",
              "text": "SlotDependable",
              "canonicalReference": "stentor-models!SlotDependable:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "SimpleSegment",
              "canonicalReference": "stentor-models!SimpleSegment:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "SlotDependentSegment",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!SlotType:interface",
          "docComment": "/**\n * The values for the slot type.\n *\n * @deprecated\n *\n * Use Entity instead\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface SlotType<T = "
            },
            {
              "kind": "Content",
              "text": "string | number | object | boolean"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "SlotType",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!SlotType#dialogflowId:member",
              "docComment": "/**\n * Optional ID if the slot type has a representation in Dialogflow.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dialogflowId?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "dialogflowId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!SlotType#id:member",
              "docComment": "/**\n * Optional ID for the slot type\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "id?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!SlotType#name:member",
              "docComment": "/**\n * The name of the slot type.\n *\n * This is also the key used in the SlotTypeMap.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!SlotType#values:member",
              "docComment": "/**\n * The values for the slot type.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "values?: "
                },
                {
                  "kind": "Reference",
                  "text": "SlotTypeValue",
                  "canonicalReference": "stentor-models!SlotTypeValue:interface"
                },
                {
                  "kind": "Content",
                  "text": "<T>[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "values",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!SlotTypeMap:interface",
          "docComment": "/**\n * Map of slots by types.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface SlotTypeMap<T = "
            },
            {
              "kind": "Content",
              "text": "string | number | object | boolean"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "SlotTypeMap",
          "members": [
            {
              "kind": "IndexSignature",
              "canonicalReference": "stentor-models!SlotTypeMap:index(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "[slotTypeName: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "]: "
                },
                {
                  "kind": "Reference",
                  "text": "SlotType",
                  "canonicalReference": "stentor-models!SlotType:interface"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "slotTypeName",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!SlotTypeValue:interface",
          "docComment": "/**\n * A single utterance within the slot type and associated data for when that utterance is spoken.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface SlotTypeValue<T = "
            },
            {
              "kind": "Content",
              "text": "string | number | object | boolean"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "SlotTypeValue",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!SlotTypeValue#data:member",
              "docComment": "/**\n * The data associated with the slot value, used when the slot value is selected.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "data?: "
                },
                {
                  "kind": "Content",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "data",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!SlotTypeValue#name:member",
              "docComment": "/**\n * The name of the slot, what is spoken by the user.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!SlotTypeValue#synonyms:member",
              "docComment": "/**\n * List of potential synonyms for the slot.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "synonyms?: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "synonyms",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!SmsDescription:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface SmsDescription "
            }
          ],
          "releaseTag": "Public",
          "name": "SmsDescription",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!SmsDescription#imageUrl:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "imageUrl?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "imageUrl",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!SmsDescription#sender:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sender: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "sender",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!SmsDescription#text:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "text?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "text",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!SMSResponse:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface SMSResponse "
            }
          ],
          "releaseTag": "Public",
          "name": "SMSResponse",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!SMSResponse#success:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "success: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "success",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!SMSService:interface",
          "docComment": "/**\n * Service to facilitate sending an SMS (text message) to a number.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface SMSService "
            }
          ],
          "releaseTag": "Public",
          "name": "SMSService",
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "stentor-models!SMSService#send:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "send(from: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", to: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", text: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "SMSResponse",
                  "canonicalReference": "stentor-models!SMSResponse:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "from",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "to",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "text",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "send"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "stentor-models!SMSService#sendImage:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sendImage(from: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", to: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", imageUrl: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "SMSResponse",
                  "canonicalReference": "stentor-models!SMSResponse:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "from",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "to",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "imageUrl",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "sendImage"
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!SocialRadio:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface SocialRadio extends "
            },
            {
              "kind": "Reference",
              "text": "OnDemand",
              "canonicalReference": "stentor-models!OnDemand:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "SocialRadio",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!SocialRadio#channel:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "channel?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "channel",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!SocialRadio#type:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type: "
                },
                {
                  "kind": "Reference",
                  "text": "SocialRadioType",
                  "canonicalReference": "stentor-models!SocialRadioType:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!SocialRadioAudio:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type SocialRadioAudio = "
            },
            {
              "kind": "Reference",
              "text": "SocialRadioTrack",
              "canonicalReference": "stentor-models!SocialRadioTrack:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "SocialRadioSong",
              "canonicalReference": "stentor-models!SocialRadioSong:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "SocialRadioAudio",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!SocialRadioSong:interface",
          "docComment": "/**\n * Just a normal song\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface SocialRadioSong extends "
            },
            {
              "kind": "Reference",
              "text": "ReportableSong",
              "canonicalReference": "stentor-models!ReportableSong:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "SocialRadioSong",
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!SocialRadioTrack:interface",
          "docComment": "/**\n * Tracks in SocialRadio are typically filler audio used for station identification.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface SocialRadioTrack extends "
            },
            {
              "kind": "Reference",
              "text": "ReportableAudio",
              "canonicalReference": "stentor-models!ReportableAudio:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "SocialRadioTrack",
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!SocialRadioType:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type SocialRadioType = "
            },
            {
              "kind": "Content",
              "text": "\"SocialRadio\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "SocialRadioType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!Song:interface",
          "docComment": "/**\n * An individual song.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface Song extends "
            },
            {
              "kind": "Reference",
              "text": "Audio",
              "canonicalReference": "stentor-models!Audio:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "Song",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Song#album:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "album?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "album",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Song#artist:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "artist?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "artist",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Song#title:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "title: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "title",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Song#type:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type: "
                },
                {
                  "kind": "Reference",
                  "text": "SongType",
                  "canonicalReference": "stentor-models!SongType:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!SongType:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type SongType = "
            },
            {
              "kind": "Content",
              "text": "\"Song\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "SongType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!StartOverIntent:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type StartOverIntent = "
            },
            {
              "kind": "Content",
              "text": "\"StartOverIntent\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "StartOverIntent",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!StopIntent:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type StopIntent = "
            },
            {
              "kind": "Content",
              "text": "\"StopIntent\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "StopIntent",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!Storage:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface Storage extends "
            },
            {
              "kind": "Reference",
              "text": "KeyValueStore",
              "canonicalReference": "stentor-models!KeyValueStore:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "Storage",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Storage#createdTimestamp:member",
              "docComment": "/**\n * When the storage was created. This can be used to keep track of when we first met the user.\n *\n * Time is stored as number of milliseconds elapsed since the UNIX epoch.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "createdTimestamp: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "createdTimestamp",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Storage#currentAudioHandler:member",
              "docComment": "/**\n * The current handler that is playing audio.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "currentAudioHandler?: "
                },
                {
                  "kind": "Reference",
                  "text": "Handler",
                  "canonicalReference": "stentor-models!Handler:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "currentAudioHandler",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Storage#currentHandler:member",
              "docComment": "/**\n * The current handler of intents & events.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "currentHandler?: "
                },
                {
                  "kind": "Reference",
                  "text": "Handler",
                  "canonicalReference": "stentor-models!Handler:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "currentHandler",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Storage#history:member",
              "docComment": "/**\n * Limited history for the user, used to store media they are in the middle of listening to.\n *\n * Can be used to store other historical data in the future, such as previous responses they have heard.\n *\n * NOTE: We might want to make history required on storage.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "history?: "
                },
                {
                  "kind": "Reference",
                  "text": "History",
                  "canonicalReference": "stentor-models!History:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "history",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Storage#lastActiveTimestamp:member",
              "docComment": "/**\n * When the last time we updated the storage was. This can be used to keep track of when we last saw the user.\n *\n * Time is stored as number of milliseconds elapsed since the UNIX epoch.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "lastActiveTimestamp?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "lastActiveTimestamp",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Storage#piiToken:member",
              "docComment": "/**\n * The PII information key (pii token)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "piiToken?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "piiToken",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Storage#previousHandler:member",
              "docComment": "/**\n * The previous handler before the current\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "previousHandler?: "
                },
                {
                  "kind": "Reference",
                  "text": "Handler",
                  "canonicalReference": "stentor-models!Handler:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "previousHandler",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Storage#previousIntent:member",
              "docComment": "/**\n * The previous intent before the current\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "previousIntent?: "
                },
                {
                  "kind": "Reference",
                  "text": "Intent",
                  "canonicalReference": "stentor-models!Intent:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "previousIntent",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Storage#previousResponse:member",
              "docComment": "/**\n * The previous response given to the user.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "previousResponse?: "
                },
                {
                  "kind": "Reference",
                  "text": "Response",
                  "canonicalReference": "stentor-models!Response:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "previousResponse",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Storage#sessionStore:member",
              "docComment": "/**\n * Session raw data that is used to create the session store\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sessionStore?: "
                },
                {
                  "kind": "Reference",
                  "text": "SessionStoreData",
                  "canonicalReference": "stentor-models!SessionStoreData:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "sessionStore",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Storage#unknownInputs:member",
              "docComment": "/**\n * Number of consecutive InputUnknown requests received from the user\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "unknownInputs?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "unknownInputs",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!StorageAction:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface StorageAction extends "
            },
            {
              "kind": "Reference",
              "text": "KeyValue",
              "canonicalReference": "stentor-models!KeyValue:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "StorageAction",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!StorageAction#store:member",
              "docComment": "/**\n * Which storage to perform the action on.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "store: "
                },
                {
                  "kind": "Reference",
                  "text": "StorageType",
                  "canonicalReference": "stentor-models!StorageType:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "store",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!StorageAction#type:member",
              "docComment": "/**\n * The type of action to be performed on the storage.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type: "
                },
                {
                  "kind": "Reference",
                  "text": "StorageActionType",
                  "canonicalReference": "stentor-models!StorageActionType:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!StorageActionAdd:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type StorageActionAdd = "
            },
            {
              "kind": "Content",
              "text": "\"ADD\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "StorageActionAdd",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!StorageActionAppend:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type StorageActionAppend = "
            },
            {
              "kind": "Content",
              "text": "\"APPEND\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "StorageActionAppend",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!StorageActionDelete:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type StorageActionDelete = "
            },
            {
              "kind": "Content",
              "text": "\"DELETE\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "StorageActionDelete",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!StorageActionExecutor:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type StorageActionExecutor<S extends "
            },
            {
              "kind": "Reference",
              "text": "KeyValueStore",
              "canonicalReference": "stentor-models!KeyValueStore:interface"
            },
            {
              "kind": "Content",
              "text": " "
            },
            {
              "kind": "Content",
              "text": "= "
            },
            {
              "kind": "Reference",
              "text": "KeyValueStore",
              "canonicalReference": "stentor-models!KeyValueStore:interface"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "(storage: S, keyValue: "
            },
            {
              "kind": "Reference",
              "text": "KeyValue",
              "canonicalReference": "stentor-models!KeyValue:interface"
            },
            {
              "kind": "Content",
              "text": ") => S"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "StorageActionExecutor",
          "typeParameters": [
            {
              "typeParameterName": "S",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 6,
            "endIndex": 9
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!StorageActionSet:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type StorageActionSet = "
            },
            {
              "kind": "Content",
              "text": "\"SET\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "StorageActionSet",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!StorageActionSubtract:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type StorageActionSubtract = "
            },
            {
              "kind": "Content",
              "text": "\"SUBTRACT\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "StorageActionSubtract",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!StorageActionType:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type StorageActionType = "
            },
            {
              "kind": "Reference",
              "text": "StorageActionAdd",
              "canonicalReference": "stentor-models!StorageActionAdd:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "StorageActionAppend",
              "canonicalReference": "stentor-models!StorageActionAppend:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "StorageActionDelete",
              "canonicalReference": "stentor-models!StorageActionDelete:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "StorageActionSet",
              "canonicalReference": "stentor-models!StorageActionSet:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "StorageActionSubtract",
              "canonicalReference": "stentor-models!StorageActionSubtract:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "StorageActionType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 10
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!StorageDependable:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type StorageDependable<T> = "
            },
            {
              "kind": "Content",
              "text": "T & "
            },
            {
              "kind": "Reference",
              "text": "StorageDependent",
              "canonicalReference": "stentor-models!StorageDependent:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "StorageDependable",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!StorageDependent:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface StorageDependent "
            }
          ],
          "releaseTag": "Public",
          "name": "StorageDependent",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!StorageDependent#storageMatch:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "storageMatch: "
                },
                {
                  "kind": "Reference",
                  "text": "Match",
                  "canonicalReference": "stentor-models!Match:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "storageMatch",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!StorageDependentPath:type",
          "docComment": "/**\n * Path used if a particular key-value pair on the user's storage matches.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type StorageDependentPath = "
            },
            {
              "kind": "Reference",
              "text": "StorageDependable",
              "canonicalReference": "stentor-models!StorageDependable:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ExecutablePath",
              "canonicalReference": "stentor-models!ExecutablePath:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "CompilablePath",
              "canonicalReference": "stentor-models!CompilablePath:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "StorageDependentPath",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!StorageDependentResponse:type",
          "docComment": "/**\n * A response that is dependent on a value on user storage.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type StorageDependentResponse<T = "
            },
            {
              "kind": "Content",
              "text": "string | "
            },
            {
              "kind": "Reference",
              "text": "ResponseOutput",
              "canonicalReference": "stentor-models!ResponseOutput:interface"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Reference",
              "text": "StorageDependable",
              "canonicalReference": "stentor-models!StorageDependable:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "SimpleResponse",
              "canonicalReference": "stentor-models!SimpleResponse:interface"
            },
            {
              "kind": "Content",
              "text": "<T>>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "StorageDependentResponse",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 4,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!StorageDependentSegment:type",
          "docComment": "/**\n * A segment that is dependent on a value on user storage.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type StorageDependentSegment = "
            },
            {
              "kind": "Reference",
              "text": "StorageDependable",
              "canonicalReference": "stentor-models!StorageDependable:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "SimpleSegment",
              "canonicalReference": "stentor-models!SimpleSegment:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "StorageDependentSegment",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!StorageType:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type StorageType = "
            },
            {
              "kind": "Content",
              "text": "\"SESSION\" | \"PERMANENT\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "StorageType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!StripeAccount:interface",
          "docComment": "/**\n * A Stripe account is a payment account associated with the user.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface StripeAccount "
            }
          ],
          "releaseTag": "Public",
          "name": "StripeAccount",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!StripeAccount#customerId:member",
              "docComment": "/**\n * The ID of the customer in stripe that this organization is linked to.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "customerId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "customerId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!Suggestion:interface",
          "docComment": "/**\n * Suggested responses that a user can tap.\n *\n * The title has a limit of 25 characters.\n *\n * Only Google Assistant at the moment.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface Suggestion "
            }
          ],
          "releaseTag": "Public",
          "name": "Suggestion",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Suggestion#title:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "title: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "title",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!SuggestionObjectTypes:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type SuggestionObjectTypes = "
            },
            {
              "kind": "Reference",
              "text": "Suggestion",
              "canonicalReference": "stentor-models!Suggestion:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "LinkOutSuggestion",
              "canonicalReference": "stentor-models!LinkOutSuggestion:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "SuggestionObjectTypes",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!SuggestionTypes:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type SuggestionTypes = "
            },
            {
              "kind": "Reference",
              "text": "SimpleSuggestion",
              "canonicalReference": "stentor-models!SimpleSuggestion:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "SuggestionObjectTypes",
              "canonicalReference": "stentor-models!SuggestionObjectTypes:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "SuggestionTypes",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!SurfaceChangeRequest:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface SurfaceChangeRequest extends "
            },
            {
              "kind": "Reference",
              "text": "BaseRequest",
              "canonicalReference": "stentor-models!BaseRequest:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "SurfaceChangeRequest",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!SurfaceChangeRequest#granted:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "granted: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "granted",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!SurfaceChangeRequest#sessionId:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sessionId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "sessionId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!SurfaceChangeRequest#type:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type: "
                },
                {
                  "kind": "Reference",
                  "text": "SurfaceChangeRequestType",
                  "canonicalReference": "stentor-models!SurfaceChangeRequestType:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!SurfaceChangeRequestType:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type SurfaceChangeRequestType = "
            },
            {
              "kind": "Content",
              "text": "\"SURFACE_CHANGE_REQUEST\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "SurfaceChangeRequestType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!SystemConditionType:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type SystemConditionType = "
            },
            {
              "kind": "Content",
              "text": "\"!ACCOUNT_LINKED\" | \"ACCOUNT_LINKED\" | \"!HEALTH_CHECK\" | \"HEALTH_CHECK\" | \"!BARGE_IN\" | \"BARGE_IN\" | \"OPTION_SELECT\" | \"!OPTION_SELECT\" | \"PERMISSION_GRANTED\" | \"!PERMISSION_GRANTED\" | \"SURFACE_CHANGED\" | \"!SURFACE_CHANGED\" | \"NOTIFICATION_PERMISSION_GRANTED\" | \"!NOTIFICATION_PERMISSION_GRANTED\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "SystemConditionType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!SystemDependable:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type SystemDependable<T> = "
            },
            {
              "kind": "Content",
              "text": "T & "
            },
            {
              "kind": "Reference",
              "text": "SystemDependent",
              "canonicalReference": "stentor-models!SystemDependent:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "SystemDependable",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!SystemDependent:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface SystemDependent "
            }
          ],
          "releaseTag": "Public",
          "name": "SystemDependent",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!SystemDependent#systemCondition:member",
              "docComment": "/**\n * \"System state\". This is something that is not in slots, session or perm. data.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "systemCondition: "
                },
                {
                  "kind": "Reference",
                  "text": "SystemConditionType",
                  "canonicalReference": "stentor-models!SystemConditionType:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "systemCondition",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!SystemDependentPath:type",
          "docComment": "/**\n * Path that is dependent on a system request.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type SystemDependentPath = "
            },
            {
              "kind": "Reference",
              "text": "SystemDependable",
              "canonicalReference": "stentor-models!SystemDependable:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ExecutablePath",
              "canonicalReference": "stentor-models!ExecutablePath:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "CompilablePath",
              "canonicalReference": "stentor-models!CompilablePath:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "SystemDependentPath",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!SystemDependentResponse:type",
          "docComment": "/**\n * A response that is dependent on a system state such as if the user has linked their account.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type SystemDependentResponse<T = "
            },
            {
              "kind": "Content",
              "text": "string | "
            },
            {
              "kind": "Reference",
              "text": "ResponseOutput",
              "canonicalReference": "stentor-models!ResponseOutput:interface"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Reference",
              "text": "SystemDependable",
              "canonicalReference": "stentor-models!SystemDependable:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "SimpleResponse",
              "canonicalReference": "stentor-models!SimpleResponse:interface"
            },
            {
              "kind": "Content",
              "text": "<T>>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "SystemDependentResponse",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 4,
            "endIndex": 8
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!Template:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface Template extends "
            },
            {
              "kind": "Reference",
              "text": "Partial",
              "canonicalReference": "!Partial:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "App",
              "canonicalReference": "stentor-models!App:interface"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "name": "Template",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Template#collaborationAgreementUrl:member",
              "docComment": "/**\n * The collaboration agreement between the app and XAPP.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "collaborationAgreementUrl?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "collaborationAgreementUrl",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Template#templateType:member",
              "docComment": "/**\n * Template type.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "templateType: "
                },
                {
                  "kind": "Reference",
                  "text": "TemplateType",
                  "canonicalReference": "stentor-models!TemplateType:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "templateType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 5
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!TemplateType:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type TemplateType = "
            },
            {
              "kind": "Reference",
              "text": "RadioTemplateType",
              "canonicalReference": "stentor-models!RadioTemplateType:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "OnDemandTemplateType",
              "canonicalReference": "stentor-models!OnDemandTemplateType:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "CustomType",
              "canonicalReference": "stentor-models!CustomType:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "TemplateType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!TextContent:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface TextContent "
            }
          ],
          "releaseTag": "Public",
          "name": "TextContent",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!TextContent#primaryText:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "primaryText?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "primaryText",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!TextContent#secondaryText:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "secondaryText?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "secondaryText",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!TextContent#tertiaryText:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tertiaryText?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "tertiaryText",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Enum",
          "canonicalReference": "stentor-models!ThreeChoices:enum",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum ThreeChoices "
            }
          ],
          "releaseTag": "Public",
          "name": "ThreeChoices",
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "stentor-models!ThreeChoices.Maybe:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Maybe = "
                },
                {
                  "kind": "Content",
                  "text": "\"MAYBE\""
                }
              ],
              "releaseTag": "Public",
              "name": "Maybe",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "stentor-models!ThreeChoices.No:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "No = "
                },
                {
                  "kind": "Content",
                  "text": "\"NO\""
                }
              ],
              "releaseTag": "Public",
              "name": "No",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "stentor-models!ThreeChoices.Yes:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "Yes = "
                },
                {
                  "kind": "Content",
                  "text": "\"YES\""
                }
              ],
              "releaseTag": "Public",
              "name": "Yes",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!TimeContextual:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type TimeContextual<T> = "
            },
            {
              "kind": "Reference",
              "text": "Scheduled",
              "canonicalReference": "stentor-models!Scheduled:type"
            },
            {
              "kind": "Content",
              "text": "<T> | "
            },
            {
              "kind": "Reference",
              "text": "LastActive",
              "canonicalReference": "stentor-models!LastActive:type"
            },
            {
              "kind": "Content",
              "text": "<T>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "TimeContextual",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!UnspecifiedMediaType:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type UnspecifiedMediaType = "
            },
            {
              "kind": "Content",
              "text": "\"Media\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "UnspecifiedMediaType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!UserData:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type UserData = "
            },
            {
              "kind": "Content",
              "text": "(userDataType: "
            },
            {
              "kind": "Reference",
              "text": "UserDataType",
              "canonicalReference": "stentor-models!UserDataType:type"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "UserDataRequestStatus",
              "canonicalReference": "stentor-models!UserDataRequestStatus:enum"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "UserData",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "Enum",
          "canonicalReference": "stentor-models!UserDataRequestStatus:enum",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum UserDataRequestStatus "
            }
          ],
          "releaseTag": "Public",
          "name": "UserDataRequestStatus",
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "stentor-models!UserDataRequestStatus.AVAILABLE:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "AVAILABLE = "
                },
                {
                  "kind": "Content",
                  "text": "1"
                }
              ],
              "releaseTag": "Public",
              "name": "AVAILABLE",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "stentor-models!UserDataRequestStatus.DEFERRED:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "DEFERRED = "
                },
                {
                  "kind": "Content",
                  "text": "0"
                }
              ],
              "releaseTag": "Public",
              "name": "DEFERRED",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "stentor-models!UserDataRequestStatus.ERROR:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ERROR = "
                },
                {
                  "kind": "Content",
                  "text": "3"
                }
              ],
              "releaseTag": "Public",
              "name": "ERROR",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "stentor-models!UserDataRequestStatus.NOT_AVAILABLE:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "NOT_AVAILABLE = "
                },
                {
                  "kind": "Content",
                  "text": "2"
                }
              ],
              "releaseTag": "Public",
              "name": "NOT_AVAILABLE",
              "initializerTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!UserDataType:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type UserDataType = "
            },
            {
              "kind": "Content",
              "text": "\"EMAIL\" | \"NAME\" | \"DEVICE_COARSE_LOCATION\" | \"DEVICE_PRECISE_LOCATION\" | \"PHONE_NUMBER\" | \"LIST\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "UserDataType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!UserDataValue:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UserDataValue "
            }
          ],
          "releaseTag": "Public",
          "name": "UserDataValue",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!UserDataValue#requestStatus:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "requestStatus: "
                },
                {
                  "kind": "Reference",
                  "text": "UserDataRequestStatus",
                  "canonicalReference": "stentor-models!UserDataRequestStatus:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "requestStatus",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!UserDataValue#userProfile:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "userProfile?: "
                },
                {
                  "kind": "Reference",
                  "text": "UserProfile",
                  "canonicalReference": "stentor-models!UserProfile:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "userProfile",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!UserProfile:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UserProfile "
            }
          ],
          "releaseTag": "Public",
          "name": "UserProfile",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!UserProfile#coarseLocation:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "coarseLocation?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "coarseLocation",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!UserProfile#email:member",
              "docComment": "/**\n * The email of the user.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "email?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "email",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!UserProfile#name:member",
              "docComment": "/**\n * The first name, or given name, of the user.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "name?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!UserProfile#notificationGranted:member",
              "docComment": "/**\n * User granted permission to update Note: This isn't a piece of data we want to know, but Google uses the permissioning mechanism to grant it.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "notificationGranted?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "notificationGranted",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!UserProfile#phone:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "phone?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "phone",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!UserProfile#preciseLocation:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "preciseLocation?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "preciseLocation",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!UserStorageService:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface UserStorageService "
            }
          ],
          "releaseTag": "Public",
          "name": "UserStorageService",
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "stentor-models!UserStorageService#create:member(1)",
              "docComment": "/**\n * Creates the storage for the provided ID\n *\n * @param  - id\n *\n * @param  - storage\n *\n * @returns \n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "create(id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", storage: "
                },
                {
                  "kind": "Reference",
                  "text": "Storage",
                  "canonicalReference": "stentor-models!Storage:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Storage",
                  "canonicalReference": "stentor-models!Storage:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "storage",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "create"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "stentor-models!UserStorageService#get:member(1)",
              "docComment": "/**\n * Get the storage for the provided ID\n *\n * @param  - id\n *\n * @returns \n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get(id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Storage",
                  "canonicalReference": "stentor-models!Storage:interface"
                },
                {
                  "kind": "Content",
                  "text": " | undefined>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "get"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "stentor-models!UserStorageService#update:member(1)",
              "docComment": "/**\n * Update the storage for the provided ID with provided storage.\n *\n * @param  - id\n *\n * @param  - storage\n *\n * @returns \n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "update(id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", storage: "
                },
                {
                  "kind": "Reference",
                  "text": "Storage",
                  "canonicalReference": "stentor-models!Storage:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Storage",
                  "canonicalReference": "stentor-models!Storage:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "storage",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "update"
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!ValueTypes:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type ValueTypes = "
            },
            {
              "kind": "Content",
              "text": "object | string | number | boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ValueTypes",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!Video:interface",
          "docComment": "/**\n * Video media\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface Video extends "
            },
            {
              "kind": "Reference",
              "text": "PlayableMedia",
              "canonicalReference": "stentor-models!PlayableMedia:type"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "Video",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Video#type:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type: "
                },
                {
                  "kind": "Reference",
                  "text": "VideoType",
                  "canonicalReference": "stentor-models!VideoType:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!VideoLiveStream:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface VideoLiveStream extends "
            },
            {
              "kind": "Reference",
              "text": "Video",
              "canonicalReference": "stentor-models!Video:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "VideoLiveStream",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!VideoLiveStream#length:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "length: "
                },
                {
                  "kind": "Content",
                  "text": "-1"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "length",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!VideoLiveStream#type:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type: "
                },
                {
                  "kind": "Reference",
                  "text": "VideoLiveStreamType",
                  "canonicalReference": "stentor-models!VideoLiveStreamType:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!VideoLiveStreamType:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type VideoLiveStreamType = "
            },
            {
              "kind": "Content",
              "text": "\"VideoLiveStream\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "VideoLiveStreamType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!VideoType:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type VideoType = "
            },
            {
              "kind": "Reference",
              "text": "GenericVideoType",
              "canonicalReference": "stentor-models!GenericVideoType:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "VideoLiveStreamType",
              "canonicalReference": "stentor-models!VideoLiveStreamType:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "VideoType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!Visuals:interface",
          "docComment": "/**\n * An object that can be displayed.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface Visuals "
            }
          ],
          "releaseTag": "Public",
          "name": "Visuals",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Visuals#largeImageUrl:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "largeImageUrl?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "largeImageUrl",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!Visuals#smallImageUrl:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "smallImageUrl?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "smallImageUrl",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "stentor-models!VoiceLabsDataStream:interface",
          "docComment": "/**\n * Data for VoiceLabs\n *\n * See {@link http://voicelabs.co/}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface VoiceLabsDataStream extends "
            },
            {
              "kind": "Reference",
              "text": "BaseDataStream",
              "canonicalReference": "stentor-models!BaseDataStream:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "VoiceLabsDataStream",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!VoiceLabsDataStream#alexaToken:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "alexaToken?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "alexaToken",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!VoiceLabsDataStream#googleToken:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "googleToken?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "googleToken",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "stentor-models!VoiceLabsDataStream#type:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type: "
                },
                {
                  "kind": "Reference",
                  "text": "VoiceLabsDataStreamType",
                  "canonicalReference": "stentor-models!VoiceLabsDataStreamType:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!VoiceLabsDataStreamType:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type VoiceLabsDataStreamType = "
            },
            {
              "kind": "Content",
              "text": "\"voiceLabs\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "VoiceLabsDataStreamType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "stentor-models!YesIntent:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type YesIntent = "
            },
            {
              "kind": "Content",
              "text": "\"YesIntent\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "YesIntent",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        }
      ]
    }
  ]
}
