AWSTemplateFormatVersion: '2010-09-09'
Description: 'Stentor API Documentation Infrastructure - S3 + CloudFront'

Parameters:
  BucketName:
    Type: String
    Default: stentor-api-docs
    Description: Name for the S3 bucket hosting the documentation
  
  Environment:
    Type: String
    Default: production
    AllowedValues: [production, staging, development]
    Description: Environment name for resource tagging

Resources:
  # S3 Bucket for hosting static website
  DocumentationBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref BucketName
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: 404.html
      PublicReadPolicy:
        Version: '2012-10-17'
        Statement:
          - Sid: PublicReadGetObject
            Effect: Allow
            Principal: '*'
            Action: 's3:GetObject'
            Resource: !Sub '${DocumentationBucket}/*'
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders: ['*']
            AllowedMethods: [GET]
            AllowedOrigins: ['*']
            MaxAge: 3600
      VersioningConfiguration:
        Status: Enabled
      LifecycleConfiguration:
        Rules:
          - Id: DeleteOldVersions
            Status: Enabled
            NoncurrentVersionExpirationInDays: 30
      Tags:
        - Key: Project
          Value: Stentor
        - Key: Component  
          Value: Documentation
        - Key: Environment
          Value: !Ref Environment

  # CloudFront Origin Access Identity  
  OriginAccessIdentity:
    Type: AWS::CloudFront::OriginAccessIdentity
    Properties:
      OriginAccessIdentityConfig:
        Comment: !Sub 'OAI for ${BucketName}'

  # CloudFront Distribution
  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Enabled: true
        Comment: !Sub '${BucketName} Documentation CDN'
        DefaultRootObject: index.html
        
        # Origins
        Origins:
          - Id: S3Origin
            DomainName: !GetAtt DocumentationBucket.RegionalDomainName
            S3OriginConfig:
              OriginAccessIdentity: !Sub 'origin-access-identity/cloudfront/${OriginAccessIdentity}'
        
        # Default Cache Behavior
        DefaultCacheBehavior:
          TargetOriginId: S3Origin
          ViewerProtocolPolicy: redirect-to-https
          CachePolicyId: 4135ea2d-6df8-44a3-9df3-4b5a84be39ad # Managed-CachingDisabled
          OriginRequestPolicyId: 88a5eaf4-2fd4-4709-b370-b4c650ea3fcf # Managed-CORS-S3Origin
          ResponseHeadersPolicyId: 60669652-455b-4ae9-85a4-d4c5ea2a8090 # Managed-SimpleCORS
          Compress: true
          
        # Custom Cache Behaviors
        CacheBehaviors:
          # Cache static assets for 1 year
          - PathPattern: '*.js'
            TargetOriginId: S3Origin
            ViewerProtocolPolicy: redirect-to-https
            CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6 # Managed-CachingOptimized
            Compress: true
          - PathPattern: '*.css'
            TargetOriginId: S3Origin
            ViewerProtocolPolicy: redirect-to-https
            CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6 # Managed-CachingOptimized
            Compress: true
          - PathPattern: '*.png'
            TargetOriginId: S3Origin
            ViewerProtocolPolicy: redirect-to-https
            CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6 # Managed-CachingOptimized
          - PathPattern: '*.jpg'
            TargetOriginId: S3Origin
            ViewerProtocolPolicy: redirect-to-https
            CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6 # Managed-CachingOptimized
          - PathPattern: '*.svg'
            TargetOriginId: S3Origin
            ViewerProtocolPolicy: redirect-to-https
            CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6 # Managed-CachingOptimized
            
        # Error Pages
        CustomErrorResponses:
          - ErrorCode: 404
            ResponseCode: 404
            ResponsePagePath: '/404.html'
            ErrorCachingMinTTL: 300
          - ErrorCode: 403
            ResponseCode: 404
            ResponsePagePath: '/404.html'
            ErrorCachingMinTTL: 300
            
        # Geographic Restrictions  
        Restrictions:
          GeoRestriction:
            RestrictionType: none
            
        # Logging
        Logging:
          Bucket: !GetAtt LoggingBucket.DomainName
          IncludeCookies: false
          Prefix: 'cloudfront-logs/'
          
        # Price Class
        PriceClass: PriceClass_100 # US, Canada, Europe
        
      Tags:
        - Key: Project
          Value: Stentor
        - Key: Component
          Value: Documentation  
        - Key: Environment
          Value: !Ref Environment

  # S3 Bucket for CloudFront Logs
  LoggingBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub '${BucketName}-logs'
      LifecycleConfiguration:
        Rules:
          - Id: DeleteLogs
            Status: Enabled
            ExpirationInDays: 90
      Tags:
        - Key: Project
          Value: Stentor
        - Key: Component
          Value: DocumentationLogs
        - Key: Environment
          Value: !Ref Environment

  # Bucket Policy for CloudFront Access
  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref DocumentationBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: AllowCloudFrontAccess
            Effect: Allow
            Principal:
              AWS: !Sub 'arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ${OriginAccessIdentity}'
            Action: 's3:GetObject'
            Resource: !Sub '${DocumentationBucket}/*'

Outputs:
  BucketName:
    Description: 'S3 Bucket name for documentation'
    Value: !Ref DocumentationBucket
    Export:
      Name: !Sub '${AWS::StackName}-BucketName'
      
  BucketWebsiteURL:
    Description: 'S3 Website URL'
    Value: !GetAtt DocumentationBucket.WebsiteURL
    Export:
      Name: !Sub '${AWS::StackName}-WebsiteURL'
      
  CloudFrontDistributionId:
    Description: 'CloudFront Distribution ID'
    Value: !Ref CloudFrontDistribution
    Export:
      Name: !Sub '${AWS::StackName}-DistributionId'
      
  CloudFrontURL:
    Description: 'CloudFront Distribution URL'
    Value: !Sub 'https://${CloudFrontDistribution.DomainName}'
    Export:
      Name: !Sub '${AWS::StackName}-CloudFrontURL'
      
  LoggingBucket:
    Description: 'S3 Bucket for CloudFront logs'
    Value: !Ref LoggingBucket
    Export:
      Name: !Sub '${AWS::StackName}-LoggingBucket'